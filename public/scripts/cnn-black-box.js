/*! For license information please see cnn-black-box.js.LICENSE.txt */
(()=>{var e={570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=l(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?b:m;if(t){if(e<0)return b;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():l(e%d|0,e/d|0,t)}function l(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(u(n,8)),a=m,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var d=o(u(n,l));a=a.mul(d).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var d=4294967296,p=d*d,f=p/2,g=i(1<<24),m=i(0);n.ZERO=m;var b=i(0,!0);n.UZERO=b;var y=i(1);n.ONE=y;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=l(-1,2147483647,!1);n.MAX_VALUE=w;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var C=n.prototype;C.toInt=function(){return this.unsigned?this.low>>>0:this.low},C.toNumber=function(){return this.unsigned?(this.high>>>0)*d+(this.low>>>0):this.high*d+(this.low>>>0)},C.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(s),c=(a.sub(l.mul(s)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},C.getHighBits=function(){return this.high},C.getHighBitsUnsigned=function(){return this.high>>>0},C.getLowBits=function(){return this.low},C.getLowBitsUnsigned=function(){return this.low>>>0},C.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},C.isZero=function(){return 0===this.high&&0===this.low},C.eqz=C.isZero,C.isNegative=function(){return!this.unsigned&&this.high<0},C.isPositive=function(){return this.unsigned||this.high>=0},C.isOdd=function(){return!(1&~this.low)},C.isEven=function(){return!(1&this.low)},C.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},C.eq=C.equals,C.notEquals=function(e){return!this.eq(e)},C.neq=C.notEquals,C.ne=C.notEquals,C.lessThan=function(e){return this.comp(e)<0},C.lt=C.lessThan,C.lessThanOrEqual=function(e){return this.comp(e)<=0},C.lte=C.lessThanOrEqual,C.le=C.lessThanOrEqual,C.greaterThan=function(e){return this.comp(e)>0},C.gt=C.greaterThan,C.greaterThanOrEqual=function(e){return this.comp(e)>=0},C.gte=C.greaterThanOrEqual,C.ge=C.greaterThanOrEqual,C.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},C.comp=C.compare,C.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(y)},C.neg=C.negate,C.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,d=0,p=0,f=0;return p+=(f+=a+(65535&e.low))>>>16,d+=(p+=s+u)>>>16,c+=(d+=n+o)>>>16,c+=t+i,l((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(d&=65535),this.unsigned)},C.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},C.sub=C.subtract,C.multiply=function(e){if(this.isZero())return m;if(r(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(I))return e.isOdd()?I:m;if(e.eq(I))return this.isOdd()?I:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,d=e.low>>>16,p=65535&e.low,f=0,b=0,y=0,x=0;return y+=(x+=i*p)>>>16,b+=(y+=a*p)>>>16,y&=65535,b+=(y+=i*d)>>>16,f+=(b+=s*p)>>>16,b&=65535,f+=(b+=a*d)>>>16,b&=65535,f+=(b+=i*c)>>>16,f+=n*p+s*d+a*c+i*u,l((y&=65535)<<16|(x&=65535),(f&=65535)<<16|(b&=65535),this.unsigned)},C.mul=C.multiply,C.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return x;a=b}else{if(this.eq(I))return e.eq(y)||e.eq(v)?I:e.eq(I)?y:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?y:v:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(I))return this.unsigned?b:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=m}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),d=o(n),p=d.mul(e);p.isNegative()||p.gt(s);)p=(d=o(n-=c,this.unsigned)).mul(e);d.isZero()&&(d=y),a=a.add(d),s=s.sub(p)}return a},C.div=C.divide,C.modulo=function(e){return r(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},C.mod=C.modulo,C.rem=C.modulo,C.not=function(){return l(~this.low,~this.high,this.unsigned)},C.and=function(e){return r(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},C.or=function(e){return r(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},C.xor=function(e){return r(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},C.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},C.shl=C.shiftLeft,C.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},C.shr=C.shiftRight,C.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},C.shru=C.shiftRightUnsigned,C.shr_u=C.shiftRightUnsigned,C.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},C.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},C.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},C.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},C.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},391:(e,t,n)=>{var r=n(180),s=n(181),a=n(31),i=n(67),o=n(833),l=n(717),u=n(801);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},180:function(e,t,n){var r;!function(e,s){function a(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new a(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},833:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var r;!function(e,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var r;!function(e,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new a(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&i(r,n),s.state=function(){return i(n,{})}),s}s&&s.exports?s.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,s))||(s.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(s,a,i){var o,l=256,u=i.pow(l,6),c=i.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(s.crypto||s.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,y(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,b(y(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(i.random=e,t):e})(x,d,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(b(i.random(),a),e.exports){e.exports=p;try{o=n(234)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},817:()=>{},590:()=>{},530:()=>{},108:()=>{},551:()=>{},234:()=>{}},t={};function n(r){var s=t[r];if(void 0!==s)return s.exports;var a=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.loaded=!0,a.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e={};n.r(e),n.d(e,{assertParamsValid:()=>ci,computeFlatOffset:()=>Ii,computeOutShape:()=>di,getNormalizedAxes:()=>mi,isSliceContinous:()=>ki,maskToAxes:()=>hi,parseSliceParams:()=>Ci,sliceInfo:()=>Si,startForAxis:()=>vi,startIndicesWithElidedDims:()=>bi,stopForAxis:()=>wi,stopIndicesWithElidedDims:()=>yi,stridesForAxis:()=>xi,stridesWithElidedDims:()=>pi});var t={};n.r(t),n.d(t,{collectGatherOpShapeInfo:()=>Uc,computeOutShape:()=>Wc,segOpComputeOptimalWindowSize:()=>Bc});var r={};n.r(r),n.d(r,{ERF_A1:()=>sc,ERF_A2:()=>ac,ERF_A3:()=>ic,ERF_A4:()=>oc,ERF_A5:()=>lc,ERF_P:()=>rc,PARALLELIZE_THRESHOLD:()=>Vu,RowPartitionType:()=>zu,SELU_SCALE:()=>nc,SELU_SCALEALPHA:()=>tc,applyActivation:()=>Gl,assertAndGetBroadcastShape:()=>ja,assertAxesAreInnerMostDims:()=>Lo,assertParamsConsistent:()=>Lu,assignToTypedArray:()=>fc,axesAreInnerMostDims:()=>_o,calculateShapes:()=>ec,checkEinsumDimSizes:()=>Ic,checkPadOnDimRoundingMode:()=>Gi,combineLocations:()=>Fo,combineRaggedTensorToTensorShapes:()=>Pu,complexWithEvenIndex:()=>hc,complexWithOddIndex:()=>dc,computeConv2DInfo:()=>Fi,computeConv3DInfo:()=>Di,computeDefaultPad:()=>Oi,computeDilation2DInfo:()=>Ri,computeOptimalWindowSize:()=>Gu,computeOutAndReduceShapes:()=>Do,computeOutShape:()=>Mu,computePool2DInfo:()=>Ai,computePool3DInfo:()=>_i,convertConv2DDataFormat:()=>Vi,decodeEinsumEquation:()=>wc,eitherStridesOrDilationsAreOne:()=>Wi,expandShapeToKeepDim:()=>Oo,exponent:()=>mc,exponents:()=>gc,fromStringArrayToUint8:()=>Gc,fromUint8ToStringArray:()=>Vc,getAxesPermutation:()=>Mo,getBroadcastDims:()=>Ga,getComplexWithIndex:()=>pc,getEinsumComputePath:()=>Cc,getEinsumPermutation:()=>kc,getFusedBiasGradient:()=>Vl,getFusedDyActivation:()=>Ul,getImageCenter:()=>Hu,getInnerMostAxes:()=>Po,getPermuted:()=>qu,getRaggedRank:()=>Wu,getReductionAxes:()=>Ha,getReshaped:()=>ju,getReshapedPermuted:()=>Ku,getRowPartitionTypesHelper:()=>Bu,getSliceBeginCoords:()=>Xu,getSliceSize:()=>Yu,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>Tc,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>Ec,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>Rc,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>Fc,getSparseReshapeInputOutputMismatchErrorMessage:()=>Oc,getSparseReshapeInputOutputMultipleErrorMessage:()=>Dc,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>Ac,getSparseReshapeNegativeOutputDimErrorMessage:()=>_c,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Pc,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Lc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Mc,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>zc,getUndoAxesPermutation:()=>zo,isIdentityPermutation:()=>Sc,log:()=>cr,mergeRealAndImagArrays:()=>uc,prepareAndValidate:()=>Ju,prepareSplitSize:()=>Nc,segment_util:()=>t,shouldFuse:()=>Hl,slice_util:()=>e,splitRealAndImagArrays:()=>cc,stridesOrDilationsArePositive:()=>Ui,tupleValuesAreOne:()=>Bi,upcastType:()=>ls,validateDefaultValueShape:()=>Uu,validateInput:()=>Qu,validateUpdateShape:()=>Zu,warn:()=>ur});var s={};n.r(s),n.d(s,{mx:()=>yv,XI:()=>cw,Nk:()=>hw,f6:()=>pw,ct:()=>pv,YG:()=>mw,hH:()=>kw,z3:()=>ik,sG:()=>bk,uM:()=>kk,vS:()=>Pk,qB:()=>qk,GG:()=>Xk,lg:()=>eI,rq:()=>Jk,cu:()=>pI,WR:()=>cI,GE:()=>mI,px:()=>yI,jC:()=>FI,He:()=>LI,hE:()=>jI,BF:()=>Zw,Dk:()=>nC,cl:()=>cC,_B:()=>IC,ub:()=>$C,_f:()=>EC,Ku:()=>OC,qy:()=>MC,Zy:()=>XC,bu:()=>ZC,zv:()=>sv,dH:()=>Nv,HS:()=>iw,yH:()=>yS,l3:()=>vS,z9:()=>kS,x6:()=>NS,_m:()=>DS,eW:()=>zS,GK:()=>WS,SP:()=>GS,yr:()=>jS,dl:()=>Tk,Dw:()=>ZS,xT:()=>n$,_X:()=>Dv,wz:()=>u$});class a{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class i{refCount(e){return o("refCount")}incRef(e){return o("incRef")}timerAvailable(){return!0}time(e){return o("time")}read(e){return o("read")}readSync(e){return o("readSync")}readToGPU(e,t){return o("readToGPU")}numDataIds(){return o("numDataIds")}disposeData(e,t){return o("disposeData")}write(e,t,n){return o("write")}move(e,t,n,r,s){return o("move")}createTensorFromGPUData(e,t,n){return o("createTensorFromGPUData")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return o("dispose")}}function o(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,h(e,t,n)}function u(e,t,n){return Math.max(e,Math.min(t,n))}function c(e){return e%2==0?e:e+1}function h(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(m(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function f(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function g(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function y(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function x(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function v(e,t=e=>0,n,r){return new Promise(((s,a)=>{let i=0;const o=()=>{if(e())return void s();i++;const l=t(i);null!=n&&i>=n?a():null!=r?r(o,l):setTimeout(o,l)};o()}))}function w(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function k(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function I(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:k(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){return S(e,t)}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function $(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function N(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function T(e){return"string"==typeof e||e instanceof String}function E(e){return"number"==typeof e}function R(e){return Array.isArray(e)?R(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":E(e)?"float32":T(e)?"string":"boolean"==typeof e?"bool":"float32"}function A(e){return!!(e&&e.constructor&&e.call&&e.apply)}function _(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function F(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function D(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=D(e+t*o,i,n,r)}return s}function O(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return D(0,e,t,n)}function L(e,t){const n=M(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function M(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function z(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return O(e,new Float32Array(n));if("int32"===t)return O(e,new Int32Array(n));if("bool"===t)return O(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function P(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function B(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function W(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function U(e){return e&&e.then&&"function"==typeof e.then}const V="tfjsflags";class G{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=H,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(U(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);V in e&&e[V].split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}(0,n)}))}}function H(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function j(){return K}let q,K=null;function X(){if(null==q){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}q=e}return q}function Y(e,t){const n=function(){const e=X();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const J="Abs",Z="Acos",Q="Acosh",ee="Add",te="AddN",ne="All",re="Any",se="ArgMax",ae="ArgMin",ie="Asin",oe="Asinh",le="Atan",ue="Atanh",ce="Atan2",he="AvgPool",de="AvgPoolGrad",pe="AvgPool3D",fe="AvgPool3DGrad",ge="BatchMatMul",me="BatchToSpaceND",be="Bincount",ye="BitwiseAnd",xe="BroadcastArgs",ve="Cast",we="Ceil",ke="ClipByValue",Ie="Complex",Ce="ComplexAbs",Se="Concat",$e="Conv2D",Ne="Conv2DBackpropFilter",Te="Conv2DBackpropInput",Ee="Conv3D",Re="Conv3DBackpropFilterV2",Ae="Conv3DBackpropInputV2",_e="Cos",Fe="Cosh",De="Cumprod",Oe="Cumsum",Le="CropAndResize",Me="DenseBincount",ze="DepthToSpace",Pe="DepthwiseConv2dNative",Be="DepthwiseConv2dNativeBackpropFilter",We="DepthwiseConv2dNativeBackpropInput",Ue="Diag",Ve="Dilation2D",Ge="Dilation2DBackpropInput",He="Dilation2DBackpropFilter",je="Draw",qe="RealDiv",Ke="Einsum",Xe="Elu",Ye="EluGrad",Je="Erf",Ze="Equal",Qe="Exp",et="ExpandDims",tt="Expm1",nt="FFT",rt="Fill",st="FlipLeftRight",at="Floor",it="FloorDiv",ot="FusedBatchNorm",lt="GatherV2",ut="GatherNd",ct="Greater",ht="GreaterEqual",dt="Identity",pt="IFFT",ft="Imag",gt="IsFinite",mt="IsInf",bt="IsNan",yt="LeakyRelu",xt="Less",vt="LessEqual",wt="LinSpace",kt="Log",It="Log1p",Ct="LogicalAnd",St="LogicalNot",$t="LogicalOr",Nt="LRN",Tt="LRNGrad",Et="Max",Rt="Maximum",At="MaxPool",_t="MaxPoolGrad",Ft="MaxPool3D",Dt="MaxPool3DGrad",Ot="MaxPoolWithArgmax",Lt="Mean",Mt="Min",zt="Minimum",Pt="MirrorPad",Bt="Mod",Wt="Multinomial",Ut="Multiply",Vt="Neg",Gt="NotEqual",Ht="NonMaxSuppressionV3",jt="NonMaxSuppressionV4",qt="NonMaxSuppressionV5",Kt="OnesLike",Xt="OneHot",Yt="Pack",Jt="PadV2",Zt="Pow",Qt="Prelu",en="Prod",tn="RaggedGather",nn="RaggedRange",rn="RaggedTensorToTensor",sn="Range",an="Real",on="Reciprocal",ln="Relu",un="Reshape",cn="ResizeNearestNeighbor",hn="ResizeNearestNeighborGrad",dn="ResizeBilinear",pn="ResizeBilinearGrad",fn="Relu6",gn="Reverse",mn="Round",bn="Rsqrt",yn="ScatterNd",xn="TensorScatterUpdate",vn="SearchSorted",wn="Select",kn="Selu",In="Slice",Cn="Sin",Sn="Sinh",$n="Sign",Nn="Sigmoid",Tn="Softplus",En="Sqrt",Rn="Sum",An="SpaceToBatchND",_n="SplitV",Fn="Softmax",Dn="SparseFillEmptyRows",On="SparseReshape",Ln="SparseSegmentMean",Mn="SparseSegmentSum",zn="SparseToDense",Pn="SquaredDifference",Bn="Square",Wn="StaticRegexReplace",Un="StridedSlice",Vn="StringNGrams",Gn="StringSplit",Hn="StringToHashBucketFast",jn="Sub",qn="Tan",Kn="Tanh",Xn="Tile",Yn="TopK",Jn="Transform",Zn="Transpose",Qn="Unique",er="Unpack",tr="UnsortedSegmentSum",nr="ZerosLike",rr="Step",sr="FromPixels",ar="RotateWithOffset",ir="_FusedMatMul",or="FusedConv2D",lr="FusedDepthwiseConv2D";function ur(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.warn(...e)}function cr(...e){j().getBool("IS_TEST")||j().getBool("PROD")||console.log(...e)}const hr=Y("kernelRegistry",(()=>new Map)),dr=Y("gradRegistry",(()=>new Map));function pr(e,t){const n=yr(e,t);return hr.get(n)}function fr(e){return dr.get(e)}function gr(e){const t=hr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function mr(e){const{kernelName:t,backendName:n}=e,r=yr(t,n);hr.has(r)&&ur(`The kernel '${t}' for backend '${n}' is already registered`),hr.set(r,e)}function br(e){const{kernelName:t}=e;dr.has(t)&&j().getBool("DEBUG")&&ur(`Overriding the gradient for '${t}'`),dr.set(t,e)}function yr(e,t){return`${t}_${e}`}function xr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var vr=n(570);const wr=n.n(vr)()||vr;function kr(e){return wr.fromString(e,!0,16)}const Ir=kr("c3a5c85c97cb3127"),Cr=kr("b492b66fbe98f273"),Sr=kr("9ae16a3b2f90404f");function $r(e){return e.xor(e.shru(47))}function Nr(e,t,n){const r=e.slice(t,t+n);return wr.fromBytes(Array.from(r),!0,!0)}function Tr(e,t){return Nr(e,t,8)}function Er(e,t){return Nr(e,t,4)}function Rr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ar(e,t,n=kr("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function _r(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Rr(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Rr(s,44)),[s.add(r),a.add(i)]}(Tr(e,t),Tr(e,t+8),Tr(e,t+16),Tr(e,t+24),n,r)}function Fr(e,t=e.length){const n=wr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Sr.add(2*t),r=Tr(e,0).add(Sr),s=Tr(e,t-8);return Ar(Rr(s,37).mul(n).add(r),Rr(r,25).add(s).mul(n),n)}if(t>=4){const n=Sr.add(2*t);return Ar(Er(e,0).shl(3).add(t),Er(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return $r(Sr.mul(n).xor(Ir.mul(r))).mul(Sr)}return Sr}(e,t):function(e,t=e.length){const n=Sr.add(2*t),r=Tr(e,0).mul(Cr),s=Tr(e,8),a=Tr(e,t-8).mul(n),i=Tr(e,t-16).mul(Sr);return Ar(Rr(r.add(s),43).add(Rr(a,30)).add(i),r.add(Rr(s.add(Sr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Sr.add(2*t),r=Tr(e,0).mul(Sr),s=Tr(e,8),a=Tr(e,t-8).mul(n),i=Tr(e,t-16).mul(Sr),o=Rr(r.add(s),43).add(Rr(a,30)).add(i),l=Ar(o,r.add(Rr(s.add(Sr),18)).add(a),n),u=Tr(e,16).mul(n),c=Tr(e,24),h=o.add(Tr(e,t-32)).mul(n),d=l.add(Tr(e,t-24)).mul(n);return Ar(Rr(u.add(c),43).add(Rr(h,30)).add(d),u.add(Rr(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(Cr).add(113),a=$r(s.mul(Sr).add(113)).mul(Sr),i=[wr.UZERO,wr.UZERO],o=[wr.UZERO,wr.UZERO];r=r.mul(Sr).add(Tr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{r=Rr(r.add(s).add(i[0]).add(Tr(e,l+8)),37).mul(Cr),s=Rr(s.add(i[1]).add(Tr(e,l+48)),42).mul(Cr),r=r.xor(o[1]),s=s.add(i[0]).add(Tr(e,l+40)),a=Rr(a.add(o[0]),33).mul(Cr),i=_r(e,l,i[1].mul(Cr),r.add(o[0])),o=_r(e,l+32,a.add(o[1]),s.add(Tr(e,l+16))),[a,r]=[r,a],l+=64}while(l!==u);const h=Cr.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Rr(r.add(s).add(i[0]).add(Tr(e,l+8)),37).mul(h),s=Rr(s.add(i[1]).add(Tr(e,l+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Tr(e,l+40))),a=Rr(a.add(o[0]),33).mul(h),i=_r(e,l,i[1].mul(h),r.add(o[0])),o=_r(e,l+32,a.add(o[1]),s.add(Tr(e,l+16))),[a,r]=[r,a],Ar(Ar(i[0],o[0],h).add($r(s).mul(Ir)).add(a),Ar(i[1],o[1],h).add(r),h)}function Dr(e,t){return"string"===t?Mr(e):Or([e],t)}function Or(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Br(e)),j().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Lr(){return j().platform.now()}function Mr(e,t="utf-8"){return t=t||"utf-8",j().platform.encode(e,t)}function zr(e,t="utf-8"){return t=t||"utf-8",j().platform.decode(e,t)}function Pr(e){return null!=j().platform.isTypedArray?j().platform.isTypedArray(e):xr(e)}function Br(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"==typeof e||"number"==typeof e||"string"==typeof e||U(e)||null==e||Pr(e)&&n)t.push(e);else if(Array.isArray(e)||Pr(e))for(let r=0;r<e.length;++r)Br(e[r],t,n);else{let r=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(r=Math.max(r,Number(t)));for(let s=0;s<=r;s++)Br(e[s],t,n)}return t}class Wr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Vr)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Lr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Lr()-i})}if(j().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Ur(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Ur(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Vr{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?x(`${r}ms`,9):r.error,o=x(e,25),l=t.rank,u=t.size,c=x(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Gr(e,t,n,r){const s=F(t),a=function(e,t,n,r){const s=g(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Kr(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Hr(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=qr(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Hr(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:T(e)?`'${e}'`:"bool"===n?jr(e):parseFloat(e.toFixed(7)).toString(),x(r,t)}function jr(e){return 0===e?"false":"true"}function qr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Hr(Kr(e)[0],0,n)]:"bool"===n?[jr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Kr(r),a=Kr(a)),["["+r.map(((e,t)=>Hr(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Hr(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Kr(e):Array.from(e)).map(((e,t)=>Hr(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...qr(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...qr(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...qr(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Kr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Xr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=g(e),null!=n){const e=n.length;d(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||S(t,this.size),this.strides=F(e)}set(e,...t){0===t.length&&(t=[0]),d(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Yr().makeTensor(this.values,this.shape,this.dtype)}}let Yr=null,Jr=null,Zr=null;class Qr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=g(e),this.strides=F(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Jr.buffer(this.shape,this.dtype,e)}bufferSync(){return Jr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return O(this.shape,e,"complex64"===this.dtype)}arraySync(){return O(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Yr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Yr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Yr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>zr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Yr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),Yr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Jr.print(this,e)}clone(){return this.throwIfDisposed(),Jr.clone(this)}toString(e=!1){return Gr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Jr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Yr().makeVariable(this,e,t,n)}}function es(){return Y("Tensor",(()=>Qr))}Object.defineProperty(Qr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),es();class ts extends Qr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!m(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Yr().disposeTensor(this),this.dataId=e.dataId,Yr().incRef(this,null)}dispose(){Yr().disposeVariable(this),this.isDisposedInternal=!0}}var ns,rs,ss,as,is;Object.defineProperty(ts,Symbol.hasInstance,{value:e=>e instanceof Qr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ns||(ns={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(rs||(rs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ss||(ss={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(as||(as={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(is||(is={}));const os={float32:as,int32:rs,bool:ss,complex64:is};function ls(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return os[e][t]}function us(e){return ls(e,"int32")}function cs(e){return null!=e&&"object"==typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function hs(e){return"undefined"!=typeof GPUBuffer&&null!=e&&"object"==typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}function ds(e,t){if(e.dtype===t.dtype)return[e,t];const n=ls(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ps(e,t){return t.some((t=>t.id===e.id))}function fs(e){const t=[];return gs(e,t,new Set),t}function gs(e,t,n){if(null==e)return;if(e instanceof Qr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),gs(r,t,n))}}function ms(e){return null!=e.kernelName}class bs{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ys{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new bs}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ur(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Wr(this.backendInstance),!0}setupRegisteredKernels(){gr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){gr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof i||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ur(`Initialization of backend ${e} failed`),ur(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ur(`Initialization of backend ${e} failed`),ur(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ys.nextTensorId++}nextVariableId(){return ys.nextVariableId++}clone(e){const t=vs.runKernel(dt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return vs.runKernel(ve,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==pr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ms(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ms(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=pr(t,this.backendName);d(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ms(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=fr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(d(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&T(e[0])&&(s=e.map((e=>Mr(e))));const a=r.write(s,t,n),i=new Qr(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(s,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:s}=e,a=new Qr(r,s,n,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new ts(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*N(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof ts||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*N(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=fr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=M(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=fs(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(d(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));d(s instanceof Qr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=L(g(e),"float32");return vs.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!m(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),ws);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return d(A(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;d(t.every((e=>e instanceof Qr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),d(n.value instanceof Qr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),d(A(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];d(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),d(a.every((e=>e instanceof Qr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Lr(),n=await this.backend.time(e);return n.wallMs=Lr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new bs;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function xs(){const e=X();if(null==e._tfengine){const t=new G(e);e._tfengine=new ys(t)}var t;return t=e._tfengine.ENV,K=t,Yr=()=>e._tfengine,e._tfengine}ys.nextTensorId=0,ys.nextVariableId=0;const vs=xs();function ws(e,t){const n={a:e,b:t};return vs.runKernel(ee,n)}function ks(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Is(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Cs=j();function Ss(e,t){let n=e;if(Pr(e))return"string"===t?[]:[e.length];if(cs(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(hs(e))return[e.buffer.size/(null==t?4:N(t))];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Pr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&j().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&$s(e,r,[]),r}function $s(e,t,n){if(n=n||[],!Array.isArray(e)&&!Pr(e))return void d(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));d(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),d(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)$s(e[t],r,n.concat(t))}function Ns(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Ts(e,t,n,r="numeric"){if(e instanceof es())return Ns(r,e.dtype,t,n),e;let s=R(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ns(r,s,t,n),null==e||!Pr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ss(e,s);Pr(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?Or(e,s):Br(e,[],!0);return vs.makeTensor(i,a,s)}function Es(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Ts(e,`${t}[${s}]`,n,r)))}function Rs(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{vs.startScope(n);try{const t=r(...e);return U(t)&&console.error("Cannot return a Promise inside of tidy."),vs.endScope(t),t}catch(e){throw vs.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}Cs.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),Cs.registerFlag("IS_BROWSER",(()=>Is())),Cs.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),Cs.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),Cs.registerFlag("IS_SAFARI",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),Cs.registerFlag("PROD",(()=>!1)),Cs.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>Cs.getBool("DEBUG"))),Cs.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),Cs.registerFlag("IS_TEST",(()=>!1)),Cs.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>Cs.getBool("DEBUG"))),Cs.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),Cs.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),Cs.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));const As=Rs({complex_:function(e,t){const n=Ts(e,"real","complex"),r=Ts(t,"imag","complex");p(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return vs.runKernel(Ie,s)}});function _s(e,t,n,r){if(null==r)r=R(e);else if("complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(hs(e)||cs(e)){if("float32"!==r&&"int32"!==r)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return vs.backend.createTensorFromGPUData(e,t||n,r)}if(!Pr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){P(t);const e=g(t),r=g(n);d(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==g(t.slice(e));d(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Pr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Or(e,r):Br(e,[],!0),vs.makeTensor(e,t,r)}function Fs(e,t,n){return _s(e,t,Ss(e,n),n)}class Ds{static join(e){return new Ds(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),0===(e=e.map((e=>Pr(e)?e.buffer:e))).length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const s=t+r.byteLength;this.shards.push({buffer:r,start:t,end:s}),t=s}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),(t=Math.min(this.byteLength,t))<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const r=new ArrayBuffer(t-e),s=new Uint8Array(r);let a=0;for(let r=n;r<this.shards.length;r++){const n=this.shards[r],i=e+a-n.start,o=a,l=Math.min(t,n.end)-n.start,u=new Uint8Array(n.buffer,i,l-i);if(s.set(u,o),a+=u.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=function(e,t){let n=0,r=e.length;for(;n<=r;){const s=Math.floor((r-n)/2)+n,a=t(e[s]);if(0===a)return s;a<0?r=s:n=s+1}return-1}(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function Os(){return vs}function Ls(){return vs.memory()}function Ms(e,t){return vs.tidy(e,t)}function zs(e){fs(e).forEach((e=>e.dispose()))}function Ps(e){return vs.keep(e)}function Bs(e,t,n=1){return vs.registerBackend(e,t,n)}async function Ws(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:Us(await Promise.all(r)),specs:n}}function Us(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}Zr=function(e){j().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const Vs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Gs(e){return Vs?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Hs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function js(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Gs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Gs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new Ds(e.weightData).byteLength}}function qs(e){const t=[];for(const n of e)t.push(...n.weights);return t}class Ks{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ks.instance&&(Ks.instance=new Ks),Ks.instance}static registerSaveRouter(e){Ks.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ks.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ks.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ks.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ks.getInstance().loadRouters:Ks.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Xs="tensorflowjs",Ys="models_store",Js="model_info_store";function Zs(){if(!j().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Qs(e){const t=e.result;t.createObjectStore(Ys,{keyPath:"modelPath"}),t.createObjectStore(Js,{keyPath:"modelPath"})}class ea{constructor(e){if(this.indexedDB=Zs(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Xs,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ys,"readonly"),r=t.objectStore(Ys).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{t.weightData=Ds.join(t.weightData);const r=js(t),a=s.transaction(Js,"readwrite");let i,o,l=a.objectStore(Js);try{i=l.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(e){return n(e)}i.onsuccess=()=>{o=s.transaction(Ys,"readwrite");const i=o.objectStore(Ys);let u;try{u=i.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r})}catch(e){return n(e)}u.onsuccess=()=>e({modelArtifactsInfo:r}),u.onerror=e=>{l=a.objectStore(Js);const t=l.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(u.error)),t.onerror=e=>(s.close(),n(u.error))}},i.onerror=e=>(s.close(),n(i.error)),a.oncomplete=()=>{null==o?s.close():o.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}ea.URL_SCHEME="indexeddb://";const ta=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ea.URL_SCHEME)?(t=e.slice(ea.URL_SCHEME.length),new ea(t)):null;var t};Ks.registerSaveRouter(ta),Ks.registerLoadRouter(ta);class na{constructor(){this.indexedDB=Zs()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Xs,1);n.onupgradeneeded=()=>Qs(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Js,"readonly"),a=s.objectStore(Js).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(ea.URL_SCHEME)?t.slice(ea.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Xs,1);r.onupgradeneeded=()=>Qs(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Js,"readwrite"),i=a.objectStore(Js),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Ys,"readwrite");const r=l.objectStore(Ys).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ra="/",sa="tensorflowjs_models",aa="info",ia="model_topology",oa="weight_specs",la="weight_data",ua="model_metadata";function ca(e){return{info:[sa,e,aa].join(ra),topology:[sa,e,ia].join(ra),weightSpecs:[sa,e,oa].join(ra),weightData:[sa,e,la].join(ra),modelMetadata:[sa,e,ua].join(ra)}}function ha(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function da(e){const t=e.split(ra);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ra)}class pa{constructor(e){if(!j().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ca(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=js(e),s=Ds.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Vs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(s));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ha(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Vs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}pa.URL_SCHEME="localstorage://";const fa=e=>{return j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pa.URL_SCHEME)?(t=e.slice(pa.URL_SCHEME.length),new pa(t)):null;var t};Ks.registerSaveRouter(fa),Ks.registerLoadRouter(fa);class ga{constructor(){d(j().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),d("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=sa+ra,n=ra+aa;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[da(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=ca(e=(t=e).startsWith(pa.URL_SCHEME)?t.slice(pa.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ha(n),r}}class ma{constructor(){this.managers={}}static getInstance(){return null==ma.instance&&(ma.instance=new ma),ma.instance}static registerManager(e,t){d(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),d(e.length>0,(()=>"scheme must not be an empty string."));const n=ma.getInstance();d(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ma.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ma.getInstance().managers)}}class ba{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&j().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}isTypedArray(e){return xr(e)}}if(j().get("IS_BROWSER")){j().setPlatform("browser",new ba);try{ma.registerManager(pa.URL_SCHEME,new ga)}catch(e){}try{ma.registerManager(ea.URL_SCHEME,new na)}catch(e){}}let ya;function xa(e,t="float32",n){return t=t||"float32",P(e),new Xr(e,t,n)}j().get("IS_NODE")&&!j().get("IS_BROWSER")&&j().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=j().global.fetch?j().global.fetch(e,t):(null==ya&&(ya=n(817)),ya(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}});const va=Rs({cast_:function(e,t){const n=Ts(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return vs.runKernel(ve,r,s)}}),wa=Rs({clone_:function(e){const t={x:Ts(e,"x","clone","string_or_numeric")};return vs.runKernel(dt,t)}});xs(),Jr={buffer:xa,cast:va,clone:wa,print:function(e,t=!1){console.log(e.toString(t))}};const ka=Rs({add_:function(e,t){let n=Ts(e,"a","add"),r=Ts(t,"b","add");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(ee,s)}}),Ia=Rs({floorDiv_:function(e,t){let n=Ts(e,"a","floorDiv"),r=Ts(t,"b","floorDiv");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(it,s)}}),Ca=Rs({div_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");if([n,r]=ds(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ia(n,r);const s={a:n,b:r};return vs.runKernel(qe,s,{})}}),Sa=Rs({mul_:function(e,t){let n=Ts(e,"a","mul"),r=Ts(t,"b","mul");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Ut,s)}}),$a=Rs({sqrt_:function(e){const t={x:Ts(e,"x","sqrt","float32")};return vs.runKernel(En,t)}}),Na=Rs({square_:function(e){const t=Ts(e,"x","square");return vs.runKernel("Square",{x:t},{})}}),Ta=Rs({zerosLike_:function(e){const t={x:Ts(e,"x","zerosLike")};return vs.runKernel(nr,t)}});function Ea(e){return vs.customGrad(e)}function Ra(e,t){if((Pr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Pr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return _s(e,[],[],t)}const Aa=new Map,_a=new Map;class Fa{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Da{constructor(){this.classNameMap={}}static getMap(){return null==Da.instance&&(Da.instance=new Da),Da.instance}static register(e){Da.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Oa(e,t,n){d(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),d("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),d(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),void 0===t&&(t="Custom"),void 0===n&&(n=e.className);const r=t+">"+n;return Da.register(e),Aa.set(r,e),_a.set(e,r),e}class La extends Fa{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return zs(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){d(A(e),(()=>"The f passed in variableGrads(f) must be a function")),d(null==t||Array.isArray(t)&&t.every((e=>e instanceof ts)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in vs.registeredVariables)t.push(vs.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;d((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=vs.gradients(e,t,null,!0);d(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),d(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&zs(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ra(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(La,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Ma extends La{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t],s=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ms((()=>Ta(r).variable(s)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ms((()=>Ta(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ms((()=>{const e=ka(Sa(i,this.rho),Sa(Na(a),1-this.rho)),t=Sa(Ca($a(ka(o,this.epsilon)),$a(ka(i,this.epsilon))),a),n=ka(Sa(o,this.rho),Sa(Na(t),1-this.rho));i.assign(e),o.assign(n);const s=ka(Sa(t,-this.learningRate),r);r.assign(s)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(zs(this.accumulatedGrads.map((e=>e.variable))),zs(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function za(e,t,n){P(e);const r={shape:e,value:t,dtype:n=n||R(t)};return vs.runKernel(rt,{},r)}class Pa extends La{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ms((()=>za(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Ms((()=>{const e=ka(a,Na(s));a.assign(e);const t=ka(Sa(Ca(s,$a(ka(e,vs.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&zs(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}const Ba=Rs({pow_:function(e,t){let n=Ts(e,"base","pow"),r=Ts(t,"exp","pow");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Zt,s)}}),Wa=Rs({sub_:function(e,t){let n=Ts(e,"a","sub"),r=Ts(t,"b","sub");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(jn,s)}});class Ua extends La{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ms((()=>{this.accBeta1=Ra(t).variable(),this.accBeta2=Ra(n).variable()})),null==r&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ms((()=>{const n=Wa(1,this.accBeta1),r=Wa(1,this.accBeta2);t.forEach(((t,s)=>{const a=vs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ms((()=>Ta(a).variable(i)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Ms((()=>Ta(a).variable(i)))});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,c=ka(Sa(l,this.beta1),Sa(o,1-this.beta1)),h=ka(Sa(u,this.beta2),Sa(Na(o),1-this.beta2)),d=Ca(c,n),p=Ca(h,r);l.assign(c),u.assign(h);const f=ka(Sa(Ca(d,ka($a(p),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign(Sa(this.accBeta1,this.beta1)),this.accBeta2.assign(Sa(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&zs(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ms((()=>{this.accBeta1.assign(Ba(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ba(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}const Va=Rs({abs_:function(e){const t=Ts(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return vs.runKernel(Ce,e)}{const e={x:t};return vs.runKernel(J,e)}}});function Ga(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Ha(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function ja(e,t){const n=Math.max(e.length,t.length),r=new Array(n);for(let s=0;s<n;s++){let a=e[e.length-s-1];null==a&&(a=1);let i=t[t.length-s-1];if(null==i&&(i=1),1===a)r[n-s-1]=i;else if(1===i)r[n-s-1]=a;else{if(a!==i)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);r[n-s-1]=a}}return r}const qa=Rs({maximum_:function(e,t){let n=Ts(e,"a","maximum"),r=Ts(t,"b","maximum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=va(n,"int32"),r=va(r,"int32")),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Rt,s)}});class Ka extends La{static get className(){return"Adamax"}constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ms((()=>{this.iteration=Ra(0).variable(),this.accBeta1=Ra(t).variable()})),null==r&&(this.epsilon=vs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ms((()=>{const n=Wa(1,this.accBeta1),r=Ca(-this.learningRate,ka(Sa(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=vs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Ta(a).variable(i)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:Ta(a).variable(i)});const o=Array.isArray(e)?e[s].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,c=ka(Sa(l,this.beta1),Sa(o,1-this.beta1)),h=Sa(u,this.beta2),d=Va(o),p=qa(h,d);l.assign(c),u.assign(p);const f=ka(Sa(Ca(r,n),Ca(c,ka(p,this.epsilon))),a);a.assign(f)})),this.iteration.assign(ka(this.iteration,1)),this.accBeta1.assign(Sa(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&zs(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&zs(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}class Xa extends La{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=vs.registeredVariables[t];Ms((()=>{const e=ka(Sa(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ps(Ra(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}class Ya extends Xa{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ra(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ms((()=>Ta(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Ms((()=>{let e;const t=ka(Sa(this.m,s),a);e=this.useNesterov?ka(Sa(this.c,ka(a,Sa(t,this.m))),r):ka(Sa(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&zs(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}class Ja extends La{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=vs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=vs.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ms((()=>Ta(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ms((()=>Ta(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ms((()=>Ta(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ms((()=>{const e=ka(Sa(i,this.decay),Sa(Na(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ka(Sa(t,this.decay),Sa(a,1-this.decay)),l=Ca(Sa(a,this.learningRate),$a(Wa(e,ka(Na(s),this.epsilon)))),u=ka(Sa(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=Wa(r,u);r.assign(c)}else{const e=ka(Sa(i,this.decay),Sa(Na(a),1-this.decay)),t=ka(Sa(o,this.momentum),Ca(Sa(a,this.learningRate),$a(ka(e,this.epsilon))));i.assign(e),o.assign(t);const n=Wa(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&zs(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&zs(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&zs(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}const Za=[Ma,Pa,Ua,Ka,Ya,Ja,Xa];function Qa(e){return new Promise((e=>setTimeout(e))).then(e)}class ei{constructor(e){if(!j().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ei.URL_SCHEME)&&(e=e.slice(ei.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=Ds.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=Hs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(t)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Qa((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Qa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:js(e)}}}}function ti(e,t,n,r){!function(e){d(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){d(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),d(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),d(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ni(e,t){null==t&&(t={});const n=null==t.fetchFunc?j().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await ti(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await ti(s,t.onProgress,.5,1)}ei.URL_SCHEME="downloads://",Ks.registerSaveRouter((e=>j().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ei.URL_SCHEME)?function(e="model"){return new ei(e)}(e.slice(ei.URL_SCHEME.length)):null));class ri{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(d("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=j().platform.fetch,d(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&d(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{},this.loadOptions=t}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Hs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);if(t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData){const n=Ds.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:"application/octet-stream"}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:js(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return t}async load(){return this.loadOptions.streamWeights?this.loadStream():async function(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),function(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(r.initializerSignature=e.initializerSignature),r}(e,n,r)}(await this.loadModelJSON(),(e=>this.loadWeights(e)))}async loadStream(){const e=await this.loadModelJSON(),t=await this.getWeightUrls(e.weightsManifest),n=qs(e.weightsManifest);return Object.assign(Object.assign({},e),{weightSpecs:n,getWeightStream:()=>function(e,t){var n;const r=null==t.fetchFunc?j().platform.fetch:t.fetchFunc;let s,a=0;return null===(n=t.onProgress)||void 0===n||n.call(t,0),new ReadableStream({pull:async n=>{for(var i;a<e.length;){if(!s){const n=(await r(e[a],t.requestInit,{isBinary:!0})).body;s=n.getReader()}const{done:o,value:l}=await s.read();if(!o)return void n.enqueue(l);a++,s=void 0,null===(i=t.onProgress)||void 0===i||i.call(t,a/e.length)}n.close()}})}(t,this.loadOptions)})}async getWeightUrls(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[],i=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(s+e+r);return this.weightUrlConverter&&a.push(...await Promise.all(i)),a}async loadWeights(e){const t=await this.getWeightUrls(e);return[qs(e),await ni(t,this.loadOptions)]}}function si(e){return null!=e.match(ri.URL_SCHEME_REGEX)}ri.URL_SCHEME_REGEX=/^https?:\/\//;const ai=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>si(e))):si(e),n)return function(e,t){return new ri(e,t)}(e,t)}return null};Ks.registerSaveRouter(ai),Ks.registerLoadRouter(ai);let ii;const oi=Rs({fromPixels_:function(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=pr(sr,vs.backendName)){const n={pixels:e},r={numChannels:t};return vs.runKernel(sr,n,r)}const[l,u]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(r||n)c=e.data;else if(a||s||o){if(null==ii)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");ii=new OffscreenCanvas(1,1).getContext("2d")}else ii=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});ii.canvas.width=l,ii.canvas.height=u,ii.drawImage(e,0,0,l,u),c=ii.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return function(e,t,n){if(f(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ss(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return _s(e,t,r,n)}(h,[u,l,t],"int32")}}),li=-2,ui=-1;function ci(e,t,n){const r=e.shape.length;d(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),d(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)d(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function hi(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function di(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function pi(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function fi(e,t,n){return n<=e?n:n-(t-1)}function gi(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function mi(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=bi(i,l,u,r,e),h=yi(o,l,u,s,e),d=pi(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=vi(i,r,a,e,t,l),h[t]=wi(o,s,a,e,t,l),d[t]=xi(a,t,l);return{begin:c,end:h,strides:d}}function bi(e,t,n,r,s){const a=[...s],i=gi(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=fi(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function yi(e,t,n,r,s){const a=[...s],i=gi(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=fi(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=u(0,a[e],s[e])}return a}function xi(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function vi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=u(0,i,l-1),i}function wi(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?u(0,i,l):u(-1,i,l-1),i}function ki(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function Ii(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Ci(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{d(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(d(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Si(e,t,n,r,s,a,i,o,l){let u;if(null==r?(u=new Array(t.length),u.fill(1)):u=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&1<<e&o&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(li),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(ui),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(d.shrinkAxisMask&1<<t),r=e[t];if(-1===r){m.push(n?1:-1);continue}const s=[d.beginMask&1<<t,d.endMask&1<<t],a=[d.strides[t]>0?0:-1,d.strides[t]>0?r:r-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[t];const i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){const e=d.begin[t]<0?r+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=r)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=$i(d.begin[t],0,d.strides[t],r,s,a),d.end[t]=$i(d.end[t],1,d.strides[t],r,s,a);const e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===r;p=p&&e,f=f&&(0===t&&1===d.strides[t]||e)}else p=p&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&r>=0&&(o=d.strides[t]<0?-r:r,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),m.push(e)}else m.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){const t=d.finalShapeGatherIndices[e];t>=0?b.push(m[t]):t===li&&b.push(1)}return{finalShapeSparse:b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==li)),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function $i(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}const Ni=Rs({all_:function(e,t=null,n=!1){const r={x:Ts(e,"x","all","bool")},s={axis:t,keepDims:n};return vs.runKernel(ne,r,s)}}),Ti=Rs({any_:function(e,t=null,n=!1){const r={x:Ts(e,"x","any","bool")},s={axis:t,keepDims:n};return vs.runKernel(re,r,s)}}),Ei=Rs({argMax_:function(e,t=0){const n={x:Ts(e,"x","argMax")},r={axis:t};return vs.runKernel(se,n,r)}});function Ri(e,t,n,r,s="NHWC",a){return Fi(e,[...t,e[3]],n,a,r,null,null,Vi(s))}function Ai(e,t,n,r,s,a,i="channelsLast"){const[o,l]=Li(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Fi(e,u,n,r,s,a,!1,i)}function _i(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Mi(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Di(e,c,n,r,s,!1,h,a)}function Fi(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Li(n),[b,y]=Li(r),x=zi(d,b),v=zi(p,y),{padInfo:w,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Oi(e,t,n));const a=e[1];return[Pi((e[0]-t+2*r)/n+1,s),Pi((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Pi((t-a+d+p)/r+1,o),h=Pi((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,x,v,a,o),C=i?f*h:f;let S;return"channelsFirst"===o?S=[l,C,k,I]:"channelsLast"===o&&(S=[l,k,I,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:y,inShape:e,outShape:S,filterShape:t}}function Di(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,x]=Mi(n),[v,w,k]=Mi(r),I=zi(p,v),C=zi(f,w),S=zi(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const g=function(e,t,n,r,s,a){null==s&&(s=Oi(e,t[0],r[0]));const i=[0,0,0,1];for(let n=0;n<3;n++)e[n]+2*s>=t[n]&&(i[n]=Pi((e[n]-t[n]+2*s)/r[n]+1,a));return i}([t,n,r,1],[o,l,u],0,[s,a,i],e,c);d=g[0],p=g[1],f=g[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),x=c-y,v=Math.floor(g/2);h={top:y,bottom:x,left:v,right:g-v,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,x,I,C,S,o),R=a?m*d:m;let A;return"channelsFirst"===i?A=[l,R,N,T,E]:"channelsLast"===i&&(A=[l,N,T,E,R]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:y,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Oi(e,t,n,r=1){const s=zi(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function Li(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Mi(e){return"number"==typeof e?[e,e,e]:e}function zi(e,t){return t<=1?e:e+(e-1)*(t-1)}function Pi(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Bi(e){const[t,n,r]=Li(e);return 1===t&&1===n&&1===r}function Wi(e,t){return Bi(e)||Bi(t)}function Ui(e){return Li(e).every((e=>e>0))}function Vi(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Gi(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)d(b(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{d(b(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const Hi=Rs({reshape_:function(e,t){const n={x:Ts(e,"x","reshape","string_or_numeric")},r={shape:t};return vs.runKernel(un,n,r)}}),ji=Rs({avgPool_:function(e,t,n,r,s){const a=Ts(e,"x","avgPool","float32");d(Wi(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=Hi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Gi("avgPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=vs.runKernel(he,l,u);return c=va(c,a.dtype),o?Hi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),qi=Rs({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Ts(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),d("number"==typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Gi("avgPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=vs.runKernel(pe,u,c);return h=va(h,o.dtype),l?Hi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ki=Rs({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;null!=s&&(u=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),d(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?Hi(e,[1,1,1,e.size]):2===e.rank?Hi(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Hi(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:a},f=vs.runKernel(ot,h,p);return Hi(f,i.shape)}}),Xi=Rs({batchNorm2d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),d(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),d(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),d(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),Ki(i,o,l,c,u,a)}}),Yi=Rs({batchNorm3d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),d(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),d(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),d(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),Ki(i,o,l,c,u,a)}}),Ji=Rs({batchNorm4d_:function(e,t,n,r,s,a){const i=Ts(e,"x","batchNorm"),o=Ts(t,"mean","batchNorm"),l=Ts(n,"variance","batchNorm");let u,c;return null!=s&&(u=Ts(s,"scale","batchNorm")),null!=r&&(c=Ts(r,"offset","batchNorm")),d(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),d(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),d(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&d(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&d(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),Ki(i,o,l,c,u,a)}}),Zi=Rs({broadcastTo_:function(e,t){let n=Ts(e,"broadcastTo","x");const r=n.shape;if(P(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Hi(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return wa(n);const i={x:n},o={reps:a};return vs.runKernel(Xn,i,o)}}),Qi=Rs({clipByValue_:function(e,t,n){const r=Ts(e,"x","clipByValue");if(d(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return za(r.shape,t,r.dtype);const s={x:r},a={clipValueMin:t,clipValueMax:n};return vs.runKernel(ke,s,a)}}),eo=Rs({concat_:function(e,t=0){d(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return wa(n[0]);const r=n,s={axis:t};return vs.runKernel(Se,r,s)}}),to=Rs({concat1d_:function(e){return eo(e,0)}}),no=Rs({concat2d_:function(e,t){return eo(e,t)}}),ro=Rs({concat3d_:function(e,t){return eo(e,t)}}),so=Rs({concat4d_:function(e,t){return eo(e,t)}}),ao=Rs({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ts(e,"x","conv2d","float32"),l=Ts(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Gi("conv2d",r,i);const h="NHWC"===s?u.shape[3]:u.shape[1];d(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),d(Wi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),d(Ui(a),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),d(Ui(n),(()=>"Error in conv2D: Strides should be larger than 0."));const p={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=vs.runKernel($e,p,f);return c?Hi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),io=Rs({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Ts(e,"x","conv1d"),l=Ts(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Hi(o,[1,o.shape[0],o.shape[1]])),d(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),d(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Gi("conv1d",r,i),d(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),d(Wi(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),d(Ui(a),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),d(Ui(n),(()=>"Error in conv1D: Stride should be larger than 0.")),d("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=Hi(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=Hi(u,[u.shape[0],1,u.shape[1],u.shape[2]]),f=ao(p,h,[1,n],r,"NHWC",[1,a],i);return Hi(f,c?[f.shape[2],f.shape[3]]:[f.shape[0],f.shape[2],f.shape[3]])}}),oo=Rs({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),d(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),d(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),d(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];d(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),d(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Gi("conv2dDerInput",s,i);const p={dy:l,filter:n},f={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},g=vs.runKernel(Te,p,f);return u?Hi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),lo=Rs({conv2dTranspose_:function(e,t,n,r,s,a){const i=Ts(e,"x","conv2dTranspose"),o=Ts(t,"filter","conv2dTranspose");return oo(n,i,o,r,s,"NHWC",a)}}),uo=Rs({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Ts(e,"x","conv3d"),o=Ts(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),d(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),d(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),d(Wi(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),d("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`)),d(Ui(a),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),d(Ui(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=vs.runKernel(Ee,c,h);return u?Hi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),co=Rs({conv3DBackpropInput_:function(e,t,n,r,s){d(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];d(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),d(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),d(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),d(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),d(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=vs.runKernel(Ae,c,h);return o?Hi(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ho=Rs({conv3dTranspose_:function(e,t,n,r,s){const a=Ts(e,"x","conv3dTranspose"),i=Ts(t,"filter","conv3dTranspose");return co(n,a,i,r,s)}}),po=Rs({denseBincount_:function(e,t,n,r=!1){const s=Ts(e,"x","denseBincount"),a=Ts(t,"weights","denseBincount");d("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),d(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),d(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return vs.runKernel(Me,i,o)}}),fo=Rs({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Ts(e,"x","depthwiseConv2d","float32"),l=Ts(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),d(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];d(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Gi("depthwiseConv2d",r,i);const p={x:u,filter:l},f={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},g=vs.runKernel(Pe,p,f);return c?Hi(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),go=Rs({elu_:function(e){const t={x:Ts(e,"x","elu","float32")};return vs.runKernel(Xe,t)}}),mo=Rs({equal_:function(e,t){let n=Ts(e,"a","equal","string_or_numeric"),r=Ts(t,"b","equal","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Ze,s)}}),bo=Rs({erf_:function(e){let t=Ts(e,"x","erf");d("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=va(t,"float32"));const n={x:t};return vs.runKernel(Je,n)}}),yo=Rs({exp_:function(e){const t={x:Ts(e,"x","exp")};return vs.runKernel(Qe,t)}}),xo=Rs({expandDims_:function(e,t=0){const n=Ts(e,"x","expandDims","string_or_numeric");d(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return vs.runKernel(et,r,s)}}),vo=Rs({tile_:function(e,t){const n=Ts(e,"x","tile","string_or_numeric");d(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return vs.runKernel(Xn,r,s)}}),wo=Rs({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=xa([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Hi(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return vo(xo(i,0),[n[0],1,1]);if(2===n.length)return vo(xo(xo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return vo(xo(xo(xo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ko=Rs({floor_:function(e){const t={x:Ts(e,"x","floor","float32")};return vs.runKernel(at,t)}}),Io=Rs({gather_:function(e,t,n=0,r=0){const s={x:Ts(e,"x","gather"),indices:Ts(t,"indices","gather","int32")},a={axis:n,batchDims:r};return vs.runKernel(lt,s,a)}}),Co=Rs({greater_:function(e,t){let n=Ts(e,"a","greater","string_or_numeric"),r=Ts(t,"b","greater","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(ct,s)}}),So=Rs({greaterEqual_:function(e,t){let n=Ts(e,"a","greaterEqual","string_or_numeric"),r=Ts(t,"b","greaterEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(ht,s)}}),$o=Rs({leakyRelu_:function(e,t=.2){const n={x:Ts(e,"x","leakyRelu")},r={alpha:t};return vs.runKernel(yt,n,r)}}),No=Rs({log_:function(e){const t={x:Ts(e,"x","log","float32")};return vs.runKernel(kt,t)}}),To=Rs({log1p_:function(e){const t={x:Ts(e,"x","log1p")};return vs.runKernel(It,t)}}),Eo=Rs({max_:function(e,t=null,n=!1){const r={x:Ts(e,"x","max")},s={reductionIndices:t,keepDims:n};return vs.runKernel(Et,r,s)}}),Ro=Rs({sum_:function(e,t=null,n=!1){let r=Ts(e,"x","sum");"bool"===r.dtype&&(r=va(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return vs.runKernel(Rn,s,a)}}),Ao=Rs({logSoftmax_:function(e,t=-1){const n=Ts(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Ea(((e,n)=>{const r=Eo(e,t,!0),s=Wa(e,r),a=Wa(va(s,"float32"),No(Ro(yo(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=yo(r);return Wa(e,Sa(Ro(e,t,!0),s))}}}));return r(n)}});function _o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Fo(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Do(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Oo(e,t){return Fo(e,t.map((e=>1)),t)}function Lo(e,t,n){d(_o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Mo(e,t){if(_o(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function zo(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Po(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Bo=Rs({logSumExp_:function(e,t=null,n=!1){const r=Ts(e,"x","logSumExp"),s=k(t,r.shape),a=Eo(r,s,!0),i=Wa(r,a),o=yo(i),l=Ro(o,s),u=No(l),c=ka(Hi(a,u.shape),u);if(n){const e=Oo(c.shape,s);return Hi(c,e)}return c}}),Wo=Rs({logicalAnd_:function(e,t){const n=Ts(e,"a","logicalAnd","bool"),r=Ts(t,"b","logicalAnd","bool");ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Ct,s)}}),Uo=Rs({matMul_:function(e,t,n=!1,r=!1){let s=Ts(e,"a","matMul"),a=Ts(t,"b","matMul");[s,a]=ds(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return vs.runKernel(ge,i,o)}}),Vo=Rs({maxPool_:function(e,t,n,r,s){const a=Ts(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=Hi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),d(Wi(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Gi("maxPool",r,s);const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=vs.runKernel(At,l,u);return o?Hi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Go=Rs({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Ts(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),d(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),d("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),Gi("maxPool3d",r,s);const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=vs.runKernel(Ft,u,c);return l?Hi(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Ho=Rs({mean_:function(e,t=null,n=!1){const r={x:Ts(e,"x","mean")},s={axis:t,keepDims:n};return vs.runKernel(Lt,r,s)}}),jo=Rs({min_:function(e,t=null,n=!1){const r={x:Ts(e,"x","min")},s={axis:t,keepDims:n};return vs.runKernel(Mt,r,s)}}),qo=Rs({minimum_:function(e,t){let n=Ts(e,"a","minimum"),r=Ts(t,"b","minimum");[n,r]=ds(n,r),"bool"===n.dtype&&(n=va(n,"int32"),r=va(r,"int32")),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(zt,s)}}),Ko=Rs({moments_:function(e,t=null,n=!1){const r=k(t,(e=Ts(e,"x","moments")).shape),s=Ho(e,r,n);let a=s.shape;n||(a=Oo(s.shape,r));const i=Na(Wa(va(e,"float32"),Hi(s,a)));return{mean:s,variance:Ho(i,r,n)}}}),Xo=Rs({neg_:function(e){const t={x:Ts(e,"x","neg")};return vs.runKernel(Vt,t)}}),Yo=Rs({notEqual_:function(e,t){let n=Ts(e,"a","notEqual","string_or_numeric"),r=Ts(t,"b","notEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Gt,s)}}),Jo=Rs({oneHot_:function(e,t,n=1,r=0,s="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:Ts(e,"indices","oneHot","int32")},i={dtype:s,depth:t,onValue:n,offValue:r};return vs.runKernel(Xt,a,i)}});function Zo(e,t="float32"){if(P(e),"complex64"===t){const t=Zo(e,"float32"),n=Zo(e,"float32");return As(t,n)}const n=M(g(e),t);return vs.makeTensor(n,e,t)}function Qo(e,t="float32"){if(P(e),"complex64"===t){const t=Qo(e,"float32"),n=Zo(e,"float32");return As(t,n)}const n=L(g(e),t);return vs.makeTensor(n,e,t)}const el=Rs({onesLike_:function(e){const t={x:Ts(e,"x","onesLike")};return vs.runKernel(Kt,t)}}),tl=Rs({pad_:function(e,t,n=0){const r=Ts(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return vs.runKernel(Jt,a,s)}}),nl=Rs({prelu_:function(e,t){const n={x:Ts(e,"x","prelu"),alpha:Ts(t,"alpha","prelu")};return vs.runKernel(Qt,n)}});var rl=n(391);class sl{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=rl.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class al{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=rl.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const il=Rs({randomNormal_:function(e,t=0,n=1,r,s){if(P(e),null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new sl(t,n,r,!1,s),i=xa(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ol=Rs({randomUniform_:function(e,t=0,n=1,r="float32",s){P(e);const a=xa(e,r),i=new al(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function ll(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return vs.runKernel(sn,{},s)}const ul=Rs({relu_:function(e){const t={x:Ts(e,"x","relu")};return vs.runKernel(ln,t)}}),cl=Rs({reverse_:function(e,t){const n={x:Ts(e,"x","reverse")},r={dims:t};return vs.runKernel(gn,n,r)}}),hl=Rs({selu_:function(e){const t={x:Ts(e,"x","selu")};return vs.runKernel(kn,t)}}),dl=Rs({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Ts(e,"x","separableConv2d"),l=Ts(t,"depthwiseFilter","separableConv2d"),u=Ts(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");d(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),d(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),d(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),d(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],f=l.shape[3];d(u.shape[2]===p*f,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*f}, but got ${u.shape[2]}.`));const g=fo(c,l,r,s,i,a),m=ao(g,u,1,"valid",i);return h?Hi(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),pl=Rs({sigmoid_:function(e){const t={x:Ts(e,"x","sigmoid","float32")};return vs.runKernel(Nn,t)}}),fl=Rs({slice_:function(e,t,n){const r=Ts(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return vs.runKernel(In,s,a)}}),gl=Rs({slice1d_:function(e,t,n){const r=Ts(e,"x","slice1d");return d(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),fl(r,[t],[n])}}),ml=Rs({slice2d_:function(e,t,n){const r=Ts(e,"x","slice2d");return d(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),bl=Rs({slice3d_:function(e,t,n){const r=Ts(e,"x","slice3d");return d(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),yl=Rs({slice4d_:function(e,t,n){const r=Ts(e,"x","slice4d");return d(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),xl=Rs({softmax_:function(e,t=-1){const n=Ts(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return vs.runKernel(Fn,r,s)}}),vl=Rs({softplus_:function(e){const t={x:Ts(e,"x","softplus")};return vs.runKernel(Tn,t)}}),wl=Rs({split_:function(e,t,n=0){const r={x:Ts(e,"x","split")},s={numOrSizeSplits:t,axis:n};return vs.runKernel(_n,r,s)}}),kl=Rs({squeeze_:function(e,t){const n=Ts(e,"x","squeeze","string_or_numeric");return Hi(n,I(n.shape,t).newShape)}}),Il=Rs({stack_:function(e,t=0){const n=Es(e,"tensors","stack","string_or_numeric");d(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&d(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return vs.runKernel(Yt,r,s)}}),Cl=Rs({tanh_:function(e){const t={x:Ts(e,"x","tanh","float32")};return vs.runKernel(Kn,t)}});function Sl(e,t){f(e);const n=Ss(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return _s(e,null,n,t)}function $l(e,t,n){if(f(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ss(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return _s(e,t,r,n)}function Nl(e,t,n){if(f(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ss(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return _s(e,t,r,n)}const Tl=Rs({truncatedNormal_:function(e,t=0,n=1,r,s){if(P(e),null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new sl(t,n,r,!0,s),i=xa(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),El=Rs({unstack_:function(e,t=0){const n=Ts(e,"x","unstack","string_or_numeric");d(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return vs.runKernel(er,r,s)}}),Rl=Rs({where_:function(e,t,n){const r=Ts(t,"a","where"),s=Ts(n,"b","where"),a=Ts(e,"condition","where","bool"),i=ja(ja(a.shape,r.shape),s.shape),o={condition:Zi(a,i),t:Zi(r,i),e:Zi(s,i)};return vs.runKernel(wn,o)}}),Al=Rs({imag_:function(e){const t={input:Ts(e,"input","imag")};return vs.runKernel(ft,t)}}),_l=Rs({real_:function(e){const t={input:Ts(e,"input","real")};return vs.runKernel(an,t)}}),Fl=Rs({transpose_:function(e,t,n){const r=Ts(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),d(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{d(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const s={x:r},a={perm:t};return"complex64"===r.dtype?Ms((()=>{let e=_l(r),t=Al(r);return e=vs.runKernel(Zn,{x:e},a),t=vs.runKernel(Zn,{x:t},a),n&&(t=Xo(t)),As(e,t)})):vs.runKernel(Zn,s,a)}}),Dl=Rs({dropout_:function(e,t,n,r){const s=Ts(e,"x","dropout");if(d("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),d(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Qr?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(m(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Ca(ko(ka(ol(a,0,1,"float32",r),i)),i);return Sa(s,o)}}),Ol=Rs({fft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vs.runKernel(nt,t)}}),Ll=Rs({rfft_:function(e,t){d("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=fl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=eo([e,Zo(r)],e.shape.length-1),n=t}else s=e;const a=Ta(s),i=Hi(As(s,a),[r,n]),o=Ol(i),l=Math.floor(n/2)+1,u=_l(o),c=Al(o),h=wl(u,[l,n-l],u.shape.length-1),p=wl(c,[l,n-l],c.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=l,Hi(As(h[0],p[0]),f)}}),Ml=Rs({ifft_:function(e){d("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return vs.runKernel(pt,t)}}),zl=Rs({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Hi(e,[n,t]);r=Ml(s)}else{const s=[n,2*(t-1)],a=Hi(_l(e),[n,t]),i=Hi(Al(e),[n,t]),o=cl(fl(a,[0,1],[n,t-2]),1),l=Sa(cl(fl(i,[0,1],[n,t-2]),1),Ra(-1)),u=eo([a,o],1),c=eo([i,l],1),h=Hi(As(u,c),[s[0],s[1]]);r=Ml(h)}if(r=_l(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Hi(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Pl=Rs({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=Hi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2]])),d(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),d(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),d(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];d(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),d(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Gi("conv2dDerFilter",s,i);const h={x:o,dy:l},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return vs.runKernel(Ne,h,p)}}),Bl=Rs({relu6_:function(e){const t={x:Ts(e,"x","relu6")};return vs.runKernel(fn,t)}}),Wl=Rs({step_:function(e,t=0){const n={x:Ts(e,"x","step")},r={alpha:t};return vs.runKernel(rr,n,r)}});function Ul(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Sa(e,Wl(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Vl(e,t){let n=t;const r=Ha(e.shape,t.shape);return r.length>0&&(n=Ro(n,r)),Hi(n,e.shape)}function Gl(e,t,n,r){if("linear"===t)return e;if("relu"===t)return ul(e);if("elu"===t)return go(e);if("relu6"===t)return Bl(e);if("prelu"===t)return nl(e,n);if("leakyrelu"===t)return $o(e,r);if("sigmoid"===t)return pl(e);throw new Error(`Unknown fused activation ${t}.`)}const Hl=(e,t)=>!(e>0)||"linear"===t,jl=Rs({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Hl(vs.state.gradientDepth,l)){d("NHWC"===s,(()=>`Error in fused conv2d: got dataFormat of ${s} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=ao(e,t,n,r,s,a,i);return null!=o&&(h=ka(h,o)),Gl(h,l,u,c)}const h=Ts(e,"x","conv2d","float32"),p=Ts(t,"filter","conv2d","float32");let f=h,g=!1;3===h.rank&&(g=!0,f=Hi(h,[1,h.shape[0],h.shape[1],h.shape[2]])),d(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),d(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),Gi("fused conv2d",r,i);const m="NHWC"===s?f.shape[3]:f.shape[1];d(p.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${p.shape[2]}.`)),d(Wi(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const b=Fi(f.shape,p.shape,n,a,r,i);let y,x;if(null!=o&&(y=Ts(o,"bias","fused conv2d"),[y]=ds(y,h),"NHWC"===s?ja(b.outShape,y.shape):(d(y.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`)),d(0===y.shape.length||y.shape[0]===b.outChannels||1===y.shape[0],(()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){const e=u.shape;if(d(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)d(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{ja(e,b.outShape)}catch(t){const n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}x=Ts(u,"prelu weights","fused conv2d")}const v=(e,t)=>{d("NHWC"===s,(()=>`Error in gradient of fused conv2D: got dataFormat of ${s} but only NHWC is currently supported.`));const[i,o,u,c]=t,h=Ul(e,u,l);d(Bi(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const p=[oo(o.shape,h,i,n,r),Pl(o,h,i.shape,n,r)];if(null!=c){const e=Vl(c,h);p.push(e)}return p},w={x:f,filter:p,bias:y,preluActivationWeights:x},k={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=Ea(((e,t,n)=>{let r=vs.runKernel(or,w,k);return n([t,e,r]),g&&(r=Hi(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(f,p)}{const e=Ea(((e,t,n,r)=>{let s=vs.runKernel(or,w,k);return r([t,e,s,n]),g&&(s=Hi(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(f,p,y)}}}),ql=Rs({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=Hi(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return vs.runKernel(Be,u,c)}}),Kl=Rs({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=vs.runKernel(We,u,c);return l?Hi(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Xl=Rs({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===Hl(vs.state.gradientDepth,a)){let l=Uo(e,t,n,r);return null!=s&&(l=ka(l,s)),Gl(l,a,i,o)}let l=Ts(e,"a","fused matMul"),u=Ts(t,"b","fused matMul");[l,u]=ds(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=r?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),y=g(m),x=g(b);d(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=ja(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,f]),w=Hi(l,n?[y,c,p]:[y,p,c]),k=Hi(u,r?[x,f,h]:[x,h,f]);let I,C;null!=s&&(I=Ts(s,"bias","fused matMul"),[I]=ds(I,l),ja(v,I.shape)),null!=i&&(C=Ts(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,l,u]=t,c=Ul(Hi(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=Uo(c,o,!1,!1),d=Uo(c,i,!0,!1)):n&&!r?(h=Uo(o,c,!1,!0),d=Uo(i,c,!1,!1)):(h=Uo(o,c,!0,!0),d=Uo(c,i,!0,!0)):(h=Uo(c,o,!1,!0),d=Uo(i,c,!0,!1)),null!=s?[h,d,Vl(u,c)]:[h,d]},$={a:w,b:k,bias:I,preluActivationWeights:C},N={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=Ea(((e,t,n)=>{const r=vs.runKernel(ir,$,N);return n([e,t,r]),{value:Hi(r,v),gradFunc:S}}));return e(w,k)}{const e=Ea(((e,t,n,r)=>{const s=vs.runKernel(ir,$,N);return r([e,t,s,n]),{value:Hi(s,v),gradFunc:S}}));return e(w,k,I)}}}),Yl=Rs({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Ts(e,"image","cropAndResize"),o=Ts(t,"boxes","cropAndResize","float32"),l=Ts(n,"boxInd","cropAndResize","int32"),u=o.shape[0];d(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),d(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),d(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),d(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),d(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),d("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return vs.runKernel(Le,c,h)}}),Jl=Rs({flipLeftRight_:function(e){const t=Ts(e,"image","flipLeftRight","float32");d(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return vs.runKernel(st,n,{})}}),Zl=Rs({grayscaleToRGB_:function(e){const t=Ts(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];d(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),d(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,vo(t,s)}}),Ql=Rs({einsum_:function(e,...t){const n=t.map(((e,t)=>Ts(e,`tensors${t}`,"einsum"))),r={equation:e};return vs.runKernel(Ke,n,r)}}),eu=Rs({rgbToGrayscale_:function(e){const t=Ts(e,"image","RGBToGrayscale"),n=t.rank-1,r=t.shape[n];d(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),d(3===r,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${r}.`));const s=t.dtype,a=va(t,"float32"),i=Sl([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Ql("ij,j->i",a,i);break;case 3:o=Ql("ijk,k->ij",a,i);break;case 4:o=Ql("ijkl,l->ijk",a,i);break;case 5:o=Ql("ijklm,m->ijkl",a,i);break;case 6:o=Ql("ijklmn,n->ijklm",a,i);break;default:throw new Error("Not a valid tensor rank.")}return o=xo(o,-1),va(o,s)}}),tu=Rs({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Ts(e,"image","rotateWithOffset","float32");d(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return vs.runKernel(ar,a,i)}});function nu(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),d(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),d(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),d(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),d(1===t.rank,(()=>"scores must be a 1D tensor")),d(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),d(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const ru=Rs({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ts(e,"boxes","nonMaxSuppression","float32"),i=Ts(t,"scores","nonMaxSuppression","float32"),o=nu(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return vs.runKernel(Ht,{boxes:a,scores:i},l)}});function su(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||au)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function au(e,t){return e>t?1:e<t?-1:0}function iu(e,t,n,r,s){return uu(e,t,n,r,s,0)}function ou(e,t,n,r,s,a){return uu(e,t,n,r,s,0,!1,a,!0)}function lu(e,t,n,r,s,a){return uu(e,t,n,r,s,a,!0)}function uu(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(du);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=cu(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*hu(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&su(u,t,du))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function cu(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),x=Math.max(b-g,0)*Math.max(y-m,0);return x/(p+f-x)}function hu(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function du(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const pu=Rs({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),l=nu(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=vs.runKernel(qt,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),fu=Rs({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ts(e,"boxes","nonMaxSuppression"),o=Ts(t,"scores","nonMaxSuppression"),l=nu(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=vs.runKernel(jt,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),gu=Rs({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Ts(e,"images","resizeBilinear");d(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),d(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Hi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=vs.runKernel(dn,o,l);return i?Hi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),mu=Rs({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Ts(e,"images","resizeNearestNeighbor");d(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),d(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),d("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),d(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Hi(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=vs.runKernel(cn,o,l);return i?Hi(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),bu=Rs({bincount_:function(e,t,n){const r=Ts(e,"x","bincount"),s=Ts(t,"weights","bincount");d("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),d(n>=0,(()=>`size must be non-negative, but got ${n}.`)),d(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return vs.runKernel(be,a,i)}}),yu=Rs({lessEqual_:function(e,t){let n=Ts(e,"a","lessEqual","string_or_numeric"),r=Ts(t,"b","lessEqual","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(vt,s)}}),xu=Rs({round_:function(e){const t={x:Ts(e,"x","round")};return vs.runKernel(mn,t)}}),vu=Rs({threshold_:function(e,t="binary",n=!1,r=.5){const s=Ts(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=Sa(Sl([r]),255);if(d(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),d(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),d("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),d("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=wl(s,[1,1,1],-1);const e=Sa(i,.2989),t=Sa(o,.587),n=Sa(l,.114);u=ka(ka(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=Sl([-1]),u=Sl([0]),c=Sl([0]);for(let h=0;h<e.size-1;h++){n=fl(e,0,h+1),r=fl(e,h+1),i=Ca(Ro(n),t),o=Ca(Ro(r),t);const d=Ro(Sa(n,ll(0,n.size)));s=Ca(d,Ro(n));const p=za(r.shape,n.size),f=ka(ll(0,r.size),p),g=Sa(r,f);a=Ca(Ro(g),Ro(r));const m=Wa(s,a),b=Wa(s,a),y=Sa(i,o);c=Sa(Sa(y,m),b);const x=Co(c,u);u=Rl(x,c,u),l=Rl(x,Sl([h]),l)}return l}(bu(va(xu(u),"int32"),Fs([]),256),a));const h=n?yu(u,c):Co(u,c);return va(Sa(h,255),"int32")}}),wu=Rs({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Ts(e,"image","transform","float32"),o=Ts(t,"transforms","transform","float32");d(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),d(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),d(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return vs.runKernel(Jn,l,u)}}),ku=Rs({less_:function(e,t){let n=Ts(e,"a","less","string_or_numeric"),r=Ts(t,"b","less","string_or_numeric");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(xt,s)}}),Iu=Rs({bandPart_:function(e,t,n){const r=Ts(e,"a","bandPart");d(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);let o,l;"number"==typeof t?(d(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),d(t<=a,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`)),o=Ts(t<0?a:t,"numLower","bandPart")):(d("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Rl(ku(t,0),a,qo(t,a))),"number"==typeof n?(d(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),d(n<=i,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`)),l=Ts(n<0?i:n,"numUpper","bandPart")):(d("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=Rl(ku(n,0),i,qo(n,i)));const u=Hi(ll(0,a,1,"int32"),[-1,1]),c=ll(0,i,1,"int32"),h=Wa(u,c),p=Wo(yu(h,o),So(h,Xo(l))),f=Zo([a,i],r.dtype);return Hi(Il(El(Hi(r,[-1,a,i])).map((e=>Rl(p,e,f)))),s)}});function Cu(e,t,n=null){if(0===e.rank)return Va(e);if(1!==e.rank&&null===n)return Cu(Hi(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ro(Va(e),n);if(t===1/0)return Eo(Va(e),n);if(t===-1/0)return jo(Va(e),n);if("euclidean"===t||2===t)return $a(Ro(Ba(Va(e),Ra(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Eo(Ro(Va(e),n[0]),n[1]-1);if(t===1/0)return Eo(Ro(Va(e),n[1]),n[0]);if(t===-1/0)return jo(Ro(Va(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return $a(Ro(Na(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Su=Rs({norm_:function(e,t="euclidean",n=null,r=!1){const s=Cu(e=Ts(e,"x","norm"),t,n);let a=s.shape;if(r){const t=k(n,e.shape);a=Oo(s.shape,t)}return Hi(s,a)}}),$u=Rs({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,d(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)d(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=wl(e,e.shape[0],0).map((e=>kl(e,[0])));d(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(vs.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Sa(Ro(Sa(n[r],e)),n[r]);e=Wa(e,t)}return Ca(e,Su(e,"euclidean"))})));return t?Il(n,0):n}});function Nu(e,t=!1){return vs.tidy((()=>{d(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=wo(n),a=wa(e);const i=$l([[1]],[1,1]);let o=wa(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=vs.tidy((()=>{const t=fl(a,[e,e],[n-e,1]),l=Su(t),u=fl(a,[e,e],[1,1]),c=Rl(Co(u,0),$l([[-1]]),$l([[1]])),h=Wa(u,Sa(c,l)),d=Ca(t,h);o=1===d.shape[0]?wa(i):eo([i,fl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Xo(Ca(Uo(c,h),l)),f=fl(a,[e,0],[n-e,r]),g=Sa(p,o),m=Fl(o);if(0===e)a=Wa(f,Uo(g,Uo(m,f)));else{const t=Wa(f,Uo(g,Uo(m,f)));a=eo([fl(a,[0,0],[e,r]),t],0)}const b=Fl(g),y=fl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Wa(y,Uo(Uo(y,o),b));else{const t=Wa(y,Uo(Uo(y,o),b));s=eo([fl(s,[0,0],[n,e]),t],1)}return[o,a,s]})),zs([t,l,u])}return!t&&n>r&&(s=fl(s,[0,0],[n,r]),a=fl(a,[0,0],[r,r])),[s,a]}))}const Tu=Rs({qr_:function(e,t=!1){if(d(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Nu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=El(Hi(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Nu(e,t);s.push(n),a.push(r)})),[Hi(Il(s,0),e.shape),Hi(Il(a,0),e.shape)]}}});var Eu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Eu||(Eu={}));const Ru=Rs({squaredDifference_:function(e,t){let n=Ts(e,"a","squaredDifference"),r=Ts(t,"b","squaredDifference");[n,r]=ds(n,r),ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel(Pn,s,{})}}),Au={flipLeftRight:Jl,grayscaleToRGB:Zl,resizeNearestNeighbor:mu,resizeBilinear:gu,rgbToGrayscale:eu,rotateWithOffset:tu,cropAndResize:Yl,nonMaxSuppression:ru,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Ts(e,"boxes","nonMaxSuppressionAsync"),i=Ts(t,"scores","nonMaxSuppressionAsync"),o=nu(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=iu(u,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Sl(h,"int32")},nonMaxSuppressionWithScore:pu,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),l=nu(i,o,n,r,s,a);n=l.maxOutputSize,r=l.iouThreshold,s=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=lu(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Sl(d,"int32"),selectedScores:Sl(p)}},nonMaxSuppressionPadded:fu,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Ts(e,"boxes","nonMaxSuppressionAsync"),o=Ts(t,"scores","nonMaxSuppressionAsync"),l=nu(i,o,n,r,s,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:g}=ou(d,p,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Sl(f,"int32"),validOutputs:Ra(g,"int32")}},threshold:vu,transform:wu},_u={bandPart:Iu,gramSchmidt:$u,qr:Tu},Fu=class{static sgd(e){return new Xa(e)}static momentum(e,t,n=!1){return new Ya(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Ja(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Ua(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ma(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Ka(e,t,n,r,s)}static adagrad(e,t=.1){return new Pa(e,t)}},Du="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Ou(){return new Promise((e=>Du((()=>e()))))}function Lu(e,t){const n=e[0].length;e.forEach(((e,t)=>{d(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),d(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)d(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Mu(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var zu;function Pu(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let s=1;s<n.length;++s){const a=n[s],i=r[r.length-n.length+s],o=r[i];if(a>=0)if(o>=0){if(o!==a)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${s+e}] = ${a} but shape[${s+e}] = ${o}`)}else r[i]=a}return r}function Bu(e){const t={FIRST_DIM_SIZE:zu.FIRST_DIM_SIZE,VALUE_ROWIDS:zu.VALUE_ROWIDS,ROW_LENGTHS:zu.ROW_LENGTHS,ROW_SPLITS:zu.ROW_SPLITS,ROW_LIMITS:zu.ROW_LIMITS,ROW_STARTS:zu.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Wu(e){return 0===e.length?0:e[0]===zu.FIRST_DIM_SIZE?e.length-1:e.length}function Uu(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let s=0;s<Math.min(n,r-1);++s){const n=e[s],r=t[s+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${s-e.length}] = ${n} but ragged tensor input.flatValues.shape[${s-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(zu||(zu={}));const Vu=30;function Gu(e){return e<=Vu?e:_(e,Math.floor(Math.sqrt(e)))}function Hu(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function ju(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function qu(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ku(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Xu(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Yu(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function Ju(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===g(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...F(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function Zu(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function Qu(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}Zu(n,t,e)}function ec(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:g(t.shape)/o,sliceSize:i,strides:[...F(n.slice(0,s)),1],outputSize:g(n)}}const tc=1.7580993408473768,nc=1.0507009873554805,rc=.3275911,sc=.254829592,ac=-.284496736,ic=1.421413741,oc=-1.453152027,lc=1.061405429;function uc(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function cc(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function hc(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function dc(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function pc(e,t){return{real:e[2*t],imag:e[2*t+1]}}function fc(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function gc(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function mc(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const bc="->",yc=/->/g,xc=",",vc="...";function wc(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(yc,"").length)/bc.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${bc}").`);const[r,s]=e.split(bc);d(-1===r.indexOf(vc),(()=>`The ellipsis notation ("${vc}") is not supported yet.`));const a=r.split(xc),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==xc&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function kc(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Ic(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:d(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Cc(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=$c(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Sc(e){return e.every(((e,t)=>e===t))}function $c(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Nc(e,t,n=0){let r=[];if("number"==typeof t)d(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);d(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}d(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Tc(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Ec(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Rc(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function Ac(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function _c(e,t){return`size ${e} must be non-negative, not ${t}`}function Fc(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Dc(e,t){return`Input to reshape is a SparseTensor with ${g(e)}\n  dense values, but the requested shape requires a multiple of ${g(t)}. inputShape=${e} outputShape= ${t}`}function Oc(e,t){return`Input to reshape is a tensor with ${g(e)} dense values, but the requested shape has ${g(t)}. inputShape=${e} outputShape=${t}`}function Lc(){return"segment ids must be >= 0"}function Mc(){return"segment ids are not increasing"}function zc(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Pc(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Bc(e,t){let n,r=!1;for(e<=Vu?(n=e,r=!0):n=_(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=_(e,n+1);return n}function Wc(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Uc(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Vc(e){try{return e.map((e=>zr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Gc(e){return e.map((e=>Mr(e)))}function Hc(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=xa(e,"int32"),s=xa([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}!function(){for(const e of Za)Oa(e)}();const jc={kernelName:J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Wl(va(n,"float32"),-1))}}},qc={kernelName:Z,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Na(va(n,"float32")),r=$a(Wa(Ra(1),t));return Xo(Ca(e,r))}}}},Kc={kernelName:Q,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$a(Wa(Na(va(n,"float32")),1));return Ca(e,t)}}}},Xc={kernelName:ee,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{let t=e;const r=Ha(n.shape,s);return r.length>0&&(t=Ro(t,r)),Hi(t,n.shape)},b:()=>{let t=e;const n=Ha(r.shape,s);return n.length>0&&(t=Ro(t,n)),Hi(t,r.shape)}}}},Yc={kernelName:te,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Jc={kernelName:se,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ta(n)}}},Zc={kernelName:ae,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ta(n)}}},Qc={kernelName:ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,$a(Wa(Ra(1),Na(va(n,"float32")))))}}},eh={kernelName:oe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=$a(ka(Ra(1),Na(va(n,"float32"))));return Ca(e,t)}}}},th={kernelName:ce,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=ka(Na(n),Na(r));let a=Sa(e,Ca(r,t));const i=Ha(n.shape,s);return i.length>0&&(a=Ro(a,i)),Hi(a,n.shape)},b:()=>{const t=ka(Na(n),Na(r));let a=Xo(Sa(e,Ca(n,t)));const i=Ha(r.shape,s);return i.length>0&&(a=Ro(a,i)),Hi(a,r.shape)}}}},nh={kernelName:le,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,ka(Na(va(n,"float32")),1))}}},rh={kernelName:ue,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Wa(Ra(1),Na(va(n,"float32"))))}}},sh=Rs({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Ts(e,"dy","avgPool3dGrad"),o=Ts(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),d(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),d(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Gi("avgPool3dGrad",s,a);const h={dy:l,input:u},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},f=vs.runKernel(fe,h,p);return c?Hi(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),ah={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>sh(e,r,s,a,i,o)}}},ih=Rs({avgPoolGrad_:function(e,t,n,r,s){const a=Ts(e,"dy","avgPoolGrad"),i=Ts(t,"input","avgPoolGrad");d(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=Hi(a,[1,a.shape[0],a.shape[1],a.shape[2]])),d(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),d(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},p=vs.runKernel(de,c,h);return u?Hi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),oh={kernelName:he,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ih(e,r,s,a,i)}}},lh={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>Uo(e,s,!1,!1),b:()=>Uo(e,r,!0,!1)}:a&&!i?{a:()=>Uo(s,e,!1,!0),b:()=>Uo(r,e,!1,!1)}:{a:()=>Uo(s,e,!0,!0),b:()=>Uo(e,r,!0,!0)}:{a:()=>Uo(e,s,!1,!0),b:()=>Uo(r,e,!0,!1)}}},uh=Rs({spaceToBatchND_:function(e,t,n){const r=Ts(e,"x","spaceToBatchND");d(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),d(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),d(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return vs.runKernel(An,s,a)}}),ch={kernelName:me,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>uh(e,r,s)}}},hh={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Ro(e,o,!0)}}},dh={kernelName:ve,gradFunc:e=>({x:()=>e.clone()})},ph={kernelName:we,gradFunc:e=>({x:()=>Ta(e)})},fh={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>Rl(Wo(So(r,s),yu(r,a)),e,Ta(e))}}},gh={kernelName:Ce,inputsToSave:["x"],gradFunc:jc.gradFunc},mh={kernelName:Se,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=k(s,t[0].shape)[0],i=r.map((e=>e[a]));return wl(e,i,a).map((e=>()=>e))}},bh={kernelName:$e,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return d(Bi(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>oo(r.shape,e,s,i,o,l),filter:()=>Pl(r,e,s.shape,i,o,l)}}},yh={kernelName:Te,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>ao(e,s,a,i,o,1,l),filter:()=>Pl(e,r,s.shape,a,i,o,l)}}},xh=Rs({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=Hi(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Hi(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),d(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),d(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),d(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),d(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),d(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return vs.runKernel(Re,o,l)}}),vh={kernelName:Ee,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;d(Bi(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>co(i.shape,e,o,s,a),filter:()=>xh(i,e,o.shape,s,a)}}},wh=Rs({sin_:function(e){const t={x:Ts(e,"x","sin","float32")};return vs.runKernel(Cn,t)}}),kh={kernelName:_e,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(Xo(wh(va(n,"float32"))),e)}}},Ih=Rs({sinh_:function(e){const t={x:Ts(e,"x","sinh")};return vs.runKernel(Sn,t)}}),Ch={kernelName:Fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(Ih(va(n,"float32")),e)}}},Sh=Rs({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Ts(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return vs.runKernel(Oe,s,a)}}),$h={kernelName:Oe,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Mo([s],r.rank);let n=Sh(e,s,a,!i);return null!=t&&(n=Fl(n,t)),n}}}},Nh={kernelName:Pe,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;d(Bi(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return d(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),d(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),d(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),d(Wi(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),Gi("depthwiseConv2d",a,i),{x:()=>Kl(l.shape,e,u,s,a,o,i),filter:()=>ql(l,e,u.shape,s,a,o,i)}}},Th={kernelName:Ve,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>vs.runKernel(Ge,a,n),filter:()=>vs.runKernel(He,i,n)}}},Eh={kernelName:Xe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>vs.runKernel(Ye,r)}}},Rh={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Sa(yo(Xo(Na(n))),2/Math.sqrt(Math.PI));return{x:()=>Sa(e,r)}}},Ah={kernelName:Qe,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,n)}}},_h={kernelName:et,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Hi(e,n.shape)}}},Fh={kernelName:tt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,yo(n))}}},Dh={kernelName:at,gradFunc:e=>({x:()=>Ta(e)})},Oh={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Ca(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Hi(Ro(t,a),n.shape):t},b:()=>{let t=Sa(e,va(n,"float32"));const a=Ha(r.shape,s);a.length>0&&(t=Hi(Ro(t,a),r.shape));const i=Na(r);return Xo(Ca(t,va(i,"float32")))}}}},Lh=Rs({rsqrt_:function(e){const t={x:Ts(e,"x","rsqrt","float32")};return vs.runKernel(bn,t)}}),Mh={kernelName:ot,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?Ra(1):o,u=Ha(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Wa(s,a),d=Sa(e,l),p=Lh(ka(i,Ra(r))),f=Sa(Sa(Sa(p,p),p),Ra(-.5));return{x:()=>1===a.rank?Hi(Sa(Sa(e,vo(Hi(p,[1,1,1,a.shape[0]]),c)),l),s.shape):Hi(Sa(Sa(e,p),l),s.shape),mean:()=>{let e=Sa(Sa(p,Ra(-1)),d);return 1===a.rank&&(e=Ro(e,u)),Hi(e,a.shape)},variance:()=>{let e=Sa(Sa(f,h),d);return 1===a.rank&&(e=Ro(e,u)),Hi(e,a.shape)},scale:()=>{const t=Sa(h,p);let n=Sa(e,t);return 1===a.rank&&(n=Ro(n,u)),Hi(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Ro(t,u)),Hi(t,a.shape)}}}},zh=Rs({unsortedSegmentSum_:function(e,t,n){const r=Ts(e,"x","unsortedSegmentSum"),s=Ts(t,"segmentIds","unsortedSegmentSum","int32");d(b(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return vs.runKernel(tr,a,i)}}),Ph={kernelName:lt,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a,batchDims:i}=n,o=k(a,r.shape)[0],l=(e,t,n)=>()=>{const r=e.shape,s=t.size,i=r.slice(0,o),l=i.length,u=r.slice(a,r.length).slice(1),c=u.length,h=Bh(0,l),d=Bh(l+1,l+1+c),p=Wh([i,[s],u]),f=Hi(n,p),g=Hi(t,[s]),m=Wh([[l],h,d]),b=Fl(f,m);let y=zh(b,g,e.shape[o]);const x=zo(m);return y=Fl(y,x),y};if(1===i){const t=r.shape[0],n=r.split(t,0);return{x:()=>{const t=Il(n.map(((t,n)=>l(t,s.slice(n,1),e.slice(n,1))())));return t.reshape(r.shape)},indices:()=>s}}return{x:l(r,s,e),indices:()=>s}}};function Bh(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Wh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Uh={kernelName:ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Ta(n),b:()=>Ta(r)}}},Vh={kernelName:dt,gradFunc:e=>({x:()=>va(e,"float32")})},Gh={kernelName:gt,gradFunc:e=>({x:()=>Ta(e)})},Hh={kernelName:mt,gradFunc:e=>({x:()=>Ta(e)})},jh={kernelName:bt,gradFunc:e=>({x:()=>Ta(e)})},qh={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=Co(r,0);return{x:()=>Rl(a,e,Sa(e,s))}}},Kh={kernelName:It,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,ka(n,1))}}},Xh={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,va(n,"float32"))}}},Yh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=yo(r);return Wa(e,Sa(Ro(e,s,!0),t))}}}},Jh=Rs({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return vs.runKernel(Tt,o,l)}}),Zh={kernelName:Nt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Jh(r,s,e,a,i,o,l)}}};function Qh(e,t,n,r){return t.rank<n.rank&&(t=Hi(t,Oo(t.shape,r))),e.rank<n.rank&&(e=Hi(e,Oo(e.shape,r))),{x:()=>Sa(e,va(mo(n,t),e.dtype))}}const ed={kernelName:Et,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Qh(e,t[1],a,k(s,a.shape));return{x:()=>i.x()}}},td={kernelName:Rt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Sa(e,va(So(n,r),"float32")),b:()=>Sa(e,va(ku(n,r),"float32"))}}},nd=Rs({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Ts(e,"dy","maxPool3dGrad"),l=Ts(t,"input","maxPool3dGrad"),u=Ts(n,"output","maxPool3dGrad");let c=o,h=l,p=u,f=!1;4===l.rank&&(f=!0,c=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Hi(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=Hi(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),d(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),d(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),d(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),Gi("maxPool3dGrad",a,i);const g={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},b=vs.runKernel(Dt,g,m);return f?Hi(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),rd={kernelName:Ft,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>nd(e,r,s,a,i,o,l)}}},sd=Rs({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Ts(e,"dy","maxPoolGrad"),l=Ts(t,"input","maxPoolGrad"),u=Ts(n,"output","maxPoolGrad");d(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),d(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),d(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Gi("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return vs.runKernel(_t,c,h)}}),ad={kernelName:At,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>sd(e,r,s,a,i,o)}}},id={kernelName:Lt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=k(s,r.shape),i=g(Do(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=Hi(e,t);return Ca(Sa(n,Qo(r.shape,"float32")),i)}}}},od={kernelName:Mt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Qh(e,i,a,k(s,a.shape));return{x:()=>o.x()}}},ld={kernelName:zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Sa(e,va(yu(n,r),"float32")),b:()=>Sa(e,va(Co(n,r),"float32"))}}},ud={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fl(e,a,r.shape)}}},cd={kernelName:Bt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Ha(n.shape,s);return t.length>0?Hi(Ro(e,t),n.shape):e},b:()=>{const t=Sa(e,Xo(ko(Ca(n,r)))),a=Ha(r.shape,s);return a.length>0?Hi(Ro(t,a),r.shape):t}}}},hd={kernelName:Ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Sa(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Hi(Ro(t,a),n.shape):t},b:()=>{const t=Sa(e,va(n,"float32")),a=Ha(r.shape,s);return a.length>0?Hi(Ro(t,a),r.shape):t}}}},dd={kernelName:Vt,gradFunc:e=>({x:()=>Xo(e)})},pd={kernelName:Xt,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Zo(n.shape,"float32")}}},fd={kernelName:Kt,gradFunc:e=>({x:()=>Ta(e)})},gd={kernelName:Yt,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return El(e,r).map((e=>()=>e))}},md={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fl(e,a,r.shape)}}},bd={kernelName:Zt,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=ja(a.shape,i.shape);return{a:()=>{const t=va(i,"float32");let n=Sa(e,Sa(t,Ba(a,Wa(t,Ra(1)))));const r=Ha(a.shape,o);return r.length>0&&(n=Ro(n,r)),Hi(n,a.shape)},b:()=>{const t=Co(a,0),n=Rl(t,No(a),Ta(a));let r=Sa(e,Sa(s,n));const l=Ha(i.shape,o);return l.length>0&&(r=Ro(r,l)),Hi(r,i.shape)}}}},yd={kernelName:Qt,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=Co(n,0);return{x:()=>Rl(s,e,Sa(e,r)),alpha:()=>{let t=Rl(s,Ta(e),Sa(e,n));const a=Ha(r.shape,e.shape);return a.length>0&&(t=Ro(t,a)),Hi(t,r.shape)}}}},xd=Rs({cumprod_:function(e,t=0,n=!1,r=!1){const s={x:Ts(e,"x","cumprod")},a={axis:t,exclusive:n,reverse:r};return vs.runKernel(De,s,a)}});const vd={kernelName:en,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;let a=[];return a=null==s?r.shape.map(((e,t)=>t)):"number"==typeof s?[s]:s,{x:()=>function(e,t,n){const r=e.shape.length,s=r-n.length,a=Mo(n,r);let i=e;null!=a&&(i=Fl(e,a));const o=i.shape.slice(),l=o.splice(r-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=function(e,t,n){const r=e.shape.slice();r[n]=1;const s=Hi(t,r),a=xd(e,n,!0,!1),i=xd(e,n,!0,!0),o=Sa(a,i);return Sa(s,o)}(i.reshape(o),t,s);if(u=u.reshape(i.shape),null!=a){const e=zo(a);u=Fl(u,e)}return u}(r,e,a)}}},wd={kernelName:qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{const t=Ca(e,va(r,"float32")),a=Ha(n.shape,s);return a.length>0?Hi(Ro(t,a),n.shape):t},b:()=>{let t=Sa(e,va(n,"float32"));const a=Ha(r.shape,s);a.length>0&&(t=Hi(Ro(t,a),r.shape));const i=Na(r);return Xo(Ca(t,va(i,"float32")))}}}},kd={kernelName:on,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Xo(Na(n)))}}},Id={kernelName:fn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Sa(yu(n,6),Wl(n));return{x:()=>Sa(e,va(r,"float32"))}}},Cd={kernelName:ln,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,va(Wl(n),"float32"))}}},Sd={kernelName:un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Hi(e,n.shape)}}},$d={kernelName:dn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>vs.runKernel(pn,s,n)}}},Nd={kernelName:cn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>vs.runKernel(hn,s,n)}}},Td={kernelName:gn,gradFunc:(e,t,n)=>{const{dims:r}=n,s=k(r,e.shape);return{x:()=>cl(e,s)}}},Ed={kernelName:mn,gradFunc:e=>({x:()=>Ta(e)})},Rd={kernelName:bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xo(Ca(e,Sa(Ba(n,1.5),2)))}}},Ad=Rs({logicalNot_:function(e){const t={x:Ts(e,"x","logicalNot","bool")};return vs.runKernel(St,t)}}),_d={kernelName:wn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>va(Ta(n),"float32"),t:()=>Sa(e,va(n,e.dtype)),e:()=>Sa(e,va(Ad(n),e.dtype))}}},Fd={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Co(n,Ra(0)),r=Ra(tc),s=Ra(nc),a=Sa(e,s),i=Sa(Sa(e,r),yo(va(n,"float32")));return Rl(t,a,i)}}}},Dd={kernelName:Nn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Sa(n,Wa(Ra(1),n)))}}},Od={kernelName:$n,gradFunc:e=>({x:()=>Ta(e)})},Ld=Rs({cos_:function(e){const t={x:Ts(e,"x","cos","float32")};return vs.runKernel(_e,t)}}),Md={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(Ld(va(n,"float32")),e)}}},zd=Rs({cosh_:function(e){const t={x:Ts(e,"x","cosh","float32")};return vs.runKernel(Fe,t)}}),Pd={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(zd(va(n,"float32")),e)}}},Bd={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=Ci(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>tl(e,u)}}},Wd={kernelName:Fn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=Sa(e,r);return{logits:()=>Wa(a,Sa(Ro(a,[s],!0),r))}}},Ud={kernelName:Tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,pl(n))}}},Vd=Rs({batchToSpaceND_:function(e,t,n){const r=Ts(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));d(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),d(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),d(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return vs.runKernel(me,a,i)}}),Gd={kernelName:An,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>Vd(e,r,s)}}},Hd={kernelName:_n,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>eo(e,r)}}},jd=[jc,qc,Kc,Xc,Yc,Jc,Zc,Qc,eh,th,nh,rh,ah,oh,lh,ch,hh,dh,ph,fh,gh,mh,yh,bh,vh,kh,Ch,$h,Nh,Th,wd,Eh,Rh,Ah,_h,Fh,Oh,Dh,Mh,Ph,Uh,Vh,Gh,Hh,jh,qh,Kh,Xh,Yh,Zh,ed,ed,td,rd,ad,id,od,ld,ud,cd,hd,dd,pd,fd,gd,md,md,bd,yd,vd,kd,Id,Cd,Sd,$d,Nd,Td,Ed,Rd,_d,Fd,Dd,Od,Md,Pd,Bd,Wd,Ud,Gd,Gd,Hd,Hd,{kernelName:En,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Sa($a(va(n,"float32")),2))}}},{kernelName:Pn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ra(2);return{a:()=>Sa(e,Sa(s,Wa(n,r))),b:()=>Sa(e,Sa(s,Wa(r,n)))}}},{kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(e,Sa(va(n,"float32"),2))}}},{kernelName:rr,gradFunc:e=>({x:()=>Ta(e)})},{kernelName:jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ja(n.shape,r.shape);return{a:()=>{let t=e;const r=Ha(n.shape,s);return r.length>0&&(t=Ro(t,r)),Hi(t,n.shape)},b:()=>{let t=e;const n=Ha(r.shape,s);return n.length>0&&(t=Ro(t,n)),Hi(Xo(t),r.shape)}}}},{kernelName:Rn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;k(a,r.shape).forEach((e=>{s[e]=1}));const i=Hi(e,s),o=Sa(i,Qo(r.shape,"float32"));return{x:()=>o}}},{kernelName:qn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ca(e,Na(Ld(n)))}}},{kernelName:Kn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Sa(Wa(Ra(1),Na(n)),e)}}},{kernelName:Xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=Ta(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ka(t,fl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ka(t,fl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=ka(t,fl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ka(t,fl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Zn,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=zo(s);return{x:()=>Fl(e,a)}}},{kernelName:er,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Il(e,s)}}},{kernelName:tr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=qa(t,Ta(t)),r=Io(e,n);let s=So(t,Ra(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=xo(s,e+1);s=Wo(s,Qo(r.shape,"bool"));const i=Ta(r);return Rl(s,r,i)}(e,n)}}},{kernelName:nr,gradFunc:e=>({x:()=>Ta(e)})}];for(const e of jd)br(e);es().prototype.abs=function(){return this.throwIfDisposed(),Va(this)};const qd=Rs({acos_:function(e){const t={x:Ts(e,"x","acos")};return vs.runKernel(Z,t)}});es().prototype.acos=function(){return this.throwIfDisposed(),qd(this)};const Kd=Rs({acosh_:function(e){const t={x:Ts(e,"x","acosh")};return vs.runKernel(Q,t)}});es().prototype.acosh=function(){return this.throwIfDisposed(),Kd(this)},es().prototype.add=function(e){return this.throwIfDisposed(),ka(this,e)},es().prototype.all=function(e,t){return this.throwIfDisposed(),Ni(this,e,t)},es().prototype.any=function(e,t){return this.throwIfDisposed(),Ti(this,e,t)},es().prototype.argMax=function(e){return this.throwIfDisposed(),Ei(this,e)};const Xd=Rs({argMin_:function(e,t=0){const n={x:Ts(e,"x","argMin")},r={axis:t};return vs.runKernel(ae,n,r)}});es().prototype.argMin=function(e){return this.throwIfDisposed(),Xd(this,e)},es().prototype.asScalar=function(){return this.throwIfDisposed(),d(1===this.size,(()=>"The array must have only 1 element.")),Hi(this,[])},es().prototype.asType=function(e){return this.throwIfDisposed(),va(this,e)},es().prototype.as1D=function(){return this.throwIfDisposed(),Hi(this,[this.size])},es().prototype.as2D=function(e,t){return this.throwIfDisposed(),Hi(this,[e,t])},es().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Hi(this,[e,t,n])},es().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Hi(this,[e,t,n,r])},es().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),Hi(this,[e,t,n,r,s])};const Yd=Rs({asin_:function(e){const t={x:Ts(e,"x","asin")};return vs.runKernel(ie,t)}});es().prototype.asin=function(){return this.throwIfDisposed(),Yd(this)};const Jd=Rs({asinh_:function(e){const t={x:Ts(e,"x","asinh")};return vs.runKernel(oe,t)}});es().prototype.asinh=function(){return this.throwIfDisposed(),Jd(this)};const Zd=Rs({atan_:function(e){const t={x:Ts(e,"x","atan")};return vs.runKernel(le,t)}});es().prototype.atan=function(){return this.throwIfDisposed(),Zd(this)};const Qd=Rs({atan2_:function(e,t){let n=Ts(e,"a","atan2"),r=Ts(t,"b","atan2");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(ce,s)}});es().prototype.atan2=function(e){return this.throwIfDisposed(),Qd(this,e)};const ep=Rs({atanh_:function(e){const t={x:Ts(e,"x","atanh")};return vs.runKernel(ue,t)}});es().prototype.atanh=function(){return this.throwIfDisposed(),ep(this)},es().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ji(this,e,t,n,r)},es().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Vd(this,e,t)},es().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),Ki(this,e,t,n,r,s)},es().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Zi(this,e)},es().prototype.cast=function(e){return this.throwIfDisposed(),va(this,e)};const tp=Rs({ceil_:function(e){const t={x:Ts(e,"x","ceil","float32")};return vs.runKernel(we,t)}});es().prototype.ceil=function(){return this.throwIfDisposed(),tp(this)},es().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Qi(this,e,t)},es().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Qr&&(e=[e]),eo([this,...e],t)},es().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),io(this,e,t,n,r,s,a)},es().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),lo(this,e,t,n,r,s)},es().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),ao(this,e,t,n,r,s,a)},es().prototype.cos=function(){return this.throwIfDisposed(),Ld(this)},es().prototype.cosh=function(){return this.throwIfDisposed(),zd(this)},es().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),xd(this,e,t,n)},es().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Sh(this,e,t,n)};const np=Rs({depthToSpace_:function(e,t,n="NHWC"){const r=Ts(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];d(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),d(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),d(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),d(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return vs.runKernel(ze,o,l)}});es().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),np(this,e,t)},es().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),fo(this,e,t,n,r,s,a)};const rp=Rs({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Ts(e,"x","dilation2d"),o=Ts(t,"filter","dilation2d");d(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),d(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),d("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=Hi(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0),d(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},p=vs.runKernel(Ve,c,h);return u?Hi(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});es().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),rp(this,e,t,n,r,s)};const sp=Rs({divNoNan_:function(e,t){let n=Ts(e,"a","div"),r=Ts(t,"b","div");[n,r]=ds(n,r);const s=Ca(n,r),a=Ta(s),i=mo(r,a);return Rl(i,a,s)}});es().prototype.divNoNan=function(e){return this.throwIfDisposed(),sp(this,e)},es().prototype.div=function(e){return this.throwIfDisposed(),Ca(this,e)};const ap=Rs({dot_:function(e,t){const n=Ts(e,"t1","dot"),r=Ts(t,"t2","dot");d(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(d(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=Hi(n,[1,-1]),t=Hi(r,[-1,1]),s=Uo(e,t);return Hi(s,[])}if(1===n.rank&&2===r.rank){const e=Hi(n,[1,-1]),t=Hi(r,[r.shape[0],r.shape[1]]),s=Uo(e,t);return Hi(s,[s.size])}if(2===n.rank&&1===r.rank){const e=Hi(r,[-1,1]),t=Uo(n,e);return Hi(t,[t.size])}{const e=Hi(r,[r.shape[0],r.shape[1]]);return Uo(n,e)}}});es().prototype.dot=function(e){return this.throwIfDisposed(),ap(this,e)},es().prototype.elu=function(){return this.throwIfDisposed(),go(this)},es().prototype.equal=function(e){return this.throwIfDisposed(),mo(this,e)},es().prototype.erf=function(){return this.throwIfDisposed(),bo(this)};const ip=Rs({euclideanNorm_:function(e,t=null,n=!1){return Su(e,"euclidean",t,n)}});es().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},es().prototype.exp=function(){return this.throwIfDisposed(),yo(this)},es().prototype.expandDims=function(e){return this.throwIfDisposed(),xo(this,e)};const op=Rs({expm1_:function(e){const t={x:Ts(e,"x","expm1")};return vs.runKernel(tt,t)}});es().prototype.expm1=function(){return this.throwIfDisposed(),op(this)},es().prototype.fft=function(){return this.throwIfDisposed(),Ol(this)},es().prototype.flatten=function(){return this.throwIfDisposed(),Hi(this,[this.size])},es().prototype.floor=function(){return this.throwIfDisposed(),ko(this)},es().prototype.floorDiv=function(e){return this.throwIfDisposed(),Ia(this,e)},es().prototype.gather=function(e,t,n){return this.throwIfDisposed(),Io(this,e,t,n)},es().prototype.greaterEqual=function(e){return this.throwIfDisposed(),So(this,e)},es().prototype.greater=function(e){return this.throwIfDisposed(),Co(this,e)},es().prototype.ifft=function(){return this.throwIfDisposed(),Ml(this)},es().prototype.irfft=function(){return this.throwIfDisposed(),zl(this)};const lp=Rs({isFinite_:function(e){const t={x:Ts(e,"x","isFinite")};return vs.runKernel(gt,t)}});es().prototype.isFinite=function(){return this.throwIfDisposed(),lp(this)};const up=Rs({isInf_:function(e){const t={x:Ts(e,"x","isInf")};return vs.runKernel(mt,t)}});es().prototype.isInf=function(){return this.throwIfDisposed(),up(this)};const cp=Rs({isNaN_:function(e){const t={x:Ts(e,"x","isNaN")};return vs.runKernel(bt,t)}});es().prototype.isNaN=function(){return this.throwIfDisposed(),cp(this)},es().prototype.leakyRelu=function(e){return this.throwIfDisposed(),$o(this,e)},es().prototype.lessEqual=function(e){return this.throwIfDisposed(),yu(this,e)},es().prototype.less=function(e){return this.throwIfDisposed(),ku(this,e)};const hp=Rs({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Ts(e,"x","localResponseNormalization");d(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),d(b(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=Hi(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=vs.runKernel(Nt,l,u);return o?Hi(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});es().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),hp(this,e,t,n,r)};const dp=Rs({logSigmoid_:function(e){const t=Ts(e,"x","logSigmoid");return Ea((e=>({value:Xo(vl(Xo(e))),gradFunc:t=>Sa(t,pl(Xo(e)))})))(t)}});es().prototype.logSigmoid=function(){return this.throwIfDisposed(),dp(this)},es().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ao(this,e)},es().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Bo(this,e,t)},es().prototype.log=function(){return this.throwIfDisposed(),No(this)},es().prototype.log1p=function(){return this.throwIfDisposed(),To(this)},es().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Wo(this,e)},es().prototype.logicalNot=function(){return this.throwIfDisposed(),Ad(this)};const pp=Rs({logicalOr_:function(e,t){const n=Ts(e,"a","logicalOr","bool"),r=Ts(t,"b","logicalOr","bool");ja(n.shape,r.shape);const s={a:n,b:r};return vs.runKernel($t,s)}});es().prototype.logicalOr=function(e){return this.throwIfDisposed(),pp(this,e)};const fp=Rs({logicalXor_:function(e,t){const n=Ts(e,"a","logicalXor","bool"),r=Ts(t,"b","logicalXor","bool");return ja(n.shape,r.shape),Wo(pp(e,t),Ad(Wo(e,t)))}});es().prototype.logicalXor=function(e){return this.throwIfDisposed(),fp(this,e)},es().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Uo(this,e,t,n)},es().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Vo(this,e,t,n,r)},es().prototype.max=function(e,t){return this.throwIfDisposed(),Eo(this,e,t)},es().prototype.maximum=function(e){return this.throwIfDisposed(),qa(this,e)},es().prototype.mean=function(e,t){return this.throwIfDisposed(),Ho(this,e,t)},es().prototype.min=function(e,t){return this.throwIfDisposed(),jo(this,e,t)},es().prototype.minimum=function(e){return this.throwIfDisposed(),qo(this,e)};const gp=Rs({mirrorPad_:function(e,t,n){d("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Ts(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");d(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)d(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),d(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return vs.runKernel(Pt,i,a)}});es().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),gp(this,e,t)};const mp=Rs({mod_:function(e,t){let n=Ts(e,"a","mod"),r=Ts(t,"b","mod");[n,r]=ds(n,r);const s={a:n,b:r};return vs.runKernel(Bt,s)}});es().prototype.mod=function(e){return this.throwIfDisposed(),mp(this,e)},es().prototype.mul=function(e){return this.throwIfDisposed(),Sa(this,e)},es().prototype.neg=function(){return this.throwIfDisposed(),Xo(this)},es().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Su(this,e,t,n)},es().prototype.notEqual=function(e){return this.throwIfDisposed(),Yo(this,e)},es().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Jo(this,e,t,n)},es().prototype.onesLike=function(){return this.throwIfDisposed(),el(this)},es().prototype.pad=function(e,t){return this.throwIfDisposed(),tl(this,e,t)};const bp=Rs({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Ts(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Hi(o,[1,o.shape[0],o.shape[1],o.shape[2]])),d(Wi(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Ai(l.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const f=1===h[0]&&1===h[1],[g,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),b=f?r:"valid",y=f?l:uh(l,h,g),x=("avg"===n?()=>ji(y,t,a,b,i):()=>Vo(y,t,a,b,i))(),v=f?x:Vd(x,h,m);return u?Hi(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});es().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),bp(this,e,t,n,r,s,a)},es().prototype.pow=function(e){return this.throwIfDisposed(),Ba(this,e)},es().prototype.prelu=function(e){return this.throwIfDisposed(),nl(this,e)};const yp=Rs({prod_:function(e,t=null,n=!1){let r=Ts(e,"x","prod");"bool"===r.dtype&&(r=va(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return vs.runKernel(en,s,a)}});es().prototype.prod=function(e,t){return this.throwIfDisposed(),yp(this,e,t)};const xp=Rs({reciprocal_:function(e){const t={x:Ts(e,"x","reciprocal")};return vs.runKernel(on,t)}});es().prototype.reciprocal=function(){return this.throwIfDisposed(),xp(this)},es().prototype.relu=function(){return this.throwIfDisposed(),ul(this)},es().prototype.relu6=function(){return this.throwIfDisposed(),Bl(this)},es().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Hi(this,e.shape)},es().prototype.reshape=function(e){return this.throwIfDisposed(),Hi(this,e)},es().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),gu(this,e,t,n)},es().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),mu(this,e,t,n)},es().prototype.reverse=function(e){return this.throwIfDisposed(),cl(this,e)},es().prototype.rfft=function(){return this.throwIfDisposed(),Ll(this)},es().prototype.round=function(){return this.throwIfDisposed(),xu(this)},es().prototype.rsqrt=function(){return this.throwIfDisposed(),Lh(this)},es().prototype.selu=function(){return this.throwIfDisposed(),hl(this)},es().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),dl(this,e,t,n,r,s,a)},es().prototype.sigmoid=function(){return this.throwIfDisposed(),pl(this)};const vp=Rs({sign_:function(e){const t={x:Ts(e,"x","sign")};return vs.runKernel($n,t)}});es().prototype.sign=function(){return this.throwIfDisposed(),vp(this)},es().prototype.sin=function(){return this.throwIfDisposed(),wh(this)},es().prototype.sinh=function(){return this.throwIfDisposed(),Ih(this)},es().prototype.slice=function(e,t){return this.throwIfDisposed(),fl(this,e,t)},es().prototype.softmax=function(e){return this.throwIfDisposed(),xl(this,e)},es().prototype.softplus=function(){return this.throwIfDisposed(),vl(this)},es().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),uh(this,e,t)},es().prototype.split=function(e,t){return this.throwIfDisposed(),wl(this,e,t)},es().prototype.sqrt=function(){return this.throwIfDisposed(),$a(this)},es().prototype.square=function(){return this.throwIfDisposed(),Na(this)},es().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ru(this,e)},es().prototype.squeeze=function(e){return this.throwIfDisposed(),kl(this,e)},es().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Qr?[this,e]:[this,...e];return Il(n,t)},es().prototype.step=function(e){return this.throwIfDisposed(),Wl(this,e)};const wp=Rs({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:Ts(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return vs.runKernel(Un,u,c)}});es().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),wp(this,e,t,n,r,s,a,i,o)},es().prototype.sub=function(e){return this.throwIfDisposed(),Wa(this,e)},es().prototype.sum=function(e,t){return this.throwIfDisposed(),Ro(this,e,t)};const kp=Rs({tan_:function(e){const t={x:Ts(e,"x","tan","float32")};return vs.runKernel(qn,t)}});es().prototype.tan=function(){return this.throwIfDisposed(),kp(this)},es().prototype.tanh=function(){return this.throwIfDisposed(),Cl(this)},es().prototype.tile=function(e){return this.throwIfDisposed(),vo(this,e)},es().prototype.toBool=function(){return this.throwIfDisposed(),va(this,"bool")},es().prototype.toFloat=function(){return this.throwIfDisposed(),va(this,"float32")},es().prototype.toInt=function(){return this.throwIfDisposed(),va(this,"int32")};const Ip=Rs({topk_:function(e,t=1,n=!0){const r=Ts(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=vs.runKernel(Yn,a,i);return{values:o,indices:l}}});es().prototype.topk=function(e,t){return this.throwIfDisposed(),Ip(this,e,t)},es().prototype.transpose=function(e){return this.throwIfDisposed(),Fl(this,e)};const Cp=Rs({unique_:function(e,t=0){const n=Ts(e,"x","unique","string_or_numeric");d(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=vs.runKernel(Qn,r,s);return{values:a,indices:i}}});es().prototype.unique=function(e){return this.throwIfDisposed(),Cp(this,e)},es().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),zh(this,e,t)},es().prototype.unstack=function(e){return this.throwIfDisposed(),El(this,e)},es().prototype.where=function(e,t){return this.throwIfDisposed(),Rl(e,this,t)},es().prototype.zerosLike=function(){return this.throwIfDisposed(),Ta(this)};class Sp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sp.prototype)}}class $p extends Error{constructor(e){super(e),Object.setPrototypeOf(this,$p.prototype)}}class Np extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Np.prototype)}}class Tp extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tp.prototype)}}class Ep extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ep.prototype)}}Error;class Rp{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}function Ap(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function _p(e,t){if(!e)throw new Ep(t)}function Fp(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Dp(e){return 1===e.length?e[0]:e}function Op(e){return Array.isArray(e)?e:[e]}function Lp(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Mp(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let zp={};function Pp(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Bp(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Bp(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Bp(t):e[n]=t.value)}}}function Wp(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in zp)a=zp[s];else if(a=t[s],null==a)throw new Np(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Np(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in zp?[o,l]=zp.className:i in t&&([o,l]=t[i]),null==o)throw new Np(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(zp))e[t]=zp[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},zp);for(const e of Object.keys(n))zp[e]=n[e];Bp(a.config);const r=l(o,a.config,n,s);return zp=Object.assign({},t),r}{const e=Object.assign({},zp);for(const e of Object.keys(n))zp[e]=n[e];const t=new o(a.config);return zp=Object.assign({},e),t}}}function Up(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Vp(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Gp(e){if(null==e)throw new Np(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Hp(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Np(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function jp(e,t,n=0,r=1/0){return _p(n>=0),_p(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function qp(e,t){Array.isArray(e)?(d(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>qp(e,`element ${n+1} of ${t}`)))):d(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Kp(e)}.`))}function Kp(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Kp(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Xp(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}let Yp=0;function Jp(){return Yp++}const Zp={};function Qp(e=""){return e in Zp||(Zp[e]=0),Zp[e]+=1,e+Zp[e].toString()}const ef=["channelsFirst","channelsLast"],tf=["nearest","bilinear"],nf=["valid","same","causal"],rf=["max","avg"],sf=["sum","mul","concat","ave"],af=new Map;function of(e){Hp(ef,"DataFormat",e)}function lf(e){Hp(nf,"PaddingMode",e)}function uf(e){Hp(rf,"PoolMode",e)}const cf=[];function hf(e,t){cf.push(e);try{const e=t();return cf.pop(),e}catch(e){throw cf.pop(),e}}function df(e){if(!gf(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===cf.length?"":cf.join("/")+"/")+e}function pf(e){if(!gf(e))throw new Error("Not a valid tensor name: '"+e+"'");af.has(e)||af.set(e,0);const t=af.get(e);if(af.set(e,af.get(e)+1),t>0){const n=`${e}_${t}`;return af.set(n,1),n}return e}const ff=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gf(e){return!!e.match(ff)}function mf(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function bf(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function yf(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function xf(e,t){if(t<e)throw new Np(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}let vf;function wf(){return null==vf&&(vf=vs.backend.epsilon()),vf}function kf(e,t){return va(e,t)}function If(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Hi(e,n)}function Cf(e,t,n){return Ms((()=>{switch(e.rank){case 1:return gl(e,t,n);case 2:return ml(e,[t,0],[n,e.shape[1]]);case 3:return bl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return yl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return fl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return fl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Np(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Sf(e,t,n){return Ms((()=>{switch(e.rank){case 1:return gl(e,t,n);case 2:return ml(e,[0,t],[e.shape[0],n]);case 3:return bl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return yl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Np(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function $f(e,t,n,r){return Ms((()=>{switch(e.rank){case 1:return gl(e,t,n);case 2:switch(r){case 1:return Cf(e,t,n);case 2:return Sf(e,t,n);default:throw new Np(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Cf(e,t,n);case 2:return bl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Sf(e,t,n);default:throw new Np(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Cf(e,t,n);case 2:return yl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return yl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Sf(e,t,n);default:throw new Np(`The axis is not within the rank of the tensor ${r}`)}default:throw new Np(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Nf(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),eo(e,t)}function Tf(e,t){switch(e.rank){case 1:return to([e,t]);case 2:return no([e,t],0);case 3:return ro([e,t],0);case 4:return so([e,t],0);default:throw new Np(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ef(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Np(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return vo(e,t)}function Rf(e,t=0,n=1,r,s){return il(e,t,n,r,s)}function Af(e,t,n,r){if(e.rank<2||t.rank<2)throw new Tp(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Tp(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Xl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Df(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=Hi(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Hi(Fl(t,c),[l,-1]);const h=[...s,...u];return Hi(Xl({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Df(e.rank,r,"channelsLast"):null,activation:n}),h)}}function _f(e,t,n){return Ms((()=>(t=Array.isArray(t)?Sl(t,"int32"):va(t,"int32"),Io(e,t,n))))}function Ff(e){return Sa(e,e)}function Df(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Np(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?Hi(t,[1,r[0],1,1,1]):Hi(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?Hi(t,[1,1,1,1,r[0]]):Hi(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?Hi(t,[1,r[0],1,1]):Hi(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?Hi(t,[1,1,1,r[0]]):Hi(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?Hi(t,[1,r[0],1]):Hi(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?Hi(t,[1,1,r[0]]):Hi(t,[1].concat(r))}else if(e<3)return t;throw new Np(`Unsupported input rank by biasAdd: ${t.rank}`)}function Of(e,t,n){return Ms((()=>(null==n&&(n="channelsLast"),of(n),ka(e,Df(e.rank,t,n)))))}function Lf(e,t,n,r){return Ms((()=>Dl(e,t,n,r)))}function Mf(e,t,n=!1){return n?e():t()}const zf=["fanIn","fanOut","fanAvg"],Pf=["normal","uniform","truncatedNormal"];class Bf extends Fa{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Wf extends Bf{apply(e,t){return Zo(e,t)}}Wf.className="Zeros",Oa(Wf);class Uf extends Bf{apply(e,t){return Qo(e,t)}}Uf.className="Ones",Oa(Uf);class Vf extends Bf{constructor(e){if(super(),"object"!=typeof e)throw new Np(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Np(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ms((()=>Sa(Ra(this.value),Qo(e,t))))}getConfig(){return{value:this.value}}}Vf.className="Constant",Oa(Vf);class Gf extends Bf{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ol(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Gf.className="RandomUniform",Oa(Gf);class Hf extends Bf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tp(`randomNormal does not support dType ${t}.`);return Rf(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Hf.className="RandomNormal",Oa(Hf);class jf extends Bf{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tp(`truncatedNormal does not support dType ${t}.`);return Tl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}jf.className="TruncatedNormal",Oa(jf);class qf extends Bf{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ms((()=>{if(2!==e.length||e[0]!==e[1])throw new Np("Identity matrix initializer can only be used for 2D square matrices.");return Sa(this.gain,wo(e[0]))}))}getConfig(){return{gain:this.gain}}}qf.className="Identity",Oa(qf);class Kf extends Bf{constructor(e){if(super(),e.scale<0)throw new Np(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Hp(zf,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Hp(Pf,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(of(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=mf(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=mf(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=mf(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Tp(`${this.getClassName()} does not support dType ${t}.`);return Tl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return ol(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Kf.className="VarianceScaling",Oa(Kf);class Xf extends Kf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}Xf.className="GlorotUniform",Oa(Xf);class Yf extends Kf{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}Yf.className="GlorotNormal",Oa(Yf);class Jf extends Kf{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}Jf.className="HeNormal",Oa(Jf);class Zf extends Kf{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}Zf.className="HeUniform",Oa(Zf);class Qf extends Kf{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}Qf.className="LeCunNormal",Oa(Qf);class eg extends Kf{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Kf.className}}eg.className="LeCunUniform",Oa(eg);class tg extends Bf{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ms((()=>{if(e.length<2)throw new Tp("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=g(e.slice(0,-1)),r=e[e.length-1],s=n*r;s>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${s}) elements: Slowness may result.`);const a=Rf([Math.max(r,n),Math.min(r,n)],0,1,t,this.seed),i=_u.qr(a,!1);let o=i[0];const l=i[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return o=Sa(o,l.sign()),n<r&&(o=o.transpose()),Sa(Ra(this.gain),o.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}tg.className="Orthogonal",Oa(tg);const ng={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function rg(e,t={}){return Wp(e,Da.getMap().classNameMap,t,"initializer")}function sg(e){return Pp(e)}function ag(e){if("string"==typeof e){const t=e in ng?ng[e]:e;if("GlorotNormal"===t)return new Yf;if("GlorotUniform"===t)return new Xf;if("HeNormal"===t)return new Jf;if("HeUniform"===t)return new Zf;if("LeCunNormal"===t)return new Qf;if("LeCunUniform"===t)return new eg;{const e={};return e.className=t,e.config={},rg(e)}}return e instanceof Bf?e:rg(e)}function ig(e){return Array.isArray(e)&&Array.isArray(e[0])}function og(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function lg(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Np(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ug(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Np(`Expected exactly 1 Shape; got ${e.length}`)}return e}function cg(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const hg="Variable";class dg{constructor(e,t="float32",n=hg,r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Jp(),n=null==n?hg:n,this.originalName=df(n),this.name=pf(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return vs.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function pg(e){return e.map((e=>e.read()))}function fg(e){e.forEach((e=>{e[0].write(e[1])}))}class gg{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class mg{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Jp(),null!=a&&(this.originalName=df(a),this.name=pf(this.originalName)),this.rank=t.length}}let bg=0;class yg{constructor(e,t){this.callArgs=t,this.id=bg++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let xg=0;class vg extends Fa{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=xg++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Lp(e)+"_"+Qp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new $p(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Np(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Dp(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Dp(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Sp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Sp(`Layer ${this.name} is not connected, no input to return.`);return Dp(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Sp(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Sp(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Dp(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){const t=Op(e);if(null==this.inputSpec||0===this.inputSpec.length)return;const n=Op(this.inputSpec);if(t.length!==n.length)throw new Np(`Layer ${this.name} expects ${n.length} inputs, but it received ${t.length} input tensors. Input received: ${e}`);for(let e=0;e<t.length;e++){const r=t[e],s=n[e];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Np(`Input ${e} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Np(`Input ${e} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Np(`Input ${e} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Np(`Input ${e} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const t=r.shape;for(const n in s.axes){const r=Number(n),a=s.axes[n],i=r>=0?t[r]:t[t.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Np(`Input ${e} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${t}.`)}}if(null!=s.shape)for(let t=0;t<s.shape.length;++t){const n=s.shape[t],a=r.shape[t];if(null!=n&&null!=a&&n!==a)throw new Np(`Input ${e} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Op(e),r=function(e){let t=!0;for(const n of Op(e))if(!(n instanceof mg)){t=!1;break}return t}(e),s=function(e){let t=!0;for(const n of Op(e))if(n instanceof mg){t=!1;break}return t}(e);if(r===s)throw new Np("Arguments to apply() must be all SymbolicTensors or all Tensors");return hf(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Op(e))t.push(n.shape);this.build(Dp(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);this.supportsMasking&&this.setMaskMetadata(e,r);const s=Op(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=Dp(a),null!=this.activityRegularizer)throw new Tp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Op(e);const t=[];for(const n of e)t.push(n.shape);return Dp(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new mg(a,n,this,Op(e),t,this.name,r))):new mg(a,r,this,Op(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Tp("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Sp(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Sp(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new $p(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return cg(this.weights)}build(e){this.built=!0}getWeights(e=!1){return pg(e?this.trainableWeights:this.weights)}setWeights(e){Ms((()=>{const t=this.weights;if(t.length!==e.length)throw new Np(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=pg(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!m(a.shape,o.shape))throw new Np(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}fg(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Np(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():ag("zeros"));const l=r.apply(t,n),u=new dg(l,n,e,a,i);return l.dispose(),null!=s&&this.addLoss((()=>s.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Op(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}setMaskMetadata(e,t,n){if(!this.supportsMasking)return;const r=this.computeMask(e,n),s=Op(t),a=Op(r);if(s.length!==a.length)throw new Error(`${this.name} outputs ${s.length} tensors but ${s.length} masks for those tensors`);for(let e=0;e<s.length;e++)s[e].kerasMask=a[e]}addInboundNode(e,t,n,r,s,a,i=null){const o=Op(e);t=Op(t),n=Op(n),r=Op(r),s=og(s),a=og(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new yg({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function wg(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=wg(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class kg extends vg{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Qp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Np("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Np("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Np("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new mg(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new yg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Np(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}kg.className="InputLayer",Oa(kg);class Ig{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Ig)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Np(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return va(t,e.dtype)}catch(n){throw new Np(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof mg){if(null==this.id2Value[e.id])throw new Np(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Np(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof mg){if(null==this.id2Value[e.id])throw new Np(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Np(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&zs(this.id2Mask)}}const Cg=new Rp,Sg=new Rp;function $g(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,p=Cg.get(c);if(null==p){const e=function(e,t){d(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=Tg(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=Tg(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Ng(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Cg.put(c,p),Sg.put(c,h)}h={},s||Object.assign(h,Sg.get(c));const f=new Ig(t);for(let e=0;e<p.length;++e){if(null!=r){const e=Ls().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=p[e],i=a.sourceLayer;if(i instanceof kg)continue;const u=[],c=[],d=[];let g=!1;for(const e of a.inputs){const n=f.getValue(e),r=f.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||d.push(n))}g&&((n=n||{}).mask=c[0]);const m=Op(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=Eg(a),x=Array.isArray(y)?y:[y];for(let e=0;e<x.length;++e){f.hasKey(x[e])||f.add(x[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=m[e])}s||zs(d)}return f.disposeMasks(),a?l:l[0]}function Ng(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Tg(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function Eg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}function Rg(e,t){return Ms((()=>$a(Ro(Sa(e,e),t,!0))))}j().registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),(function(e){null!=Cg&&Cg.setMaxEntries(e),null!=Sg&&Sg.setMaxEntries(e)}));class Ag extends Fa{getConfig(){return{}}}class _g extends Ag{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ms((()=>{const t=Rg(e,this.axis),n=Qi(t,0,this.maxValue);return Sa(e,Ca(n,ka(wf(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}_g.className="MaxNorm",Oa(_g);class Fg extends Ag{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ms((()=>Ca(e,ka(wf(),Rg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Fg.className="UnitNorm",Oa(Fg);class Dg extends Ag{apply(e){return ul(e)}}Dg.className="NonNeg",Oa(Dg);class Og extends Ag{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ms((()=>{const t=Rg(e,this.axis),n=ka(Sa(this.rate,Qi(t,this.minValue,this.maxValue)),Sa(1-this.rate,t));return Sa(e,Ca(n,ka(wf(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Og.className="MinMaxNorm",Oa(Og);const Lg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Mg(e){return Pp(e)}function zg(e,t={}){return Wp(e,Da.getMap().classNameMap,t,"constraint")}function Pg(e){return null==e?null:"string"==typeof e?zg({className:e in Lg?Lg[e]:e,config:{}}):e instanceof Ag?e:zg(e)}async function Bg(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];zs(r)}}function Wg(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Ug;!function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ug||(Ug={}));class Vg{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Gg{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Hg extends Vg{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Ms((()=>ka(this.totals[e],Sa(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Ms((()=>{const n=Sa(Ca(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ps(t[e])})))}}class jg extends Vg{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class qg extends Vg{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Ou,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");E(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():Lr();return(...a)=>{const i=null!=n?n():Lr();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Bg(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Bg(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Bg(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Bg(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Bg(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):E(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Bg(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Bg(e),await this.trainEnd(e))}}function Kg(e,t){return null==e&&(e={}),e instanceof Vg?[e]:Array.isArray(e)&&e[0]instanceof Vg?e:Op(e).map((e=>new qg(e,t)))}class Xg{constructor(){}static registerCallbackConstructor(e,t){d(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Xg.checkForDuplicate(t),null==Xg.constructors[e]&&(Xg.constructors[e]=[]),Xg.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Xg.constructors)Xg.constructors[+t].forEach((t=>{if(t===e)throw new Np("Duplicate callback constructor.")}))}static clear(){Xg.constructors={}}static createCallbacks(e){const t=[];for(const n in Xg.constructors){const r=+n;e>=r&&t.push(...Xg.constructors[r])}return t.map((e=>new e))}}function Yg(e,t,n,r,s,a,i,o,l){const u=new jg,c=[new Hg,...Xg.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Gg(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Jg(e,t={},n=!1){return Wp(e,Da.getMap().classNameMap,t,"layer",n)}function Zg(e,t){return Ms((()=>{"float32"!==e.dtype&&(e=va(e,"float32"));const n=Ro(Ff(e),t,!0),r=za(n.shape,wf()),s=$a(qa(n,r));return Ca(e,s)}))}function Qg(e,t){return Ms((()=>Ho(Ff(Wa(t,e)),-1)))}function em(e,t){return Ms((()=>Ho(Va(Wa(t,e)),-1)))}function tm(e,t){return Ms((()=>{const n=Wa(e,t),r=Qi(Va(e),wf(),Number.MAX_VALUE),s=Va(Ca(n,r));return Sa(100,Ho(s,-1))}))}function nm(e,t,n=!1){return Ms((()=>{if(n)t=xl(t);else{const e=Ro(t,t.shape.length-1,!0);t=Ca(t,e)}return t=Qi(t,wf(),1-wf()),Xo(Ro(Sa(va(e,"float32"),No(t)),t.shape.length-1))}))}function rm(e,t,n=!1){return Ms((()=>{const r=va(ko(function(e){const t=[mf(e.shape)];return Hi(e,t)}(e)),"int32"),s=(t=Qi(t,wf(),1-wf())).shape;return nm(Hi(Jo(r,s[s.length-1]),s),t,n)}))}function sm(e,t){return Ms((()=>{let n;return n=Qi(t,wf(),1-wf()),n=No(Ca(n,Wa(1,n))),Ho(function(e,t){if(!m(e.shape,t.shape))throw new Np(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ms((()=>{const n=ul(t),r=Xo(Va(t));return ka(Wa(n,Sa(t,e)),To(yo(r)))}))}(e,n),-1)}))}function am(e,t){return Ms((()=>{const n=Zg(e,-1),r=Zg(t,-1),s=Sa(n,r);return Xo(Ro(s,-1))}))}Xg.constructors={};const im={meanSquaredError:Qg,meanAbsoluteError:em,meanAbsolutePercentageError:tm,meanSquaredLogarithmicError:function(e,t){return Ms((()=>{const n=Qi(t,wf(),Number.MAX_VALUE),r=No(ka(1,n)),s=Qi(e,wf(),Number.MAX_VALUE),a=No(ka(1,s));return Ho(Ff(Wa(r,a)),-1)}))},squaredHinge:function(e,t){return Ms((()=>{const n=qa(0,Wa(1,Sa(e,t)));return Ho(Ff(n),-1)}))},hinge:function(e,t){return Ms((()=>{const n=qa(0,Wa(1,Sa(e,t)));return Ho(n,-1)}))},categoricalHinge:function(e,t){return Ms((()=>{const n=Ro(Sa(e,t),-1),r=Eo(Sa(Wa(1,e),t),-1);return qa(0,ka(1,Wa(r,n)))}))},logcosh:function(e,t){return Ms((()=>{const n=Math.log(2),r=Wa(t,e),s=Wa(ka(r,vl(Sa(-2,r))),n);return Ho(s,-1)}))},categoricalCrossentropy:nm,sparseCategoricalCrossentropy:rm,binaryCrossentropy:sm,kullbackLeiblerDivergence:function(e,t){return Ms((()=>{const n=Qi(e,wf(),1),r=Qi(t,wf(),1);return Ro(Sa(e,No(Ca(n,r))),-1)}))},poisson:function(e,t){return Ms((()=>{const n=No(ka(wf(),t));return Ho(Wa(t,Sa(e,n)),-1)}))},cosineProximity:am};function om(e){if("string"==typeof e){if(e in im)return im[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Np(t)}return e}function lm(e,t){return Ms((()=>{const n=Sa(.5,el(t)),r=kf(Co(t,n),e.dtype);return Ho(mo(e,r),-1)}))}function um(e,t){return Ms((()=>kf(mo(Ei(e,-1),Ei(t,-1)),"float32")))}function cm(e,t){return sm(e,t)}function hm(e,t){return e.rank===t.rank&&(e=kl(e,[e.rank-1])),(t=Ei(t,-1)).dtype!==e.dtype&&(t=va(t,e.dtype)),va(mo(e,t),"float32")}const dm=nm,pm=rm,fm={binaryAccuracy:lm,categoricalAccuracy:um,precision:function(e,t){return Ms((()=>{const n=function(e,t){return Ms((()=>va(Ro(Wo(mo(e,1),mo(t,1))),"float32")))}(e,t),r=function(e,t){return Ms((()=>va(Ro(Wo(mo(e,0),mo(t,1))),"float32")))}(e,t),s=ka(n,r);return va(Rl(Co(s,0),Ca(n,s),0),"float32")}))},categoricalCrossentropy:dm,sparseCategoricalCrossentropy:pm,mse:Qg,MSE:Qg,mae:em,MAE:em,mape:tm,MAPE:tm,cosine:am};function gm(e){if("string"==typeof e&&e in fm)return fm[e];if("string"!=typeof e&&null!=e)return e;throw new Np(`Unknown metric ${e}`)}function mm(e){if(_p(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(im))if(im[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(fm))if(fm[n]===e){t=n;break}return void 0!==t?t:e.name}}function bm(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!ym(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function ym(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!ym(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!ym(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function xm(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function vm(e,t,n){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}xm([`${e.name} (${e.getClassName()})`,s,r,e.countParams().toString()],t,n)}function wm(e,t,n,r){let s,a;try{a=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){a="multiple"}try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const i=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];i.push(`${n}[${r}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];xm([`${o} (${l})`,a,s,e.countParams().toString(),u],t,r);for(let e=1;e<i.length;++e)xm(["","","","",i[e]],t,r)}function km(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Im(e,t){if(null===e)return null;if("string"==typeof e)return Mp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];km(t,s,r)?n.push(r):n.push(Im(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Mp(n);t[e]=Im(r,e)}}return t}}function Cm(e,t){if(null==e)return null;if("string"==typeof e)return Lp(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];km(t,s,r)?n.push(r):n.push(Cm(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Lp(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Cm(r,n):r}return t}}const Sm="4.22.0";class $m extends vg{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Qp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Vp(this.inputs).length!==this.inputs.length)throw new Np(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Vp(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;_p(0===n,"input layer has >1 nodes"),_p(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof kg))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new $p(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add($m.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(Up);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof $m&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(Up);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new $p(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new $p(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new yg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Np("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;const s=(e=>{const t=Object.keys(e);if(0===t.length)return!1;const n=t[0].split("/");return!isNaN(parseInt(n[n.length-1],10))})(e);s&&this.parseWeights(e);for(const e of this.layers)for(const[t,a]of e.weights.entries()){const e=s?`${a.name.split("/").slice(0,-1).join("/")+"/"}${t}`:a.originalName;if(null!=n[e])throw new Np(`Duplicate weight name: ${e}`);n[e]=a,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Np(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Np(`${e.length} of ${r} weights are not set: ${e}`)}fg(a)}parseWeights(e){for(const t in Object.keys(e)){const n=t.split("/"),r=["vars","layer_checkpoint_dependencies"],s=n.map((e=>e.startsWith("_")?e.slice(1):e)).filter((e=>!r.includes(e))).join("/");s!==t&&(e[s]=e[t],delete e[t])}}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Sm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Cm(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ms((()=>{e=Op(e);const n=new Ig;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return $g(this.outputs,n,t)}))}computeMask(e,t){return Ms((()=>{let n;return e=Op(e),n=null==t?Ap(null,e.length):Op(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=og(e);if(t.length!==this.inputLayers.length)throw new Np(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Up);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=og(t.computeOutputShape(Dp(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];_p(t in n),s.push(n[t])}return Dp(s)}runInternalGraph(e,t){null==t&&(t=Ap(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Up);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Op(t.call(e,u)),l=Op(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Op(t.call(r,u)),l=Op(t.computeMask(r,i));if(t.activityRegularizer)throw new Tp("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){_p(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof $m?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=$m.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new Np("Provide either a layer name or layer index");if("number"==typeof e)return this.findLayer(e);for(const t of this.layers)if(t.name===e)return t;throw new Np(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new Np(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Ms((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=$m.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=$m.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[$m.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=$m.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=$m.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Dp(n),r)}function l(e){const n=e.name,a=Jg(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Np(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Gp(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];_p(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];_p(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new Np("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ms((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Nm(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Tm(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ms((()=>{if(1===e.shape.length)return wa(e);if(2===e.shape.length){if(e.shape[1]>1)return Ei(e,1);if(1===e.shape[1])return Hi(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());zs(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Sl(s,"float32")}return null}function Em(e,t){return Sa(e,t)}function Rm(e,t){let n,r;const s=t;n=s.xs,r=s.ys,d(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=Am("input",e.inputNames,n),i=Am("output",e.outputNames,r),o=a[0].shape[0];d(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),d(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)d(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)d(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function Am(e,t,n){if(n instanceof Qr)return[n];if(Array.isArray(n))return d(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Np(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function _m(e){return"function"==typeof e.iterator}function Fm(e){d(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Dm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Cf(e,t,n-t))):Cf(e,t,n-t)}function Om(e,t){return Ms((()=>null==e?null:Array.isArray(e)?e.map((e=>Om(e,t))):_f(e,"int32"===t.dtype?t:va(t,"int32"))))}function Lm(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Mm(e){const t=[];e instanceof Qr&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(If(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function zm(e,t){if(null==e)return;const n=[];if(t instanceof Qr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Qr)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Pm(e){return Array.isArray(e)}function Bm(e){return!function(e){return e instanceof Qr}(e)&&!Pm(e)}function Wm(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Pm(e)&&e.length>0)t=!0;else if(Bm(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Np(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Bm(e)){a=[];for(const n of t){if(null==e[n])throw new Np(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Pm(e)){if(e.length!==t.length)throw new Np(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Np(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Mm(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Np(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Np(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Um(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Np(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Np(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Np(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Np(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Vm extends $m{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Np("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Input Shape","Output shape","Param #"];let i;if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),xm(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?vm(o[e],n,r):wm(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?cg(e.collectedTrainableWeights):cg(e.trainableWeights),t}(e),u=cg(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Fu.adagrad(.01),Adadelta:()=>Fu.adadelta(1,.95,wf()),Adam:()=>Fu.adam(.001,.9,.999,wf()),Adamax:()=>Fu.adamax(.002,.9,.999,wf(),0),RMSProp:()=>Fu.rmsprop(.001,.9,0,wf()),SGD:()=>Fu.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Np(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof La))throw new Np("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Np(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>om(e)))}else{const n=om(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Np(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(om(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],hf("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};hf("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===sm?-1!==["accuracy","acc"].indexOf(i)?r=lm:-1!==["crossentropy","ce"].indexOf(i)&&(r=cm):this.lossFunctions[e]===rm?-1!==["accuracy","acc"].indexOf(i)?r=hm:-1!==["crossentropy","ce"].indexOf(i)&&(r=pm):-1!==["accuracy","acc"].indexOf(i)?r=um:-1!==["crossentropy","ce"].indexOf(i)&&(r=dm),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=gm(i);a=e,n=""+mm(i)}let t;hf(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Fm(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const e=s[0].concat(s[1]);this.makeTestFunction();const t=this.testFunction;return Dp(this.testLoop(t,e,r,n.verbose,n.steps))}finally{zm(s[0],e),zm(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Tp("Verbose mode is not implemented yet.");d(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=Ms((()=>{if(t.value){const{xs:n,ys:r}=Rm(e,t.value),i=n.concat(r),u=Ms((()=>s(i)));if(zs(i),0===l)for(let e=0;e<u.length;++e)a.push(Ra(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Ms((()=>ka(a[e],Sa(c,t)))),l>0&&zs(n)}zs(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Ca(a[e],o),zs(t)}return Dp(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Np(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Np(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Np("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Ig;if(e instanceof Qr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Np(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Np(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=$g(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ap(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Np(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ms((()=>{const r=this.checkNumSamples(e);if(n)throw new Tp("Verbose predictLoop() is not implemented yet.");const s=Lm(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)Ms((()=>{const n=s[t][0],r=s[t][1],a=Dm(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Ig(i);return $g(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return Dp(a.map((e=>eo(e,0))))}))}predict(e,t={}){const n=Mm(e);Um(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return Fm(e),this.predictLoop(n,e)}finally{zm(n,e)}}predictOnBatch(e){Um(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new $p("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===rm?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t){const n=Vp(e.map((e=>e.shape[0])));n.sort();const r=Vp(t.map((e=>e.shape[0])));if(r.sort(),n.length>1)throw new Np(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Np(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(n.length>0&&r.length>0&&!m(n,r))throw new Np(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Wm(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Wm(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Qg,sm,nm];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===nm&&1===a.shape[a.shape.length-1])throw new Np(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Np(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Np(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=Nm(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Tm(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return Ms((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Tp("Verbose mode is not implemented yet.");if(null!=s)throw new Tp("steps mode in testLoop() is not implemented yet");{const r=Lm(a,n),s=Sl(xf(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=Cf(s,a,o-a),u=Om(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Ra(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ka(i[e],Sa(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Ca(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;Fp(e,r)>1&&(s+=`_${Fp(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Ig(e),o=$g(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=Em(n,s[e]));const a=Ho(n);t.push(a),l=0===e?n:ka(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Ho(t(r[s],o[s]))}Ps(n),a.push(n)}return l=Ho(l),this.calculateLosses().forEach((e=>{l=ka(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Ms((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Ig(a),o=$g(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Ho(r(s[e],o[e]));n=0===e?a:ka(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Ho(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,s,a,i,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;Fm(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);r=f[0],s=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new Tp("validationData including sample weights is not supported yet."):new Np(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(r[0].shape[0]*(1-n.validationSplit)),t=r[0].shape[0];u=Dm(r,e,t),a=r,r=Dm(r,0,e),c=Dm(s,e,t),i=s,s=Dm(s,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const b=r.concat(s).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),x=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,g=[],w=x.slice());const k=Kg(n.callbacks,n.yieldEvery);return await this.fitLoop(y,b,x,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null)}finally{this.isTraining=!1,zm(r,e),zm(s,t),zm(a,e),zm(i,t),zm(u,o),zm(c,l),null!=h&&zs(h)}}async fitLoop(e,t,n,r,s,a,i,o,u,c,h,d,p,f){null==r&&(r=32),null==s&&(s=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;if(null!=o&&null!=u&&(g=!0),null!=f&&(g=!0,null==p))throw new Np("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;null!=m&&(b=xf(0,m)),null==a&&(a=1);const{callbackList:y,history:x}=Yg(i,a,s,d,m,p,r,g,h);y.setModel(this),this.history=x,await y.onTrainBegin(),this.stopTraining_=!1;for(let a=d;a<s;++a){await y.onEpochBegin(a);const s={};if(null!=p)throw new Tp("stepsPerEpoch mode is not implemented yet.");{if("batch"===c)throw new Tp("batch shuffling is not implemneted yet");c&&l(b);const a=Sl(b),i=Lm(m,r);for(let l=0;l<i.length;++l){const c={};if(await y.onBatchBegin(l,c),Ms((()=>{const h=i[l][0],d=i[l][1],p=Cf(a,h,d-h);c.batch=l,c.size=d-h;const f=Om(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],r=m[e];c[t]=r,Ps(r)}if(l===i.length-1&&g){const e=this.testLoop(o,u,r);for(let t=0;t<n.length;++t){const r=n[t],a=e[t];Ps(a),s["val_"+r]=a}}})),await y.onBatchEnd(l,c),Wg(c),this.stopTraining_)break}a.dispose()}if(await y.onEpochEnd(a,s),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(d(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),d(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),d(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),d(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),d(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(_m(n.validationData))d(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Tp("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Kg(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:f}=Yg(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);p.setModel(e),e.history=f,await p.onTrainBegin(),e.stopTraining_=!1;let g=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;g<n.epochs;){const u={};await p.onEpochBegin(g);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=Rm(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=Nm(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Tm(s[e],null,t[e]))}const u=r.concat(s).concat(i),d=o(u);zs(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,Ps(n)}await p.onBatchEnd(h,a),Wg(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=_m(n.validationData)?Op(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Op(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(g,u),g++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return zs(a),zm(n[0],e),zm(n[1],t),Dp(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ls().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ls().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Lp(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Lp(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Lp(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Lp(mm(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Lp(mm(e))));{const e={};for(const t in this.metrics)e[t]=Lp(mm(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Jg(Im(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Mp(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Mp(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Mp(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Mp(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Mp(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,Ks.getSaveHandlers(n));if(0===t.length)throw new Np(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Np(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new Np("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await Ws(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Sm}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await Ws(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=(a=[r.data,t],Ds.join(a))}var a;if(null!=this.userDefinedMetadata){const e=!0;bm(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){bm(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Vm.className="Model",Oa(Vm);class Gm extends Vm{}Gm.className="Functional",Oa(Gm);class Hm extends Vm{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Qp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Np(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Hm||e instanceof Vm;let n;if(t){if(n=e,1!==n.outputs.length)throw new Np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Np("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Np("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Np("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new kg({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Np(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Np("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=wg(this.outputs[0])}this.inboundNodes=[],new yg({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ap(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ug(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Vm({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new $p("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new $p("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new $p("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new $p("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Np("Legacy serialization format not supported yet.");s=t}else d(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Hm))throw new Tp(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Jg(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Np("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Np("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Hm.className="Sequential",Oa(Hm);class jm extends Fa{getConfig(){return{}}}class qm extends jm{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Tp(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return go(e)}(e,t)}}qm.className="elu",Oa(qm);class Km extends jm{apply(e){return hl(e)}}Km.className="selu",Oa(Km);class Xm extends jm{apply(e){return ul(e)}}Xm.className="relu",Oa(Xm);class Ym extends jm{apply(e){return Ms((()=>qo(6,ul(e))))}}Ym.className="relu6",Oa(Ym);class Jm extends jm{apply(e){return e}}Jm.className="linear",Oa(Jm);class Zm extends jm{apply(e){return pl(e)}}Zm.className="sigmoid",Oa(Zm);class Qm extends jm{apply(e){return function(e){return Ms((()=>{const t=ka(.5,Sa(.2,e));return Qi(t,0,1)}))}(e)}}Qm.className="hardSigmoid",Oa(Qm);class eb extends jm{apply(e){return vl(e)}}eb.className="softplus",Oa(eb);class tb extends jm{apply(e){return function(e){return Ms((()=>Ca(e,ka(Va(e),1))))}(e)}}tb.className="softsign",Oa(tb);class nb extends jm{apply(e){return Cl(e)}}nb.className="tanh",Oa(nb);class rb extends jm{apply(e,t=-1){return xl(e,t)}}rb.className="softmax",Oa(rb);class sb extends jm{apply(e,t=-1){return Ao(e,t)}}sb.className="logSoftmax",Oa(sb);class ab extends jm{apply(e){return Ms((()=>Ms((()=>{const t=Math.sqrt(2),n=Sa(.5,ka(1,bo(Ca(e,t))));return Sa(e,n)}))))}}ab.className="gelu",Oa(ab);class ib extends jm{apply(e){return Ms((()=>Sa(.5,Sa(e,ka(1,Cl(Sa($a(Ca(2,Math.PI)),ka(e,Sa(.044715,Ba(e,3))))))))))}}ib.className="gelu_new",Oa(ib);class ob extends jm{apply(e){return Ms((()=>Sa(e,Cl(vl(e)))))}}ob.className="mish",Oa(ob);class lb extends jm{apply(e,t=1){return Ms((()=>Sa(pl(Sa(e,t)),e)))}}function ub(e){return e.getClassName()}function cb(e,t={}){return Wp(e,Da.getMap().classNameMap,t,"activation")}function hb(e){if(null==e){return cb({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},cb(t)}return e instanceof jm?e:cb(e)}lb.className="swish",Oa(lb);class db extends Fa{}class pb extends db{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ms((()=>{let t=Zo([1]);return this.hasL1&&(t=ka(t,Ro(Sa(this.l1,Va(e))))),this.hasL2&&(t=ka(t,Ro(Sa(this.l2,Ff(e))))),Hi(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}pb.className="L1L2",Oa(pb);const fb={l1l2:"L1L2"};function gb(e){return Pp(e)}function mb(e,t={}){return Wp(e,Da.getMap().classNameMap,t,"regularizer")}function bb(e){return null==e?null:"string"==typeof e?mb({className:e in fb?fb[e]:e,config:{}}):e instanceof db?e:mb(e)}class yb extends vg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=lg(e);let n=ul(e);return null!=this.maxValue&&(n=Qi(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}yb.className="ReLU",Oa(yb);class xb extends vg{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=lg(e);return $o(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xb.className="LeakyReLU",Oa(xb);class vb extends vg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ag(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=bb(e.alphaRegularizer),this.alphaConstraint=Pg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Np(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ug(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new gg({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=lg(e),nl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:sg(this.alphaInitializer),alphaRegularizer:gb(this.alphaRegularizer),alphaConstraint:Mg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}vb.className="PReLU",Oa(vb);class wb extends vg{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Tp(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=lg(e);return go(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}wb.className="ELU",Oa(wb);class kb extends vg{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=lg(e);return Sa(n,va(Co(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}kb.className="ThresholdedReLU",Oa(kb);class Ib extends vg{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new rb).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){return Ms((()=>{let n=lg(e);const r=t.mask;if(null!=r){const e=Sa(Wa(Qo(n.shape),va(r,n.dtype)),Ra(-1e9));n=ka(n,e)}return this.axis instanceof Array?this.axis.length>1?yo(Wa(n,Bo(n,this.axis,!0))):this.softmax(n,this.axis[0]):this.softmax(n,this.axis)}))}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Cb(e,t,n){if("number"==typeof e)return Ap(e,t);if(e.length!==t)throw new Np(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Np(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function Sb(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function $b(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+yf([n-t,0]);else{if("same"!==r)throw new Np(`Unsupport padding mode: ${r}.`);e*=t}return e}function Nb(e,t){return Ms((()=>(of(t),"channelsFirst"===t?Fl(e,[0,2,3,1]):e)))}function Tb(e,t){return Ms((()=>(of(t),"channelsFirst"===t?Fl(e,[0,2,3,4,1]):e)))}function Eb(e,t,n,r=[1,1],s="valid",a,i,o=null){return Ms((()=>{if(null==a&&(a="channelsLast"),of(a),3!==e.rank&&4!==e.rank)throw new Np(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Np(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=Nb(e,a);if("causal"===s)throw new Tp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=jl({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Fl(l,[0,3,1,2])),l}))}Ib.className="Softmax",Oa(Ib);class Rb extends vg{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Rb.verifyArgs(t),this.rank=e,qp(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Tp(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Cb(t.kernelSize,e,"kernelSize"),this.strides=Cb(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,lf(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,of(this.dataFormat),this.activation=hb(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ag(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Pg(t.biasConstraint),this.biasRegularizer=bb(t.biasRegularizer),this.activityRegularizer=bb(t.activityRegularizer),this.dilationRate=Cb(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Np(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Np(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Np(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(_p("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!jp(e.kernelSize,"number",1,3))throw new Np(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ub(this.activation),useBias:this.useBias,biasInitializer:sg(this.biasInitializer),biasRegularizer:gb(this.biasRegularizer),activityRegularizer:gb(this.activityRegularizer),biasConstraint:Mg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Ab extends Rb{constructor(e,t){super(e,t),this.kernel=null,Ab.verifyArgs(t),this.filters=t.filters,qp(this.filters,"filters"),this.kernelInitializer=ag(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Pg(t.kernelConstraint),this.kernelRegularizer=bb(t.kernelRegularizer)}build(e){e=ug(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Np(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ms((()=>{let t;e=lg(e);const n=null==this.bias?null:this.bias.read(),r=Xp(this.activation.getClassName());if(null!=r&&2===this.rank)t=Eb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Ms((()=>{if(null==a&&(a="channelsLast"),of(a),3!==e.shape.length)throw new Np(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Np(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Np(`The bias for a conv1dWithBias operation should be 1, but is ${n.shape.length} instead`);if("channelsFirst"===a&&(e=Fl(e,[0,2,1])),"causal"===s)throw new Tp("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=io(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=Of(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Eb(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Tp("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Ms((()=>{if(null==a&&(a="channelsLast"),of(a),4!==e.rank&&5!==e.rank)throw new Np(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Np(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Tb(e,a);if("causal"===s)throw new Tp("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=uo(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=Of(o,n)),"channelsFirst"===a&&(o=Fl(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ug(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Sb(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:sg(this.kernelInitializer),kernelRegularizer:gb(this.kernelRegularizer),kernelConstraint:Mg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Np(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class _b extends Ab{constructor(e){super(2,e),_b.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!jp(e.kernelSize,"number",1,2))throw new Np(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}_b.className="Conv2D",Oa(_b);class Fb extends Ab{constructor(e){super(3,e),Fb.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Np(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Fb.className="Conv3D",Oa(Fb);class Db extends _b{constructor(e){if(super(e),this.inputSpec=[new gg({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Np(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ug(e)).length)throw new Np("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Np("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gg({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ms((()=>{let t=lg(e);if(4!==t.shape.length)throw new Np(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,$b(i,c,l,this.padding),$b(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Fl(t,[0,2,3,1]));let p=lo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Fl(p,[0,3,1,2])),null!=this.bias&&(p=Of(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=ug(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=$b(t[r],o,a,this.padding),t[s]=$b(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Db.className="Conv2DTranspose",Oa(Db);class Ob extends Fb{constructor(e){if(super(e),this.inputSpec=[new gg({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Np(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ug(e)).length)throw new Np("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Np("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new gg({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ms((()=>{let t=lg(e);if(5!==t.shape.length)throw new Np(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,$b(o,p,c,this.padding),$b(l,f,h,this.padding),$b(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Fl(t,[0,2,3,4,1]));let b=ho(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=Fl(b,[0,4,1,2,3])),null!==this.bias&&(b=Of(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=ug(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=$b(t[r],u,i,this.padding),t[s]=$b(t[s],c,o,this.padding),t[a]=$b(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ob.className="Conv3DTranspose",Oa(Ob);class Lb extends Ab{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Np("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Np("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Np(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ag(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=bb(t.depthwiseRegularizer),this.depthwiseConstraint=Pg(t.depthwiseConstraint),this.pointwiseInitializer=ag(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=bb(t.pointwiseRegularizer),this.pointwiseConstraint=Pg(t.pointwiseConstraint)}build(e){if((e=ug(e)).length<this.rank+2)throw new Np(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Np(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new gg({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ms((()=>{let t;if(e=lg(e),1===this.rank)throw new Tp("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Fl(e,[0,2,3,1])),t=dl(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Of(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Fl(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=sg(this.depthwiseInitializer),e.pointwiseInitializer=sg(this.pointwiseInitializer),e.depthwiseRegularizer=gb(this.depthwiseRegularizer),e.pointwiseRegularizer=gb(this.pointwiseRegularizer),e.depthwiseConstraint=Mg(this.depthwiseConstraint),e.pointwiseConstraint=Mg(this.pointwiseConstraint),e}}Lb.className="SeparableConv";class Mb extends Lb{constructor(e){super(2,e)}}Mb.className="SeparableConv2D",Oa(Mb);class zb extends Ab{constructor(e){super(1,e),zb.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!jp(e.kernelSize,"number",1,1))throw new Np(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}zb.className="Conv1D",Oa(zb);class Pb extends vg{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ms((()=>{if(e=lg(e),"channelsLast"===this.dataFormat){const t=$f(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $f(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=$f(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $f(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Pb.className="Cropping2D",Oa(Pb);class Bb extends vg{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,of(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Hp(tf,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ms((()=>{let t=lg(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Fl(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Au.resizeNearestNeighbor(t,[e,r]):Au.resizeBilinear(t,[e,r]);return Fl(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Au.resizeNearestNeighbor(t,[e,r]):Au.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}Bb.className="UpSampling2D",Oa(Bb);class Wb extends Rb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ag(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Pg(e.depthwiseConstraint),this.depthwiseRegularizer=bb(e.depthwiseRegularizer)}build(e){if((e=ug(e)).length<4)throw new Np(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Np(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ms((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Ms((()=>{null==s&&(s="channelsLast"),of(s);let i=Nb(e,s);if(4!==e.rank)throw new Np(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Np(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=fo(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=Fl(i,[0,3,1,2])),i}))}(e=lg(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Of(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ug(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=Sb(t,this.kernelSize[0],this.padding,this.strides[0]),a=Sb(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=sg(this.depthwiseInitializer),e.depthwiseRegularizer=gb(this.depthwiseRegularizer),e.depthwiseConstraint=Mg(this.depthwiseRegularizer),e}}function Ub(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Np("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Vb(e,t,n,r=!1,s,a,i=!1,o=!1){return Ms((()=>{const l=t.shape.length;if(l<3)throw new Np(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(xf(2,l));if(t=Fl(t,u),null!=a)throw new Tp("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=va(va(s,"bool"),"float32")).rank===l-1&&(s=xo(s,-1)),s=Fl(s,u)),r&&(t=cl(t,0),null!=s&&(s=cl(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=El(t);let g,m;null!=s&&(g=El(s));for(let t=0;t<p;++t){const n=f[t],r=Ms((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=Ms((()=>{const e=g[t],n=Wa(el(e),e);return{output:ka(Sa(r[0],e),Sa(d[0],n)),newStates:d.map(((t,s)=>ka(Sa(r[1][s],e),Sa(t,n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=Il(c,1)),[h,m,d]}))}Wb.className="DepthwiseConv2D",Oa(Wb);class Gb extends vg{constructor(e){let t;if(super(e),null==e.cell)throw new Np("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Zb({cells:e.cell}):e.cell,null==t.stateSize)throw new Np("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new gg({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?xf(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ig(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Ms((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Tp("Constants support is not implemented in RNN yet.");ig(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new gg({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!m(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Np(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new gg({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ms((()=>{if(!this.stateful)throw new Sp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Zo([n,e]))):this.states_=[Zo([n,this.cell.stateSize])];else if(null==e)zs(this.states_),null!=this.keptStates&&(zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Zo([n,e]))):this.states_[0]=Zo([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):zs(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!m(r.shape,a))throw new Np(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Ps(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Ub(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new gg({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof mg){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ms((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=lg(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Np(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Vb(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Ms((()=>{let t=Zo(e.shape);return t=Ro(t,[1,2]),t=If(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ef(t,[1,e]):t)):this.cell.stateSize>1?[Ef(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Gb.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const r=Jg(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Gb.className="RNN",Oa(Gb);class Hb extends vg{}class jb extends Hb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qp(this.units,"units"),this.activation=hb(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bb(e.kernelRegularizer),this.recurrentRegularizer=bb(e.recurrentRegularizer),this.biasRegularizer=bb(e.biasRegularizer),this.kernelConstraint=Pg(e.kernelConstraint),this.recurrentConstraint=Pg(e.recurrentConstraint),this.biasConstraint=Pg(e.biasConstraint),this.dropout=bf([1,yf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bf([1,yf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ug(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ms((()=>{if(2!==e.length)throw new Np(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qb({ones:()=>el(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qb({ones:()=>el(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=Af(null!=a?Sa(e,a):e,this.kernel.read()),null!=this.bias&&(s=Of(s,this.bias.read())),null!=i&&(n=Sa(n,i));let o=ka(s,Af(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),useBias:this.useBias,kernelInitializer:sg(this.kernelInitializer),recurrentInitializer:sg(this.recurrentInitializer),biasInitializer:sg(this.biasInitializer),kernelRegularizer:gb(this.kernelRegularizer),recurrentRegularizer:gb(this.recurrentRegularizer),biasRegularizer:gb(this.biasRegularizer),activityRegularizer:gb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}jb.className="SimpleRNNCell",Oa(jb);class qb extends Gb{constructor(e){e.cell=new jb(e),super(e)}call(e,t){return Ms((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}qb.className="SimpleRNN",Oa(qb);class Kb extends Hb{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Np("GRUCell does not support reset_after parameter set to true.");this.units=e.units,qp(this.units,"units"),this.activation=hb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=bb(e.kernelRegularizer),this.recurrentRegularizer=bb(e.recurrentRegularizer),this.biasRegularizer=bb(e.biasRegularizer),this.kernelConstraint=Pg(e.kernelConstraint),this.recurrentConstraint=Pg(e.recurrentConstraint),this.biasConstraint=Pg(e.biasConstraint),this.dropout=bf([1,yf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bf([1,yf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ug(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ms((()=>{if(2!==e.length)throw new Np(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qb({ones:()=>el(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qb({ones:()=>el(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=Sa(e,s[0]));let u=Af(e,this.kernel.read());this.useBias&&(u=Of(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Sa(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=wl(c,[2*this.units,this.units],c.rank-1),p=Af(r,h),[f,g,m]=wl(u,3,u.rank-1),[b,y]=wl(p,2,p.rank-1);i=this.recurrentActivation.apply(ka(f,b)),o=this.recurrentActivation.apply(ka(g,y));const x=Af(Sa(o,r),d);l=this.activation.apply(ka(m,x));const v=ka(Sa(i,r),Sa(ka(1,Xo(i)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),recurrentActivation:ub(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sg(this.kernelInitializer),recurrentInitializer:sg(this.recurrentInitializer),biasInitializer:sg(this.biasInitializer),kernelRegularizer:gb(this.kernelRegularizer),recurrentRegularizer:gb(this.recurrentRegularizer),biasRegularizer:gb(this.biasRegularizer),activityRegularizer:gb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Kb.className="GRUCell",Oa(Kb);class Xb extends Gb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Kb(e),super(e)}call(e,t){return Ms((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xb.className="GRU",Oa(Xb);class Yb extends Hb{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qp(this.units,"units"),this.activation=hb(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=hb(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ag(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=bb(e.kernelRegularizer),this.recurrentRegularizer=bb(e.recurrentRegularizer),this.biasRegularizer=bb(e.biasRegularizer),this.kernelConstraint=Pg(e.kernelConstraint),this.recurrentConstraint=Pg(e.recurrentConstraint),this.biasConstraint=Pg(e.biasConstraint),this.dropout=bf([1,yf([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=bf([1,yf([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ug(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Bf{apply(t,r){const s=e.apply([n]),a=(new Uf).apply([n]),i=e.apply([2*n]);return Tf(Tf(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ms((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Np(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qb({ones:()=>el(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qb({ones:()=>el(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Sa(e,a[0]));let h=Af(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=Sa(r,i[0])),h=ka(h,Af(r,this.recurrentKernel.read())),this.useBias&&(h=Of(h,this.bias.read()));const[d,p,f,g]=wl(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ka(Sa(l,s),Sa(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Sa(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ub(this.activation),recurrentActivation:ub(this.recurrentActivation),useBias:this.useBias,kernelInitializer:sg(this.kernelInitializer),recurrentInitializer:sg(this.recurrentInitializer),biasInitializer:sg(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:gb(this.kernelRegularizer),recurrentRegularizer:gb(this.recurrentRegularizer),biasRegularizer:gb(this.biasRegularizer),activityRegularizer:gb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),recurrentConstraint:Mg(this.recurrentConstraint),biasConstraint:Mg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Yb.className="LSTMCell",Oa(Yb);class Jb extends Gb{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Yb(e),super(e)}call(e,t){return Ms((()=>{null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Jb.className="LSTM",Oa(Jb);class Zb extends Hb{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ms((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;ig(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{hf(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Jg(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return pg(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}fg(t)}}function Qb(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):Lf(t(),n),o=()=>Mf(i,t,r);return!s||s<=1?Ps(o().clone()):Array(s).fill(void 0).map(o).map((e=>Ps(e.clone())))}Zb.className="StackedRNNCells",Oa(Zb);class ey extends Gb{constructor(e){if(e.unroll)throw new Tp("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Tp("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new gg({ndim:5})]}call(e,t){return Ms((()=>{if(null!=this.cell.dropoutMask&&(zs(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(zs(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Np("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ms((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Zo([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Ms((()=>{if(!this.stateful)throw new Sp("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Np("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Zo(s))):this.states_=[Zo(s)];else if(null==e)zs(this.states_),null!=this.keptStates&&(zs(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Zo(s))):this.states_[0]=Zo(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Np(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):zs(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!m(n.shape,r))throw new Np(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ps(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Sb(l,r[0],s,a[0],i[0]),h=Sb(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}ey.className="ConvRNN2D";class ty extends Yb{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,qp(this.filters,"filters"),this.kernelSize=Cb(n,2,"kernelSize"),this.kernelSize.forEach((e=>qp(e,"kernelSize"))),this.strides=Cb(r||1,2,"strides"),this.strides.forEach((e=>qp(e,"strides"))),this.padding=s||"valid",lf(this.padding),this.dataFormat=a||"channelsLast",of(this.dataFormat),this.dilationRate=Cb(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>qp(e,"dilationRate")))}build(e){var t;e=ug(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Np(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Bf{apply(e,t){return Nf([n.apply([r]),Qo([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ms((()=>{if(3!==e.length)throw new Np(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Qb({ones:()=>el(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?Sa(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Qb({ones:()=>el(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,x,v]=wl(this.kernel.read(),4,3),[w,k,I,C]=this.useBias?wl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,w,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,v,C,this.padding);const[S,$,N,T]=wl(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,S),f=this.recurrentConv(f,$),g=this.recurrentConv(g,N),m=this.recurrentConv(m,T);const E=this.recurrentActivation.apply(ka(l,p)),R=this.recurrentActivation.apply(ka(u,f)),A=ka(Sa(R,a),Sa(E,this.activation.apply(ka(c,g)))),_=Sa(this.recurrentActivation.apply(ka(h,m)),this.activation.apply(A));return[_,_,A]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),r)}inputConv(e,t,n,r){const s=ao(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Of(s,n,this.dataFormat):s}recurrentConv(e,t){return ao(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ty.className="ConvLSTM2DCell",Oa(ty);class ny extends ey{constructor(e){const t=new ty(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}ny.className="ConvLSTM2D",Oa(ny);class ry extends vg{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Mf((()=>Lf(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}ry.className="Dropout",Oa(ry);class sy extends ry{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}sy.className="SpatialDropout1D",Oa(sy);class ay extends vg{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,qp(this.units,"units"),this.activation=hb(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ag(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ag(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Pg(e.kernelConstraint),this.biasConstraint=Pg(e.biasConstraint),this.kernelRegularizer=bb(e.kernelRegularizer),this.biasRegularizer=bb(e.biasRegularizer),this.activityRegularizer=bb(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ug(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ug(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e),r=Xp(this.activation.getClassName());let s;return null!=r?s=Af(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=Af(n,this.kernel.read()),null!=this.bias&&(s=Of(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:ub(this.activation),useBias:this.useBias,kernelInitializer:sg(this.kernelInitializer),biasInitializer:sg(this.biasInitializer),kernelRegularizer:gb(this.kernelRegularizer),biasRegularizer:gb(this.biasRegularizer),activityRegularizer:gb(this.activityRegularizer),kernelConstraint:Mg(this.kernelConstraint),biasConstraint:Mg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}ay.className="Dense",Oa(ay);class iy extends vg{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ug(e);for(const t of e.slice(1))if(null==t)throw new Np(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],mf(e,1)]}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);let n=lg(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Fl(n,e)}return function(e){if(e.rank<=1)throw new Np(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],mf(e.shape,1)];return Hi(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}iy.className="Flatten",Oa(iy);class oy extends vg{constructor(e){super(e),this.supportsMasking=!0,this.activation=hb(e.activation)}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ub(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}oy.className="Activation",Oa(oy);class ly extends vg{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ms((()=>{return e=lg(e),t=e,n=this.n,Ms((()=>{if(2!==t.shape.length)throw new Np(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ef(If(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ly.className="RepeatVector",Oa(ly);class uy extends vg{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Np("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=mf(e);if(null!==a){if(0===s||i%s!=0)throw new Np(n);r[a]=i/s}else if(i!==s)throw new Np(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return Hi(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}uy.className="Reshape",Oa(uy);class cy extends vg{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=xf(1,e.dims.length+1);if(!m(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new gg({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ug(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Fl(lg(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}cy.className="Permute",Oa(cy);class hy extends vg{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=lg(e);return Ti(Yo(n,this.maskValue),-1)}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e),r=Ti(Yo(n,this.maskValue),-1,!0);return Sa(n,va(r,n.dtype))}))}}hy.className="Masking",Oa(hy);class dy extends vg{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Op(e.inputLength))}this.inputDim=e.inputDim,qp(this.inputDim,"inputDim"),this.outputDim=e.outputDim,qp(this.outputDim,"outputDim"),this.embeddingsInitializer=ag(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=bb(e.embeddingsRegularizer),this.activityRegularizer=bb(e.activityRegularizer),this.embeddingsConstraint=Pg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ms((()=>this.maskZero?(e=lg(e),Yo(e,Ta(e))):null))}computeOutputShape(e){if(e=ug(e),null==this.inputLength)return[...e,this.outputDim];const t=Op(this.inputLength);if(t.length!==e.length-1)throw new Np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Np(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);let n=lg(e);"int32"!==n.dtype&&(n=kf(n,"int32"));const r=_f(this.embeddings.read(),Hi(n,[n.size]));return Hi(r,ug(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:sg(this.embeddingsInitializer),embeddingsRegularizer:gb(this.embeddingsRegularizer),activityRegularizer:gb(this.activityRegularizer),embeddingsConstraint:Mg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}dy.className="Embedding",Oa(dy);class py extends vg{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Tp}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Np("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ug(e)]),e.length<2)throw new Np(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Vp(t),t.length>1)throw new Np(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Vp(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ms((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=yf(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=If(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=Hi(r,[s].concat(mf(e.slice(1))));i=Fl(i,[1,0]),i=Hi(i,a),t.push(i),n=!0}else if(e>1){const s=xf(1,e).concat([0]);t.push(Fl(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=Hi(Fl(Hi(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(xf(0,s-1));r=Fl(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Vp(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ms((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Np("`mask` should be an Array");if(!Array.isArray(e))throw new Np("`inputs` should be an Array");if(t.length!==e.length)throw new Np(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:xo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Wo(n,t[e]);return n}))}}class fy extends py{constructor(e){super(e)}mergeFunction(e){return Ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ka(t,e[n]);return t}))}}fy.className="Add",Oa(fy);class gy extends py{constructor(e){super(e)}mergeFunction(e){return Ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Sa(t,e[n]);return t}))}}gy.className="Multiply",Oa(gy);class my extends py{constructor(e){super(e)}mergeFunction(e){return Ms((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ka(t,e[n]);return Sa(1/e.length,t)}))}}my.className="Average",Oa(my);class by extends py{constructor(e){super(e)}mergeFunction(e){return Ms((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qa(t,e[n]);return t}))}}by.className="Maximum",Oa(by);class yy extends py{constructor(e){super(e)}mergeFunction(e){return Ms((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qo(t,e[n]);return t}))}}yy.className="Minimum",Oa(yy);class xy extends py{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Np("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(m(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Np("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ms((()=>Nf(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Np("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Np("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Np("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Np(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ms((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(va(el(e[n]),"bool")):t[n].rank<e[n].rank?r.push(xo(t[n],-1)):r.push(t[n]);const s=eo(r,this.axis);return Ni(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function vy(e,t){for(;e<0;)e+=t;return e}xy.className="Concatenate",Oa(xy);class wy extends py{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Tp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Np(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Np(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>vy(t,e[n].shape.length))):[vy(this.axes,n.shape.length),vy(this.axes,r.shape.length)],this.normalize&&(n=Zg(n,t[0]),r=Zg(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Tp("batchDot is not implemented for tensors of 4D or higher rank yet");if(d(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),d(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Tp("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Ms((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=Hi(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=Hi(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Ro(Sa(e,t),a[0]):Ro(Sa(Fl(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=Uo(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=kl(i,t)}return 1===i.shape.length&&(i=xo(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[vy(this.axes,e.length),vy(this.axes,t.length)],n}computeOutputShape(e){d(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Tp("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}wy.className="Dot",Oa(wy);class ky extends vg{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e);return Mf((()=>ka(Rf(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}ky.className="GaussianNoise",Oa(ky);class Iy extends vg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ms((()=>{this.invokeCallHook(e,t);const n=lg(e);return this.rate>0&&this.rate<1?Mf((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Sa(n,Rf(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}Iy.className="GaussianDropout",Oa(Iy);class Cy extends vg{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||lg(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ms((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Mf((()=>{const t=lg(e),r=-1.7580993408473766;let s=So(ol(n),this.rate);s=kf(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=ka(Sa(t,s),Sa(ka(s,-1),r));return ka(Sa(o,a),i)}),(()=>lg(e)),t.training||!1)}return e}))}}function Sy(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Xi(e,t,n,r,s,a);else if(3===e.rank)i=Yi(e,t,n,r,s,a);else{if(4!==e.rank)throw new Tp(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=Ji(e,t,n,r,s,a)}return i}Cy.className="AlphaDropout",Oa(Cy);class $y extends vg{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ag(e.betaInitializer||"zeros"),this.gammaInitializer=ag(e.gammaInitializer||"ones"),this.movingMeanInitializer=ag(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ag(e.movingVarianceInitializer||"ones"),this.betaConstraint=Pg(e.betaConstraint),this.gammaConstraint=Pg(e.gammaConstraint),this.betaRegularizer=bb(e.betaRegularizer),this.gammaRegularizer=bb(e.gammaRegularizer)}build(e){e=ug(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Np(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new gg({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ms((()=>{const n=null!=t.training&&t.training,r=lg(e),s=r.shape,a=s.length,i=xf(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=Ap(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!m(u,xf(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=Hi(this.movingMean.read(),l),t=Hi(this.movingVariance.read(),l),n=this.center?Hi(this.beta.read(),l):null,s=this.scale?Hi(this.gamma.read(),l):null;return Sy(r,e,t,n,s,this.epsilon)}return Sy(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return m(r.slice().sort(),xf(0,e.rank-1))?function(e,t,n,r,s=.001){return Ms((()=>{const a=Ko(e,r),i=a.mean,o=a.variance;return[Sy(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Ms((()=>{const a=Ko(e,r),i=a.mean,o=a.variance,l=[];for(const t of xf(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Hi(i,l),c=Hi(o,l),h=null==t?null:Hi(t,l),d=null==n?null:Hi(n,l);return[Sy(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Ms((()=>{const r=1-n,s=e.read(),a=Sa(Wa(s,t),r);e.write(Wa(s,a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sg(this.betaInitializer),gammaInitializer:sg(this.gammaInitializer),movingMeanInitializer:sg(this.movingMeanInitializer),movingVarianceInitializer:sg(this.movingVarianceInitializer),betaRegularizer:gb(this.betaRegularizer),gammaRegularizer:gb(this.gammaRegularizer),betaConstraint:Mg(this.betaConstraint),gammaConstraint:Mg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}$y.className="BatchNormalization",Oa($y);class Ny extends vg{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ag(e.betaInitializer||"zeros"),this.gammaInitializer=ag(e.gammaInitializer||"ones"),this.betaRegularizer=bb(e.betaRegularizer),this.gammaRegularizer=bb(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ug(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Vp(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=lg(e),r=n.shape,s=r.length;return Ms((()=>{let{mean:e,variance:t}=Ko(n,this.axis,!0);const a=Ap(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?Hi(e,a):e;let o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null;const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=vo(e,u),t=vo(t,u),null!=o&&(o=vo(o,c)),null!=l&&(l=vo(l,c)),Sy(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:sg(this.betaInitializer),gammaInitializer:sg(this.gammaInitializer),betaRegularizer:gb(this.betaRegularizer),gammaRegularizer:gb(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ny.className="LayerNormalization",Oa(Ny);class Ty extends vg{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Np(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Np(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Np(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new gg({ndim:4})]}computeOutputShape(e){let t,n;return e=ug(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ms((()=>{return t=lg(e),n=this.padding,r=this.dataFormat,Ms((()=>{if(4!==t.rank)throw new Np(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Np("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Np(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],tl(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Ey(e,t,n,r,s,a){return Ms((()=>{let i;of(s),uf(a),lf(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Nb(e,s);const o="same"===r?"same":"valid";return i="max"===a?Vo(e,t,n,o):ji(e,t,n,o),"channelsFirst"===s&&(i=Fl(i,[0,3,1,2])),i}))}function Ry(e,t,n,r,s,a){return Ms((()=>{let i;of(s),uf(a),lf(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=Tb(e,s);const o="same"===r?"same":"valid";return i="max"===a?Go(e,t,n,o):qi(e,t,n,o),"channelsFirst"===s&&(i=Fl(i,[0,4,1,2,3])),i}))}Ty.className="ZeroPadding2D",Oa(Ty);class Ay extends vg{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Np(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(qp(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Np(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}qp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,lf(this.padding),this.inputSpec=[new gg({ndim:3})]}computeOutputShape(e){const t=Sb((e=ug(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ms((()=>{this.invokeCallHook(e,t),e=If(lg(e),2);const n=this.poolingFunction(lg(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return kl(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class _y extends Ay{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ey(e,t,n,r,s,"max")}}_y.className="MaxPooling1D",Oa(_y);class Fy extends Ay{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ey(e,t,n,r,s,"avg")}}Fy.className="AveragePooling1D",Oa(Fy);class Dy extends vg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Np(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];qp(this.poolSize,"poolSize"),qp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,of(this.dataFormat),lf(this.padding),this.inputSpec=[new gg({ndim:4})]}computeOutputShape(e){e=ug(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Sb(t,this.poolSize[0],this.padding,this.strides[0]),n=Sb(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ms((()=>(this.invokeCallHook(e,t),this.poolingFunction(lg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Oy extends Dy{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ey(e,t,n,r,s,"max")}}Oy.className="MaxPooling2D",Oa(Oy);class Ly extends Dy{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ey(e,t,n,r,s,"avg")}}Ly.className="AveragePooling2D",Oa(Ly);class My extends vg{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Np(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];qp(this.poolSize,"poolSize"),qp(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,of(this.dataFormat),lf(this.padding),this.inputSpec=[new gg({ndim:5})]}computeOutputShape(e){e=ug(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Sb(t,this.poolSize[0],this.padding,this.strides[0]),n=Sb(n,this.poolSize[1],this.padding,this.strides[1]),r=Sb(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Ms((()=>(this.invokeCallHook(e,t),this.poolingFunction(lg(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zy extends My{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ry(e,t,n,r,s,"max")}}zy.className="MaxPooling3D",Oa(zy);class Py extends My{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return of(s),lf(r),Ry(e,t,n,r,s,"avg")}}Py.className="AveragePooling3D",Oa(Py);class By extends vg{constructor(e){super(e),this.inputSpec=[new gg({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Tp}}class Wy extends By{constructor(e){super(e||{})}call(e,t){return Ms((()=>{const t=lg(e);return Ho(t,1)}))}}Wy.className="GlobalAveragePooling1D",Oa(Wy);class Uy extends By{constructor(e){super(e||{})}call(e,t){return Ms((()=>{const t=lg(e);return Eo(t,1)}))}}Uy.className="GlobalMaxPooling1D",Oa(Uy);class Vy extends vg{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,of(this.dataFormat),this.inputSpec=[new gg({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Tp}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Gy extends Vy{call(e,t){return Ms((()=>{const t=lg(e);return"channelsLast"===this.dataFormat?Ho(t,[1,2]):Ho(t,[2,3])}))}}Gy.className="GlobalAveragePooling2D",Oa(Gy);class Hy extends Vy{call(e,t){return Ms((()=>{const t=lg(e);return"channelsLast"===this.dataFormat?Eo(t,[1,2]):Eo(t,[2,3])}))}}Hy.className="GlobalMaxPooling2D",Oa(Hy);class jy extends vg{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Jg(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class qy extends jy{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ug(e)).length<3)throw new Np(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ug(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Ms((()=>Vb(((e,n)=>[lg(this.layer.call(e,t)),[]]),e=lg(e),[],!1,null,null,!1,!0)[1]))}}qy.className="TimeDistributed",Oa(qy);class Ky extends jy{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Jg(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Jg(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Hp(sf,"BidirectionalMergeMode",s),e.weights)throw new Tp("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Dp(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Ub(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Np("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new gg({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Tp("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof mg;for(const e of a)if(e instanceof mg!==o)throw new Np("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Ms((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=cl(s,1)),"concat"===this.mergeMode?i=Nf([r,s]):"sum"===this.mergeMode?i=ka(r,s):"ave"===this.mergeMode?i=Sa(.5,ka(r,s)):"mul"===this.mergeMode?i=Sa(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){hf(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),hf(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Jg(t.layer);if(delete t.layer,null!=t.numConstants)throw new Tp("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Ky.className="Bidirectional",Oa(Ky);class Xy extends vg{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ms((()=>("float32"!==(e=lg(e)).dtype&&(e=kf(e,"float32")),ka(Sa(e,this.scale),this.offset))))}}Xy.className="Rescaling",Oa(Xy);const{resizeBilinear:Yy,cropAndResize:Jy}=Au;class Zy extends vg{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,s,a,i,o){return Ms((()=>{let l,u=!1;const c=[t/a,n/i,(r+t)/a,(s+n)/i],h=[];3===e.rank?(u=!0,l=Il([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(c);const d=Fs(h,[h.length,4]),p=ll(0,h.length,1,"int32"),f=Jy(l,d,p,[r,s],"nearest");return kf(u?lg(El(f)):f,o)}))}upsize(e,t,n,r){return Ms((()=>kf(Yy(e,[t,n]),r)))}call(e,t){return Ms((()=>{const t=lg(e),n=t.dtype,r=t.shape,s=r[r.length-3],a=r[r.length-2];let i=0;s!==this.height&&(i=Math.floor((s-this.height)/2));let o=0;return a!==this.width&&(o=Math.floor((a-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,s,a,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ug(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}Zy.className="CenterCrop",Oa(Zy);class Qy extends vg{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=ug(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ms((()=>{let n;if("int32"!==(e=lg(e)).dtype&&(e=kf(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new Np(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=lg(t.countWeights)}const r=Eo(e),s=jo(e),a=Co(this.numTokens,r).bufferSync().get(0),i=So(s,0).bufferSync().get(0);if(!a||!i)throw new Np(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return function(e,t,n,r){let s=lg(e);if("int32"!==s.dtype&&(s=kf(s,"int32")),"int"===t)return s;const a=s.shape;if(0===s.rank&&(s=xo(s,-1)),"oneHot"===t&&1!==s.shape[s.shape.length-1]&&(s=xo(s,-1)),s.rank>2)throw new Np(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${a} which would result in output rank ${s.rank}.`);const i=["multiHot","oneHot"].includes(t);let o;if(o=po(s,void 0!==r&&"count"===t?r:[],n,i),"tfIdf"!==t)return o;if(r)return Sa(o,r);throw new Np("When outputMode is 'tfIdf', weights must be provided.")}(e,this.outputMode,this.numTokens,n)}))}}Qy.className="CategoryEncoding",Oa(Qy);const ex=new Set(["bilinear","nearest"]);class tx extends vg{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!ex.has(e.interpolation))throw new Np(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){const t=(e=ug(e))[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ms((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Au.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Au.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...ex]} are supported`)}))}}tx.className="Resizing",Oa(tx);class nx{constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}nx.className="RandomSeed";class rx extends vg{constructor(e){super(e),this.randomGenerator=new nx(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}rx.className="BaseRandomLayer";const sx=new Set(["bilinear","nearest"]);class ax extends rx{constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new Np(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new Np(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new Np(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!sx.has(n))throw new Np(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){const t=(e=ug(e))[2];return[this.imgHeight,-1,t]}call(e,t){return Ms((()=>{const t=lg(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=ol([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*n;r=Math.round(r);const s=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return Au.resizeBilinear(e,s);case"nearest":return Au.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...sx]} are supported`)}}))}}var ix,ox,lx,ux;function cx(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(fx(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=cx(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function hx(e,t=px){return dx(e,t)}function dx(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(fx(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=dx(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function px(e){return null===e?null:fx(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function fx(e){let t=!1;if(j().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Qr)&&!(e instanceof Promise)&&!t)}function gx(e){return cx(e,mx)}function mx(e){return e instanceof Qr?{value:e.clone(),recurse:!1}:fx(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}ax.className="RandomWidth",Oa(ax),j().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ix||(ix={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(ox||(ox={})),Error,new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);class bx{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class yx extends bx{constructor(){super(yx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}yx.INITIAL_CAPACITY=32;class xx{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Tx(this,e)}filter(e){return new $x(this,e)}map(e){return new Nx(this,e)}mapAsync(e){return new Ex(this,e)}serialMapAsync(e){return new Ex(this,e).serial()}flatmap(e){return new Ax(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Sx(this,e,t)}columnMajorBatch(e,t=!0,n=px){return this.rowMajorBatch(e,t).map((e=>hx(e,n)))}concatenate(e,t){return new _x(new vx([this,e]),t)}take(e){return e<0||null==e?this:new Cx(this,e)}skip(e){return e<0||null==e?this:new Ix(this,e)}prefetch(e){return new Fx(this,e)}shuffle(e,t){return new Dx(this,e,t)}serial(){return new kx(this)}}class vx extends xx{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:gx(e),done:!1}}}class wx extends xx{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class kx extends xx{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Ix extends xx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;zs(e.value)}return this.upstream.next()}}class Cx extends xx{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Sx extends xx{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class $x extends xx{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;zs(e.value)}}}class Nx extends xx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=fs(e.value),n=this.transform(e.value),r=fs(n);for(const e of t)ps(e,r)||e.dispose();return{value:n,done:!1}}}class Tx extends xx{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Ex extends xx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=fs(e.value),n=await this.transform(e.value),r=fs(n);for(const e of t)ps(e,r)||e.dispose();return{value:n,done:!1}}}class Rx extends xx{constructor(){super(),this.outputQueue=new yx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class Ax extends Rx{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=fs(e.value),n=this.transform(e.value),r=fs(n);this.outputQueue.pushAll(n);for(const e of t)ps(e,r)||e.dispose();return!0}}class _x extends xx{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}(ux=lx||(lx={}))[ux.FAIL=0]="FAIL",ux[ux.SHORTEST=1]="SHORTEST",ux[ux.LONGEST=2]="LONGEST";class Fx extends xx{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new bx(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class Dx extends Fx{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=rl.alea(n||Lr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class Ox{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return d(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),Lx((async()=>(await n.iterator()).columnMajorBatch(e,t,Mx)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,Lx((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,Lx((async()=>(await t.iterator()).filter((t=>Ms((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return Lx((async()=>(await t.iterator()).map((t=>Ms((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return Lx((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return Lx((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,Lx((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new wx(s)).take(e),new _x(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,Lx((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=rl.alea(t||Lr().toString());return Lx((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,Lx((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function Lx(e,t=null){return new class extends Ox{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Mx(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Qr||Pr(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Qr?Il(e):Fs(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function zx(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}Ox.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");const Px=Hc;class Bx extends i{nextDataId(){return Bx.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new a(this,Os())}write(e,t,n){this.firstUse&&(this.firstUse=!1,j().get("IS_NODE")&&ur("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&T(n[0])){const s=n.map((e=>Mr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?uc(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):function(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return xa(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xa(e.shape,e.dtype,t)}makeOutput(e,t,n){return Os().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Lr();return e(),{kernelMs:Lr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){zx([e],"where");const t=this.readSync(e.dataId);return Px(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function Wx(e){return(t,n,r)=>{const s=S(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}function Ux(e,t,n){return Vx(e,Wx(t),n)}function Vx(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;zx(i,e);const o=a,l=o.data.get(i.dataId).values;let u;if("string"===i.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=Vc(l)}else u=l;const c=n||i.dtype,h=t(u,c,s);return o.makeTensorInfo(i.shape,c,h)}}Bx.nextDataId=0,Bs("cpu",(()=>new Bx),1);const Gx=Ux(Xe,(e=>e>=0?e:Math.exp(e)-1)),Hx={kernelName:Xe,backendName:"cpu",kernelFunc:Gx};function jx(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const qx={kernelName:dt,backendName:"cpu",kernelFunc:jx};function Kx(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;zx([s],"leakyRelu");const i=g(s.shape),o=n.data.get(s.dataId).values,l=C("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",l)}const Xx={kernelName:yt,backendName:"cpu",kernelFunc:Kx};function Yx(e){return(t,n,r,s,a)=>{const i=ja(t,n),o=i.length,l=F(i),u=C(a,g(i)),c=t.length,h=n.length,d=F(t),p=F(n),f=Ga(t,i),m=Ga(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<u.length;++t){const n=W(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=B(a,c,d),g=n.slice(-h);m.forEach((e=>g[e]=0));const b=B(g,h,p);u[t]=e(r[i],s[b])}return[u,i]}}const Jx=Yx(((e,t)=>e<0?t*e:e));function Zx(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;zx([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,l]=Jx(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const Qx={kernelName:Qt,backendName:"cpu",kernelFunc:Zx},ev=Ux(ln,(e=>Math.max(0,e))),tv={kernelName:ln,backendName:"cpu",kernelFunc:ev},nv=Ux(fn,(e=>Math.min(Math.max(0,e),6))),rv={kernelName:fn,backendName:"cpu",kernelFunc:nv},sv=Wx((e=>1/(1+Math.exp(-e)))),av=Ux(Nn,(e=>1/(1+Math.exp(-e)))),iv={kernelName:Nn,backendName:"cpu",kernelFunc:av};function ov(e,t,n,r,s){if("linear"===n)return jx({inputs:{x:t},backend:e});if("relu"===n)return ev({inputs:{x:t},backend:e});if("elu"===n)return Gx({inputs:{x:t},backend:e});if("relu6"===n)return nv({inputs:{x:t},backend:e});if("prelu"===n)return Zx({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Kx({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return av({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function lv(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const uv={kernelName:Ie,backendName:"cpu",kernelFunc:lv};function cv(e,t,n="float32"){if("complex64"===n)return lv({inputs:{real:cv(e,t,"float32"),imag:cv(e,t,"float32")},backend:e});const r=M(g(t),n);return e.makeTensorInfo(t,n,r)}function hv(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const dv={kernelName:an,backendName:"cpu",kernelFunc:hv};function pv(e,t,n,r){if("int32"===r)return[t,"int32",Int32Array.from(e)];if("bool"===r){const r=Or([0],n),[s,a]=Yx(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function fv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return jx({inputs:{x:s},backend:n});const e=cv(n,s.shape,s.dtype),t=fv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=lv({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=hv({inputs:{input:s},backend:n}),t=fv({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!$(s.dtype,a)){const e=jx({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[o,l,u]=pv(i,s.shape,s.dtype,a);return n.makeTensorInfo(o,l,u)}const gv={kernelName:ve,backendName:"cpu",kernelFunc:fv};function mv(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;zx([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Vc(l):l,h="string"===a.dtype?Vc(u):u,d=r||a.dtype,[p,f]=t(a.shape,i.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=fv({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=fv({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,l,u,f,g),x=o.makeTensorInfo(y,"float32",m),v=o.makeTensorInfo(y,"float32",b),w=lv({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function bv(e){return(t,n,r,s,a,i)=>{const o=ja(t,n),l=g(o),u=o.length,c=F(o),h=C("float32",l),d=C("float32",l),p=Ga(t,o),f=Ga(n,o),m=uc(r,s),b=uc(a,i),y=t.length,x=F(t),v=n.length,w=F(n);if(p.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%b.length,s=e(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);h[t]=s.real,d[t]=s.imag}else for(let t=0;t<h.length;t++){const n=W(t,u,c),r=n.slice(-y);p.forEach((e=>r[e]=0));const s=B(r,y,x),a=n.slice(-v);f.forEach((e=>a[e]=0));const i=B(a,v,w),o=e(m[2*s],m[2*s+1],b[2*i],b[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}const yv=Yx(((e,t)=>e+t)),xv=bv(((e,t,n,r)=>({real:e+n,imag:t+r}))),vv=mv(ee,yv,xv),wv={kernelName:ee,backendName:"cpu",kernelFunc:vv};function kv(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=g(s.shape),o=w(a,i),l=g(o);d(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const u=n.data.get(s.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const Iv={kernelName:un,backendName:"cpu",kernelFunc:kv};function Cv(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;zx([s,a],"matMul");const l=s.shape.length,u=a.shape.length,c=i?s.shape[l-2]:s.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?s.shape[l-1]:s.shape[l-2],f=o?a.shape[u-2]:a.shape[u-1],m=s.shape.slice(0,-2),b=a.shape.slice(0,-2),y=g(m),x=g(b),v=ja(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,f]);d(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[x,f,h]:[x,h,f],k=kv({inputs:{x:s},backend:n,attrs:{shape:i?[y,c,p]:[y,p,c]}}),I=kv({inputs:{x:a},backend:n,attrs:{shape:w}}),C=i?k.shape[1]:k.shape[2],S=i?k.shape[2]:k.shape[1],$=o?I.shape[1]:I.shape[2],N=Math.max(y,x),T=n.data.get(k.dataId).values,E=n.data.get(I.dataId).values,R=F(k.shape),A=F(I.shape),[_,D,O]=i?[R[0],1,R[1]]:[R[0],R[1],1],[L,M,z]=o?[1,A[1],A[0]]:[A[1],1,A[0]],P=S*$,B=xa([N,S,$],k.dtype),W=B.values,U=n.blockSize;for(let e=0;e<N;e++){const t=e%y,n=e%x;for(let r=0;r<S;r+=U){const s=Math.min(r+U,S);for(let a=0;a<$;a+=U){const i=Math.min(a+U,$);for(let o=0;o<C;o+=U){const l=Math.min(o+U,C);for(let u=r;u<s;u++)for(let r=a;r<i;r++){let s=0;for(let e=o;e<l;e++)s+=T[t*_+u*D+e*O]*E[e*L+r*M+n*z];W[e*P+(u*$+r)]+=s}}}}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const Sv={kernelName:ge,backendName:"cpu",kernelFunc:Cv},$v={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;let d,p,f;const g=[];d=Cv({inputs:{a:s,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(p=vv({inputs:{a:d,b:i},backend:n}),g.push(d),d=p),c&&(f=ov(n,d,c,o,h),g.push(d),d=f);for(const e of g)n.disposeIntermediateTensorInfo(e);return d}};function Nv(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Tv={kernelName:J,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;zx(t,"abs");let r=new Float32Array(g(t.shape));return r=Nv(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},Ev=Ux(Z,(e=>Math.acos(e))),Rv={kernelName:Z,backendName:"cpu",kernelFunc:Ev},Av=Ux(Q,(e=>Math.acosh(e))),_v={kernelName:Q,backendName:"cpu",kernelFunc:Av},Fv={kernelName:te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;zx(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=xa(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function Dv(e,t,n,r,s){const a=t.length,i=g(t),o=F(t),l=F(s),u=C(n,g(s));for(let t=0;t<i;++t){const n=W(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];u[B(s,a,l)]=e[t]}return u}function Ov(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;zx(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const l=Dv(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(l,o,s.dtype),shape:o,dtype:s.dtype}}const Lv={kernelName:Zn,backendName:"cpu",kernelFunc:Ov},Mv={kernelName:ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zx(s,"all");const o=k(a,s.shape);let l=o;const u=Mo(l,s.shape.length);let c=s;null!=u&&(c=Ov({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Lo("all",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=M(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},zv={kernelName:re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zx(s,"any");const o=k(a,s.shape);let l=o;const u=Mo(l,s.shape.length);let c=s;null!=u&&(c=Ov({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Lo("any",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=M(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Pv={kernelName:se,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;zx(s,"argMax");let i=k(a,s.shape);const o=Mo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Ov({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Lo("argMax",i,l.shape.length);const[c,h]=Do(l.shape,i),d=M(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s>n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Bv={kernelName:ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;zx(s,"argMin");let i=k(a,s.shape);const o=Mo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=Ov({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),i=[i[0]],Lo("argMin",i,l.shape.length);const[c,h]=Do(l.shape,i),d=M(g(c),"int32"),p=g(h),f=n.data.get(l.dataId).values;for(let e=0;e<d.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const s=f[t+e];s<n&&(n=s,r=e)}d[e]=r}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Wv=Ux(ie,(e=>Math.asin(e))),Uv={kernelName:ie,backendName:"cpu",kernelFunc:Wv},Vv=Ux(oe,(e=>Math.asinh(e))),Gv={kernelName:oe,backendName:"cpu",kernelFunc:Vv},Hv=Ux(le,(e=>Math.atan(e))),jv={kernelName:le,backendName:"cpu",kernelFunc:Hv},qv=Yx(((e,t)=>Math.atan2(e,t))),Kv=mv(ce,qv),Xv={kernelName:ce,backendName:"cpu",kernelFunc:Kv},Yv=Ux(ue,(e=>Math.atanh(e))),Jv={kernelName:ue,backendName:"cpu",kernelFunc:Yv};function Zv(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,l=s.dilationHeight,u=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,d=s.padInfo.top,p=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=xa(s.outShape,n),m=g.values,b=s.outShape[1]*s.outShape[2]*s.outShape[3],y=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*b,g=t*r[0];for(let t=0;t<s.inChannels;++t)for(let b=0;b<s.outHeight;++b){const v=b*i-d,w=Math.max(0,v),k=Math.min(s.inHeight,c+v),I=n+b*y;for(let n=0;n<s.outWidth;++n){const i=n*o-p,c=Math.max(0,i),d=Math.min(s.inWidth,h+i);let b=f,y=0,v=0;for(let n=w;n<k;n+=l){const s=g+n*r[1];for(let n=c;n<d;n+=u){const i=e[s+n*r[2]+t];"max"===a&&i>b?b=i:"avg"===a&&(y+=i,v++)}if(isNaN(b))break}m[I+n*x+t]="avg"===a?y/v:b}}}return g}function Qv(e,t,n,r,s=!1,a=!1){const i=xa(r.outShape,"int32"),o=r.strideHeight,l=r.strideWidth,u=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,d=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,g=xa(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const m=n*o-p;let b=m;for(;b<0;)b+=u;const y=Math.min(r.inHeight,h+m);for(let o=0;o<r.outWidth;++o){const h=o*l-f;let p=h;for(;p<0;)p+=c;const x=Math.min(r.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=b;n<y;n+=u){const i=n-m;for(let o=p;o<x;o+=c){const l=o-h,u=g.get(e,n,o,t);u>v&&(v=u,w=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function ew(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,l=s.strideWidth,u=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,d=s.effectiveFilterDepth,p=s.effectiveFilterHeight,f=s.effectiveFilterWidth,g=s.padInfo.front,m=s.padInfo.top,b=s.padInfo.left,y="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=xa(s.outShape,n),v=x.values,w=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],I=s.outShape[3]*s.outShape[4],C=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*w,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let w=0;w<s.outDepth;++w){const S=w*i-g;let $=S;for(;$<0;)$+=u;const N=Math.min(s.inDepth,d+S),T=n+w*k;for(let n=0;n<s.outHeight;++n){const i=n*o-m;let d=i;for(;d<0;)d+=c;const g=Math.min(s.inHeight,p+i),w=T+n*I;for(let n=0;n<s.outWidth;++n){const i=n*l-b;let o=i;for(;o<0;)o+=h;const p=Math.min(s.inWidth,f+i),m=w+n*C;let k=y,I=0,S=0;for(let n=$;n<N;n+=u){const s=x+n*r[1];for(let n=d;n<g;n+=c){const i=s+n*r[2];for(let n=o;n<p;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(I+=s,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[m+t]="avg"===a?I/Math.max(S,1):k}}}}return x}const tw={kernelName:he,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;zx(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;d(Wi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ai(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&m(u.inShape,u.outShape))c=jx({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=F(s.shape),r=Zv(e,s.shape,s.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},nw={kernelName:pe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;zx(s,"avgPool3d");const c=_i(s.shape,a,i,1,o,l,u),h=ew(n.data.get(s.dataId).values,s.shape,s.dtype,F(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},rw={kernelName:fe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;zx([s,a],"avgPool3DGrad");const c=_i(a.shape,i,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,y=c.dilationHeight,x=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,$=xa(a.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-I,i=r-S,o=s-C;let l=0;for(let n=0;n<v;n+=b){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<w;n+=y){const s=(i+n)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/p;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=T.get(e,r,s,a,t))}}}$.set(l*N,e,n,r,s,t)}return n.makeTensorInfo($.shape,$.dtype,$.values)}},sw={kernelName:de,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;zx([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ai(i.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,y=c.effectiveFilterWidth,x=y-1-c.padInfo.left,v=b-1-c.padInfo.top,w=xa(i.shape,"float32"),k=1/(p*f),I=n.data.get(s.dataId).values,C=xa(s.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-v,a=r-x;let i=0;for(let n=0;n<b;n+=g){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=m){const s=(a+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=C.get(e,r,s,t))}}w.set(i*k,e,n,r,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},aw={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:l}=t;d(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),zx([s,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=r;null==u&&(u=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,f=a?n.data.get(a.dataId).values:new Float32Array([1]),g=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),b=g.length,y=f.length,x=p.length,v=h.length;let w=0,k=0,I=0,C=0;for(let e=0;e<c.length;++e)m[e]=g[w++]+(c[e]-h[k++])*f[I++]/Math.sqrt(p[C++]+u),w>=b&&(w=0),k>=v&&(k=0),I>=y&&(I=0),C>=x&&(C=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function iw(e,t,n,r,s){const a=ki(r,t,n),i=g(n),o=F(r);if(a){const n=Ii(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l=xa(r,s,"string"===s?Vc(e):e),u=xa(n,s);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));u.set(l.get(...r),...n)}return"string"===s?Gc(u.values):u.values}function ow(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;zx(s,"slice");const[o,l]=Ci(s,a,i);ci(s,o,l);const u=iw(n.data.get(s.dataId).values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,u)}const lw={kernelName:In,backendName:"cpu",kernelFunc:ow},uw={kernelName:me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;zx([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=ju(s.shape,a,o),u=qu(l.length,a.length),c=Ku(s.shape,a,o),h=Xu(i,a.length),d=Yu(c,i,a.length),p=kv({inputs:{x:s},backend:n,attrs:{shape:l}}),f=Ov({inputs:{x:p},backend:n,attrs:{perm:u}}),g=kv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=ow({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}};function cw(e,t,n,r,s){const a=g(r),i=M(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function hw(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=xa([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const dw={kernelName:be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=cw(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},pw=Yx(((e,t)=>e&t)),fw={kernelName:ye,backendName:"cpu",kernelFunc:mv(ye,pw)},gw={kernelName:xe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},mw=Wx((e=>Math.ceil(e))),bw=Vx(we,mw),yw={kernelName:we,backendName:"cpu",kernelFunc:bw},xw=Ux(ke,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),vw={kernelName:ke,backendName:"cpu",kernelFunc:xw},ww={kernelName:Ce,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(g(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function kw(e,t,n,r){const s=S(n,g(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=g(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?Vc(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function Iw(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const Cw={kernelName:ft,backendName:"cpu",kernelFunc:Iw};function Sw(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=k(s,t[0].shape)[0];Lu(t.map((e=>e.shape)),a);let i=Mu(t.map((e=>e.shape)),a);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));if(1===o.length)return jx({inputs:{x:o[0]},backend:n});if("complex64"===o[0].dtype){const e=o.map((e=>hv({inputs:{input:e},backend:n}))),t=o.map((e=>Iw({inputs:{input:e},backend:n}))),r=Sw({inputs:e,backend:n,attrs:{axis:a}}),s=Sw({inputs:t,backend:n,attrs:{axis:a}}),i=lv({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const l=o.map((e=>{const t=g(e.shape.slice(a));return kv({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Mu(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=kw(u,i,t[0].dtype,c),d=Mu(o.map((e=>e.shape)),a),p=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const $w={kernelName:Se,backendName:"cpu",kernelFunc:Sw};function Nw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r;zx([s,a],"conv2d");const h=Vi(l),d=Fi(s.shape,a.shape,i,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,y=d.padInfo.top,x="channelsLast"===d.dataFormat,v=new Xr(d.outShape,s.dtype),w=F(s.shape),k=F(a.shape),I=w[0],C=x?w[1]:w[2],S=x?w[2]:1,$=x?1:w[1],N=v.strides[0],T=x?v.strides[1]:v.strides[2],E=x?v.strides[2]:1,R=x?1:v.strides[1],A=n.data.get(s.dataId).values,_=n.data.get(a.dataId).values,D=v.values;for(let e=0;e<d.batchSize;++e){const t=e*I,n=e*N;for(let e=0;e<d.outHeight;++e){const r=n+e*T,s=e*d.strideHeight-y;for(let e=0;e<p;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*k[0],i=t+n*C;for(let e=0;e<d.outWidth;++e){const t=r+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const r=n+e*m;if(r<0||r>=d.inWidth)continue;const s=i+r*S;let o=a+e*k[1];for(let e=0;e<d.inChannels;++e){const n=A[s+e*$];for(let e=0;e<d.outChannels;++e)D[t+e*R]+=n*_[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,D)}const Tw={kernelName:$e,backendName:"cpu",kernelFunc:Nw},Ew={kernelName:Ne,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r;zx([s,a],"conv2dBackpropFilter");const h=Vi(l),d=Fi(s.shape,c,i,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,y=new Xr(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=new Xr(s.shape,s.dtype,w),C=new Xr(a.shape,a.dtype,k);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((v-e)/p)),n=Math.min(d.outHeight,(d.inHeight+v-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(d.outWidth,(d.inWidth+x-r)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-v;for(let e=s;e<a;++e){const n=r+e*f-x;l+=b?I.get(u,t,n,i)*C.get(u,c,e,o):I.get(u,i,t,n)*C.get(u,o,c,e)}}y.set(l,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Rw={kernelName:Te,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r;zx([s,a],"conv2dBackpropInput");const h=F(a.shape),d=F(s.shape);let p=Vi(u);const f=Fi(i,a.shape,o,1,l,c,!1,p),g=new Xr(f.inShape,"float32"),m=g.values,b=n.data.get(s.dataId).values,y=n.data.get(a.dataId).values,[x,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const D=I-1-f.padInfo.top,O=C-1-f.padInfo.left,L="channelsLast"===p,M=g.strides[0],z=L?g.strides[1]:g.strides[2],P=L?g.strides[2]:1,B=L?1:g.strides[1],W=d[0],U=L?d[1]:d[2],V=L?d[2]:1,G=L?1:d[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<$;++n){const r=n-D,s=Math.max(0,Math.ceil(r/A)),a=Math.min(E,(I+r)/A);for(let i=0;i<N;++i){const o=i-O,l=Math.max(0,Math.ceil(o/_)),u=Math.min(R,(C+o)/_);let c=0;for(let n=s;n<a;++n){const s=n*A-r;for(let r=l;r<u;++r){const a=W*e+U*n+V*r,i=x*(I-1-s)+v*(C-1-(r*_-o))+w*t;for(let e=0;e<T;++e)c+=b[a+G*e]*y[i+e]}}m[M*e+z*n+P*i+B*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Aw={kernelName:Ee,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r;zx([s,a],"conv3d");const u=Di(s.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,y=m.left,x=m.top,v=new Xr(u.outShape,s.dtype),w=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,I=v.values,C=F(s.shape),S=F(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*C[0],n=e*v.strides[0];for(let e=0;e<u.outDepth;++e){const r=n+e*v.strides[1],s=e*u.strideDepth-b;for(let e=0;e<c;++e){const n=s+e*p;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*C[1];for(let e=0;e<u.outHeight;++e){const t=r+e*v.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=u.inHeight)continue;const s=a+e*S[1],o=i+r*C[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,r=e*u.strideWidth-y;for(let e=0;e<d;++e){const t=r+e*g;if(t<0||t>=u.inWidth)continue;const a=s+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=w[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},_w={kernelName:Re,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r;zx([s,a],"conv3dBackpropFilterV2");const u=F(s.shape),c=F(a.shape),h=Di(s.shape,l,i,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,y=new Xr(h.filterShape,"float32"),x=y.values,[v,w,k,I]=y.strides,C=n.data.get(a.dataId).values,[S,$,N,T]=c,E=n.data.get(s.dataId).values,[R,A,_,D]=u,O=h.padInfo.front,L=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(h.outDepth,(h.inDepth+O-e)/d),r=e*v;for(let s=0;s<m;++s){const a=Math.max(0,Math.ceil((M-s)/p)),i=Math.min(h.outHeight,(h.inHeight+M-s)/p),o=s*w+r;for(let r=0;r<b;++r){const l=Math.max(0,Math.ceil((L-r)/f)),u=Math.min(h.outWidth,(h.inWidth+L-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const g=o*I+c;for(let c=0;c<h.outChannels;++c){let m=0;for(let g=0;g<h.batchSize;++g){const h=g*R,b=g*S;for(let g=t;g<n;++g){const t=(e+g*d-O)*A+h,n=g*$+b;for(let e=a;e<i;++e){const a=(s+e*p-M)*_+t,i=e*N+n;for(let e=l;e<u;++e){const t=e*T+i;m+=E[(r+e*f-L)*D+a+o]*C[t+c]}}}}x[g+c]=m}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Fw={kernelName:Ae,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r;zx([s],"conv3dBackpropInputV2");const u=F(s.shape),c=F(a.shape),h=Di(l,a.shape,o,1,i),d=new Xr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,y=n.data.get(s.dataId).values,[x,v,w,k]=u,I=n.data.get(a.dataId).values,[C,S,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:_,inDepth:D,inHeight:O,inWidth:L,outChannels:M,outDepth:z,outHeight:P,outWidth:B,strideDepth:W,strideHeight:U,strideWidth:V}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let e=0;e<T;++e)for(let t=0;t<_;++t)for(let n=0;n<D;++n){const r=n-G,s=Math.max(0,Math.ceil(r/W)),a=Math.min(z,(E+r)/W);for(let i=0;i<O;++i){const o=i-H,l=Math.max(0,Math.ceil(o/U)),u=Math.min(P,(R+o)/U);for(let c=0;c<L;++c){const h=c-j,d=Math.max(0,Math.ceil(h/V)),T=Math.min(B,(A+h)/V);let _=0;for(let n=s;n<a;++n){const s=n*W-r;for(let r=l;r<u;++r){const a=r*U-o;for(let i=d;i<T;++i){const o=x*e+v*n+w*r+k*i,l=C*(E-1-s)+S*(R-1-a)+$*(A-1-(i*V-h))+N*t;for(let e=0;e<M;++e)_+=y[o+e]*I[l+e]}}}p[f*e+g*n+m*i+b*c+t]=_}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}},Dw=Ux(_e,(e=>Math.cos(e))),Ow={kernelName:_e,backendName:"cpu",kernelFunc:Dw},Lw=Ux(Fe,(e=>Math.cosh(e))),Mw={kernelName:Fe,backendName:"cpu",kernelFunc:Lw},zw={kernelName:Le,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,[c,h,d,p]=s.shape,f=a.shape[0],[g,m]=o,b=xa([f,g,m,p],"float32"),y=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,v=n.data.get(s.dataId).values,w=F(s.shape),k=F(b.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],s=y[t+2],a=y[t+3],i=x[e];if(i>=c)continue;const o=g>1?(s-n)*(h-1)/(g-1):0,f=m>1?(a-r)*(d-1)/(m-1):0;for(let t=0;t<g;t++){const c=g>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<m;n++)for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}else if("bilinear"===l){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let l=0;l<m;l++){const c=m>1?r*(d-1)+l*f:.5*(r+a)*(d-1);if(c<0||c>d-1){for(let n=0;n<p;n++){const r=n+l*k[2]+t*k[1]+e*k[0];b.values[r]=u}continue}const h=Math.floor(c),g=Math.ceil(c),y=c-h;for(let r=0;r<p;r++){let a=r+h*w[2]+n*w[1]+i*w[0];const u=v[a];a=r+g*w[2]+n*w[1]+i*w[0];const c=v[a];a=r+h*w[2]+s*w[1]+i*w[0];const d=v[a];a=r+g*w[2]+s*w[1]+i*w[0];const p=u+(c-u)*y,f=d+(v[a]-d)*y;a=r+l*k[2]+t*k[1]+e*k[0],b.values[a]=p+(f-p)*o}}}else for(let n=0;n<m;++n){const s=m>1?r*(d-1)+n*f:.5*(r+a)*(d-1);if(s<0||s>d-1){for(let r=0;r<p;r++){const s=r+n*k[2]+t*k[1]+e*k[0];b.values[s]=u}continue}const o=Math.round(s),l=Math.round(c);for(let r=0;r<p;r++){const s=r+o*w[2]+l*w[1]+i*w[0],a=r+n*k[2]+t*k[1]+e*k[0];b.values[a]=v[s]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},Pw={kernelName:De,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;zx(s,"cumprod");const l=Mo([a],s.shape.length);let u=s;null!=l&&(u=Ov({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Po(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ls(u.dtype,"int32"),d=L(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?1:p[n];else{const r=m(e,t-1);d[n]=i?p[r]*d[r]:p[n]*d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Ov({inputs:{x:b},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}},Bw={kernelName:Oe,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;zx(s,"cumsum");const l=Mo([a],s.shape.length);let u=s;null!=l&&(u=Ov({inputs:{x:s},backend:n,attrs:{perm:l}}));const c=Po(1,s.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=ls(u.dtype,"int32"),d=M(g(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)d[n]=i?0:p[n];else{const r=m(e,t-1);d[n]=i?p[r]+d[r]:p[n]+d[r]}}const b=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Ov({inputs:{x:b},backend:n,attrs:{perm:zo(l)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(u),e}return b}},Ww={kernelName:Me,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=cw(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=hw(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},Uw={kernelName:ze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;d("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],l=s.shape[1],u=s.shape[2],c=s.shape[3],h=l*a,p=u*a,f=c/(a*a),g=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*f);let b=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*f;for(let t=0;t<f;++t){const r=t+i+c*(s+u*(n+l*e));m[b++]=g[r]}}}return n.makeTensorInfo([o,h,p,f],s.dtype,m)}};function Vw(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;zx([s,a],"depthwiseConv2DNative");const c=F(s.shape),h=F(a.shape);let p=l;null==p&&(p=[1,1]),d(Wi(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const f=Fi(s.shape,a.shape,i,p,o,u,!0),{filterHeight:g,filterWidth:m,dilationHeight:b,dilationWidth:y,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new Xr(f.outShape,s.dtype),C=n.data.get(s.dataId).values,S=n.data.get(a.dataId).values,$=I.values;for(let e=0;e<f.batchSize;++e){const t=e*c[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],s=e*f.strideHeight-w;for(let e=0;e<g;++e){const n=s+e*b;if(n<0||n>=f.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=f.inWidth)continue;const s=a+e*h[1],o=i+r*f.inChannels;let l=t,u=s;for(let e=0;e<f.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)$[l+e]+=t*S[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const Gw={kernelName:Pe,backendName:"cpu",kernelFunc:Vw},Hw={kernelName:Be,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r;zx([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Fi(s.shape,c,i,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Xr(h.filterShape,"float32"),b=h.padInfo.left,y=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(s.dataId).values,w=new Xr(s.shape,s.dtype,v),k=n.data.get(a.dataId).values,I=new Xr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/d)),n=Math.min(h.outHeight,(h.inHeight+y-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((b-r)/p)),a=Math.min(h.outWidth,(h.inWidth+b-r)/p);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-y;for(let e=s;e<a;++e){const n=r+e*p-b;u+=w.get(l,t,n,o)*I.get(l,c,e,i)}}m.set(u,e,r,o,l)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},jw={kernelName:We,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r;zx([s,a],"depthwiseConv2DNativeBackpropInput");const h=F(s.shape),d=F(a.shape),p=Fi(c,a.shape,i,o,l,u,!0),f=new Xr(p.inShape,"float32"),g=f.values,[m,b,y]=f.strides,x=n.data.get(s.dataId).values,[v,w,k]=h,I=n.data.get(a.dataId).values,[C,S,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:_,outChannels:D,outHeight:O,outWidth:L,strideHeight:M,strideWidth:z}=p,P=T-1-p.padInfo.top,B=E-1-p.padInfo.left,W=D/R;for(let e=0;e<N;++e)for(let t=0;t<R;++t)for(let n=0;n<A;++n){const r=n-P,s=Math.max(0,Math.ceil(r/M)),a=Math.min(O,(T+r)/M);for(let i=0;i<_;++i){const o=i-B,l=Math.max(0,Math.ceil(o/z)),u=Math.min(L,(E+o)/z);let c=0;for(let n=s;n<a;++n){const s=n*M-r;for(let r=l;r<u;++r){const a=v*e+w*n+k*r,i=C*(T-1-s)+S*(E-1-(r*z-o))+$*t;for(let e=0;e<W;++e)c+=x[a+(t*W+e)]*I[i+e]}}g[m*e+b*n+y*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},qw={kernelName:Ue,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=g(r.shape),a=n.data.get(r.dataId).values,i=xa([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const l=[...r.shape,...r.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},Kw={kernelName:Ve,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(r.dataId).values,c=r.shape.length,h=l.data.get(s.dataId).values,d=s.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:y,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:$,dilationWidth:N,outShape:T}=Ri(r.shape,s.shape,a,i,"NHWC",o),E=g(T),R=T.length,A=S(r.dtype,E);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-v.top;for(let a=0;a<x;++a){const i=a*k-v.left;for(let o=0;o<b;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const a=n+t*$;if(a>=0&&a<f)for(let n=0;n<C;++n){const p=i+n*N;if(p>=0&&p<m){const i=B([e,a,p,o],c,F(r.shape)),f=B([t,n,o],d,F(s.shape)),g=u[i]+h[f];g>l&&(l=g)}}}A[B([e,t,a,o],R,F(T))]=l}}}return{dataId:l.write(Or(A,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},Xw={kernelName:He,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=O(r.shape,u.data.get(r.dataId).values),h=O(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=Ri(r.shape,s.shape,i,o,"NHWC",l);d(a.rank===$.length,(()=>`Error in ${He}, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const N=O($,u.data.get(a.dataId).values),T=z(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*S;if(u>=0&&u<g){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=t,l=n)}}}T[o][l][a]+=N[e][t][r][a]}}}return{dataId:u.write(Or(T,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},Yw={kernelName:Ge,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=O(r.shape,u.data.get(r.dataId).values),h=O(s.shape,u.data.get(s.dataId).values),{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:y,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=Ri(r.shape,s.shape,i,o,"NHWC",l);d(a.rank===$.length,(()=>`Error in ${Ge}, dy must have the same rank as output ${$.length}, but got ${a.rank}`));const N=O($,u.data.get(a.dataId).values),T=z(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<b;++t){const n=t*v-x.top;for(let r=0;r<y;++r){const s=r*w-x.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=s<0?0:s;for(let t=0;t<k;++t){const r=n+t*C;if(r>=0&&r<f)for(let n=0;n<I;++n){const u=s+n*S;if(u>=0&&u<g){const s=c[e][r][u][a]+h[t][n][a];s>i&&(i=s,o=r,l=u)}}}T[e][o][l][a]+=N[e][t][r][a]}}}return{dataId:u.write(Or(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Jw={kernelName:je,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s}=t,{canvas:a,options:i}=r,{contextOptions:o,imageOptions:l}=i||{},u=(null==l?void 0:l.alpha)||1,c=(null==o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=a.getContext(c,(null==o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=s.shape.slice(0,2),f=2===s.shape.length?1:s.shape[2],g=n.data.get(s.dataId).values,m="float32"===s.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let e=0;e<d*p;++e){const t=[0,0,0,255*u];for(let n=0;n<f;n++){const r=g[e*f+n];if("float32"===s.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===s.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===f?(t[0]=r*m,t[1]=r*m,t[2]=r*m):t[n]=r*m}const n=4*e;b[n+0]=Math.round(t[0]),b[n+1]=Math.round(t[1]),b[n+2]=Math.round(t[2]),b[n+3]=Math.round(t[3])}a.width=p,a.height=d;const y=new ImageData(b,p,d);return h.putImageData(y,0,0),s}},Zw=Yx(((e,t)=>e*t)),Qw=bv(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),ek=mv(Ut,Zw,Qw),tk={kernelName:Ut,backendName:"cpu",kernelFunc:ek};function nk(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;zx(s,"sum"),o="bool"===s.dtype?fv({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):jx({inputs:{x:s},backend:n});const l=o.shape.length,u=k(a,o.shape),c=Mo(u,l);let h=u,d=o;null!=c&&(d=Ov({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Po(h.length,l)),Lo("sum",h,d.shape.length);const[p,f]=Do(d.shape,h);let m=cv(n,p,ls(d.dtype,"int32"));const b=g(f),y=n.data.get(m.dataId).values,x=n.data.get(d.dataId).values;for(let e=0;e<y.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=x[t+e];y[e]=n}if(i){const e=m;m=kv({inputs:{x:m},backend:n,attrs:{shape:Oo(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const rk={kernelName:Rn,backendName:"cpu",kernelFunc:nk},sk={kernelName:Ke,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=wc(s,a.length);Ic(i.length,l,a);const{path:u,steps:c}=Cc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=kc(p,l[t]);let s;Sc(e)?s=a[t]:(s=Ov({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);m(s.shape,i)||(s=kv({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=ek({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=nk({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},ak={kernelName:Ye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;zx([r,s],"eluGrad");const a=new Float32Array(g(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=0?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},ik=Yx(((e,t)=>e===t?1:0)),ok=mv(Ze,ik,null,"bool"),lk={kernelName:Ze,backendName:"cpu",kernelFunc:ok},uk=rc,ck=sc,hk=ac,dk=ic,pk=oc,fk=lc,gk=Ux(Je,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+uk*n);return t*(1-((((fk*r+pk)*r+dk)*r+hk)*r+ck)*r*Math.exp(-n*n))})),mk={kernelName:Je,backendName:"cpu",kernelFunc:gk},bk=Wx((e=>Math.exp(e))),yk=Vx(Qe,bk,"float32"),xk={kernelName:Qe,backendName:"cpu",kernelFunc:yk};function vk(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let l=a;return a<0&&(d(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),kv({inputs:{x:s},backend:n,attrs:{shape:o}})}const wk={kernelName:et,backendName:"cpu",kernelFunc:vk},kk=Wx((e=>Math.expm1(e))),Ik=Vx(tt,kk),Ck={kernelName:tt,backendName:"cpu",kernelFunc:Ik},Sk=Yx(((e,t)=>e/t)),$k=mv(qe,Sk),Nk={kernelName:qe,backendName:"cpu",kernelFunc:$k},Tk=Yx(((e,t)=>e-t)),Ek=bv(((e,t,n,r)=>({real:e-n,imag:t-r}))),Rk=mv(jn,Tk,Ek),Ak={kernelName:jn,backendName:"cpu",kernelFunc:Rk};function _k(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[s,a],c=g(u),h=C("float32",c),d=C("float32",c);for(let e=0;e<s;e++){const r=ow({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=ow({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=lv({inputs:{real:r,imag:s},backend:n}),{real:u,imag:c}=Fk(i,t,n),p=uc(u,c);for(let t=0;t<a;t++){const n=pc(p,t);h[e*a+t]=n.real,d[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=lv({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Fk(e,t,n){const r=g(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(!((o=r)&o-1)){const s=Dk(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Dr(r,"float32")),i=jx({inputs:{x:a},backend:n}),l=Nk.kernelFunc({inputs:{a:e,b:a},backend:n}),u=Nk.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return s}var o;{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=mc(s*r,t,n),l=pc(e,r);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),fc(r,a,i,s)}return r}(uc(a,i),r,t);return cc(e)}}function Dk(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=uc(e,t),i=n/2,o=hc(a),l=o.real,u=o.imag,c=[l.length],h=s.makeTensorInfo(c,"float32",l),d=s.makeTensorInfo(c,"float32",u),p=lv({inputs:{real:h,imag:d},backend:s}),f=dc(a),g=f.real,m=f.imag,b=[g.length],y=s.makeTensorInfo(b,"float32",g),x=s.makeTensorInfo(b,"float32",m),v=lv({inputs:{real:y,imag:x},backend:s}),w=Dk(l,u,i,r,s),k=w.real,I=w.imag,C=[k.length],S=s.makeTensorInfo(C,"float32",k),$=s.makeTensorInfo(C,"float32",I),N=lv({inputs:{real:S,imag:$},backend:s}),T=Dk(g,m,i,r,s),E=T.real,R=T.imag,A=[E.length],_=s.makeTensorInfo(A,"float32",E),F=s.makeTensorInfo(A,"float32",R),D=lv({inputs:{real:_,imag:F},backend:s}),O=gc(n,r),L=[O.real.length],M=s.makeTensorInfo(L,"float32",O.real),z=s.makeTensorInfo(L,"float32",O.imag),P=lv({inputs:{real:M,imag:z},backend:s}),B=ek({inputs:{a:P,b:D},backend:s}),W=vv({inputs:{a:N,b:B},backend:s}),U=Rk({inputs:{a:N,b:B},backend:s}),V=hv({inputs:{input:W},backend:s}),G=hv({inputs:{input:U},backend:s}),H=Iw({inputs:{input:W},backend:s}),j=Iw({inputs:{input:U},backend:s}),q=Sw({inputs:[V,G],backend:s,attrs:{axis:0}}),K=Sw({inputs:[H,j],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(y),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(v),s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),s.disposeIntermediateTensorInfo(N),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(M),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const Ok={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=g(r.shape),a=r.shape[r.shape.length-1],i=kv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_k(i,!1,n),l=kv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function Lk(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||R(s),o=S(i,g(r));return function(e,t){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const Mk={kernelName:rt,backendName:"cpu",kernelFunc:Lk},zk={kernelName:st,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=C(r.dtype,g(r.shape)),[i,o,l,u]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const r=e*u;for(let s=0;s<u;s++){const i=Math.round(l-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Pk=Wx((e=>Math.floor(e))),Bk=Vx(at,Pk),Wk={kernelName:at,backendName:"cpu",kernelFunc:Bk},Uk=Yx(((e,t)=>Math.floor(e/t))),Vk=mv(it,Uk,null,"int32"),Gk={kernelName:it,backendName:"cpu",kernelFunc:Vk},Hk={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Nw({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;if("NCHW"===c&&1===i.shape.length&&1!==i.shape[0]){const e=kv({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});g=vv({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=vv({inputs:{a:g,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=kv({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=ov(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=ov(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}},jk={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r;let g=Vw({inputs:{x:s,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(i){const e=g;g=vv({inputs:{a:g,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=ov(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}};function qk(e,t,n,r,s,a,i,o,l){const u=xa([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const Kk={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=g(r.shape),i=s.shape,o=i[i.length-1],[l,u,c,h]=Ju(r,s);if(0===u)return n.makeTensorInfo(l,r.dtype,[]);const d=qk(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,u,o,c,h,r.shape,a);return n.makeTensorInfo(l,r.dtype,d.values)}};function Xk(e,t,n){const r=xa(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);0<=l&&l<e.values.length&&(r.values[n]=e.values[l])}return r}const Yk={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;zx([s,a],"gatherV2");const l=k(i,s.shape)[0],u=n.data.get(a.dataId).values,c=s.shape[l];for(let e=0;e<u.length;++e){const t=u[e];d(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=g(a.shape),f=Uc(s,a,l,h),m=kv({inputs:{x:s},backend:n,attrs:{shape:[f.batchSize,f.outerSize,f.dimSize,f.sliceSize]}}),b=kv({inputs:{x:a},backend:n,attrs:{shape:[f.batchSize,p/f.batchSize]}}),y=[f.batchSize,f.outerSize,p/f.batchSize,f.sliceSize],x=n.bufferSync(b),v=Xk(n.bufferSync(m),x,y);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.makeTensorInfo(f.outputShape,v.dtype,v.values)}},Jk=Yx(((e,t)=>e>t?1:0)),Zk=mv(ct,Jk,null,"bool"),Qk={kernelName:ct,backendName:"cpu",kernelFunc:Zk},eI=Yx(((e,t)=>e>=t?1:0)),tI=mv(ht,eI,null,"bool"),nI={kernelName:ht,backendName:"cpu",kernelFunc:tI},rI={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=g(r.shape),a=r.shape[r.shape.length-1],i=kv({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=_k(i,!0,n),l=kv({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},sI=Ux(gt,(e=>Number.isFinite(e)?1:0),"bool"),aI={kernelName:gt,backendName:"cpu",kernelFunc:sI},iI=Ux(mt,(e=>Math.abs(e)===1/0?1:0),"bool"),oI={kernelName:mt,backendName:"cpu",kernelFunc:iI},lI=Ux(bt,(e=>Number.isNaN(e)?1:0),"bool"),uI={kernelName:bt,backendName:"cpu",kernelFunc:lI},cI=Yx(((e,t)=>e<t?1:0)),hI=mv(xt,cI,null,"bool"),dI={kernelName:xt,backendName:"cpu",kernelFunc:hI},pI=Yx(((e,t)=>e<=t?1:0)),fI=mv(vt,pI,null,"bool"),gI={kernelName:vt,backendName:"cpu",kernelFunc:fI};function mI(e,t,n){const r=(t-e)/(n-1),s=M(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const bI={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=mI(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},yI=Wx((e=>Math.log(e))),xI=Vx(kt,yI),vI={kernelName:kt,backendName:"cpu",kernelFunc:xI},wI=Ux(It,(e=>Math.log1p(e))),kI={kernelName:It,backendName:"cpu",kernelFunc:wI},II=Yx(((e,t)=>e&&t)),CI=mv(Ct,II,null,"bool"),SI={kernelName:Ct,backendName:"cpu",kernelFunc:CI},$I=Ux(St,(e=>e?0:1),"bool"),NI={kernelName:St,backendName:"cpu",kernelFunc:$I},TI=Yx(((e,t)=>e||t)),EI=mv($t,TI,null,"bool"),RI={kernelName:$t,backendName:"cpu",kernelFunc:EI},AI={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r;zx(s,"LRN");const u=s.shape[3],c=u-1,h=n.data.get(s.dataId).values,d=g(s.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<d;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);p[e]=n}return n.makeTensorInfo(s.shape,s.dtype,p)}},_I={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r;zx(i,"LRNGrad");const h=g(i.shape),d=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,b=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%d,n=e-t+Math.max(0,t-o),r=e-t+Math.min(d,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=u*s+l;for(let t=n;t<r;t++){let n=-2*u*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,b)}};function FI(e,t,n,r){const s=C(r,g(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function DI(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let l=s.shape;const u=l.length,c=k(a,l);let h=c;const d=Mo(h,u);let p=o.data.get(s.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=Dv(p,l,s.dtype,d,e),h=Po(h.length,u),l=e}zx(s,"max"),Lo("max",h,u);const[f,m]=Do(l,h),b=FI(p,g(m),f,s.dtype),y=o.write(b,f,s.dtype);let x=f;return i&&(x=Oo(f,c)),{dataId:y,shape:x,dtype:s.dtype}}const OI={kernelName:Et,backendName:"cpu",kernelFunc:DI},LI=Yx(((e,t)=>Math.max(e,t))),MI=mv(Rt,LI),zI={kernelName:Rt,backendName:"cpu",kernelFunc:MI},PI={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;zx(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;d(Wi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ai(s.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&m(u.inShape,u.outShape))c=jx({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=F(s.shape),r=Zv(e,s.shape,s.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,s.dtype,r.values)}return c}},BI={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r;zx(s,"maxPool3d");const c=_i(s.shape,a,i,1,o,l,u),h=ew(n.data.get(s.dataId).values,s.shape,s.dtype,F(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},WI={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;zx([s,a],"maxPool3DGrad");const c=_i(a.shape,i,o,1,l,u),h=function(e,t){const n=xa(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const y=b*r-d;let x=y;for(;x<0;)x+=i;const v=Math.min(t.inDepth,u+y);for(let r=0;r<t.outHeight;++r){const u=r*s-p;let d=u;for(;d<0;)d+=o;const w=Math.min(t.inHeight,c+u);for(let s=0;s<t.outWidth;++s){const p=s*a-f;let k=p;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<v;t+=i){const n=t-y;for(let r=d;r<w;r+=o){const s=r-u;for(let a=k;a<I;a+=l){const i=a-p,o=e.get(g,t,r,a,m);o>=C&&(C=o,S=n*c*h+s*c+i)}}}n.set(S,g,b,r,s,m)}}}return n}(n.bufferSync(a),c),d=c.strideDepth,p=c.strideHeight,f=c.strideWidth,g=c.dilationDepth,m=c.dilationHeight,b=c.dilationWidth,y=c.effectiveFilterDepth,x=c.effectiveFilterHeight,v=c.effectiveFilterWidth,w=y-1-c.padInfo.front,k=v-1-c.padInfo.left,I=x-1-c.padInfo.top,C=xa(a.shape,"float32"),S=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-w,i=r-I,o=s-k;let l=0;for(let n=0;n<y;n+=g){const r=(a+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=m){const a=(i+s)/p;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<v;i+=b){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const d=y*x*v-1-h.get(e,r,a,u,t)===n*x*v+s*v+i?1:0;0!==d&&(l+=S.get(e,r,a,u,t)*d)}}}C.set(l,e,n,r,s,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},UI={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;zx([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ai(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=xa(d.outShape,o.dtype,Qv(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,y=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=xa(o.shape,"float32"),C=n.data.get(s.dataId).values,S=xa(s.shape,"float32",C);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const s=n-k,a=r-w;let i=0;for(let n=0;n<x;n+=b){const r=(s+n)/g;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let s=0;s<v;s+=y){const o=(a+s)/m;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;const l=x*v-1-f.get(e,r,o,t)===n*v+s?1:0;0!==l&&(i+=S.get(e,r,o,t)*l)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},VI={kernelName:Ot,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;zx(r,"MaxPoolWithArgmax");const u=l.data.get(r.dataId).values,c=Ai(r.shape,s,a,[1,1],i),[h,d]=function(e,t,n,r,s){const a=Zv(e,0,n,F(t),s,"max"),i=Qv(e,t,n,s,!0,r);return[a.values,i.values]}(u,r.shape,r.dtype,o,c),p=l.write(h,c.outShape,r.dtype),f=l.write(d,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},GI={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=k(a,s.shape),l=g(Do(s.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=fv({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});u.push(h);const d=$k({inputs:{a:h,b:c},backend:n});u.push(d);const p=nk({inputs:{x:d},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},HI={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zx(s,"min");const o=k(a,s.shape);let l=o;const u=Mo(l,s.shape.length);let c=s;null!=u&&(c=Ov({inputs:{x:s},backend:n,attrs:{perm:u}}),l=Po(l.length,s.shape.length)),Lo("min",l,c.shape.length);const[h,d]=Do(c.shape,l),p=g(d),f=M(g(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const b=n.makeTensorInfo(h,c.dtype,f);if(i){const e=kv({inputs:{x:b},backend:n,attrs:{shape:Oo(h,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},jI=Yx(((e,t)=>Math.min(e,t))),qI=mv(zt,jI),KI={kernelName:zt,backendName:"cpu",kernelFunc:qI},XI={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;zx(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,d=s.shape.length,p=F(s.shape),f=g(o),m=o.length,b=F(o),y=C(s.dtype,f);for(let e=0;e<f;e++){let t=W(e,m,b);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=B(t,d,p);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},YI=Yx(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),JI=mv(Bt,YI),ZI={kernelName:Bt,backendName:"cpu",kernelFunc:JI};function QI(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=k([o],s.shape),u=DI({inputs:{x:s},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Oo(u.shape,l),h=kv({inputs:{x:u},backend:n,attrs:{shape:c}}),d=Rk({inputs:{a:s,b:h},backend:n}),p=yk({inputs:{x:d},backend:n}),f=nk({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=kv({inputs:{x:f},backend:n,attrs:{shape:c}}),m=$k({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const eC={kernelName:Fn,backendName:"cpu",kernelFunc:QI},tC={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;zx(s,"multinomial");const l=o?s:QI({inputs:{logits:s},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,a],p=M(g(d),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=rl.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();p[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}};function nC(e,t,n){const r=Dr(-1,n);return Zw([],t,r,e,n)}const rC={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;zx(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=nC(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},sC=iu,aC={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r;zx(s,"NonMaxSuppression");const u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=sC(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},iC=ou,oC={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r;zx(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:d,validOutputs:p}=iC(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},lC=lu,uC={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r;zx(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=lC(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}},cC=Yx(((e,t)=>e!==t?1:0)),hC=mv(Gt,cC,null,"bool"),dC={kernelName:Gt,backendName:"cpu",kernelFunc:hC},pC={kernelName:Xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r;zx(s,"oneHot");const u=g(s.shape),c=new Float32Array(u*i);c.fill(l);const h=n.data.get(s.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(c[e*i+h[e]]=o);return n.makeTensorInfo([...s.shape,i],a,c)}};function fC(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=hv({inputs:{input:r},backend:n}),t=fC({inputs:{x:e},backend:n}),s=Iw({inputs:{input:r},backend:n}),a=fC({inputs:{x:s},backend:n}),i=lv({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return Lk({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const gC={kernelName:nr,backendName:"cpu",kernelFunc:fC},mC={kernelName:Kt,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=hv({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=Iw({inputs:{input:s},backend:r}),i=fC({inputs:{x:a},backend:r}),o=lv({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return Lk({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function bC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return vk({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{p(a,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=Sw({inputs:t.map((e=>{const t=vk({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const yC={kernelName:Yt,backendName:"cpu",kernelFunc:bC},xC={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;zx(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(s.dataId).values,c=g(s.shape),h=s.shape.length,d=F(s.shape),p=g(o),f=o.length,m=F(o),b=C(s.dtype,p);0!==i&&b.fill(i);for(let e=0;e<c;e++)b[B(W(e,h,d).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(b,o,s.dtype),shape:o,dtype:s.dtype}}},vC=Yx(((e,t)=>Math.pow(e,t))),wC=mv(Zt,vC),kC={kernelName:Zt,backendName:"cpu",kernelFunc:wC};function IC(e,t,n,r){const[s,a]=Do(e,r),i=ls(t,"int32"),o=M(g(s),i),l=g(a);for(let e=0;e<o.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const CC={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;zx(s,"prod");const o=s.shape.length,l=k(a,s.shape),u=Mo(l,o);let c=l,h=s;const d=[];null!=u&&(h=Ov({inputs:{x:s},backend:n,attrs:{perm:u}}),d.push(h),c=Po(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=IC(h.shape,h.dtype,p,c);let b=g;return i&&(b=Oo(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}};function SC(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function $C(e,t,n,r,s,a,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=W(r,t.length,F(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:u,valueSlices:c,numValues:h}=function(e,t,n,r){const s=[];let a=0;const i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],s=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>s)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];const n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let r=0;r<e.length;++r){let i=e[r],l=e[r]+1;for(let e=0;e<n.length;++e){const r=n[e],s=e+t.length-1;if(s>=0){const e=o[s],t=e[e.length-1]-r[i];for(let e=i;e<l;++e)o[s].push(r[e+1]+t)}i=r[i],l=r[l]}l!==i&&(s.push([i,l]),a+=l-i)}return{outSplits:o,valueSlices:s,numValues:a}}(a,i,e,l),d=function(e){const t=[];for(let n=0;n<e.length;++n){const r=S("int32",e[n].length);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}(u),p=function(e,t,n,r,s){const a=t.slice();a[0]=s;const i=S(n,g(a)),o=e.length;return function(e,t,n,r,s,a){const i=SC(t,2)[1],o=SC(a,2)[1];let l=0;for(const t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<r;++t)s[l*o+t]=e[n*i+t];++l}}(e,t,r,0===o?0:o/t[0],i,a),[i,a]}(n,r,s,c,h);return[d,p[0],p[1]]}const NC={kernelName:tn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.data.get(e.dataId).values)),u=s.map((e=>e.shape)),c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,[d,p,f]=$C(l,u,c,a.shape,a.dtype,h,i.shape),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},TC=2147483647;function EC(e,t,n,r,s,a,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(s.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===s.length,u=0===i.length,c=[];o||c.push(t[0]),l||c.push(s[0]),u||c.push(i[0]);for(let e=1;e<c.length;++e)if(c[e]!==c[e-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=S("int32",h+1);d[0]=0;for(let t=0;t<h;++t){const n=o?e[0]:e[t],s=l?r[0]:r[t],i=u?a[0]:a[t];if(0===i)throw new Error("Requires delta != 0");let c;if(i>0&&s<n||i<0&&s>n)c=0;else if(c=Math.ceil(Math.abs((s-n)/i)),c>TC)throw new Error(`Requires ((limit - start) / delta) <= ${TC}`);d[t+1]=d[t]+c}const p=S(n,d[h]);let f=0;for(let t=0;t<h;++t){const n=d[t+1]-d[t];let r=o?e[0]:e[t];const s=u?a[0]:a[t];for(let e=0;e<n;++e)p[f++]=r,r+=s}return[d,p]}const RC={kernelName:nn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=EC(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}};var AC=zu;class _C{constructor(e,t,n,r,s,a,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=Bu(u),this.raggedRank=Wu(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===AC.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===AC.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case AC.VALUE_ROWIDS:return _C.getMaxWidthValueRowID(t);case AC.ROW_SPLITS:return _C.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${AC[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],s=0;for(let a=1;a<t;++a){const t=e[a];t!==r&&(r=t,s=Math.max(a-n,s),n=a)}return Math.max(t-n,s)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return DC(e,n)}calculateOutputSize(e){const t=this.valuesShape;Uu(this.defaultValueShape,t);const n=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=Pu(this.raggedRank,n,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let e=0;e<r;++e,a+=t)s.push(a);for(let t=r;t<e;++t)s.push(-1);return d(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const s=e.length,a=[];for(let i=0;i<s-1;++i){const s=e[i+1]-e[i];let o=Math.min(r,s),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)a.push(l),l+=n;for(let e=0;e<s-o;++e)a.push(-1)}if(s>0&&a.length!==e[s-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,n,r){const s=e.length,a=[];if(0===s)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];a.push(l);for(let u=1;u<s;++u){const s=e[u];if(s===o)l>=0&&(++i,i<r?l+=n:l=-1);else{if(i=0,o=s,s>=t.length)throw new Error(`Got nextValueRowId=${s} which is not less than ${t.length}`);l=t[s]}a.push(l)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,n,r){const s=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case AC.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(s,t,n,r);case AC.ROW_SPLITS:if(s.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${s.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(s,t,n,r);default:throw new Error(`Unsupported partition type: ${AC[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case AC.FIRST_DIM_SIZE:return e[0];case AC.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case AC.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${AC[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];const r=DC(t,!1),s=S(this.valuesDType,g(r));if(n[0]*t[0]>0){let a=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)a=this.calculateOutputIndex(e-1,a,n[e],t[e]);this.setOutput(this.raggedRank,a,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const o=g(i),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Ms((()=>{const t=Hi(u,e),n=Zi(t,i);u=n.dataSync()}))}let c=0,h=0,d=0;for(let e=0;e<=l;++e){let r=e<l?t[e]:-1;if(r!==d){if(h<d){const e=s.subarray(c*o);FC(a.subarray(h*o),e,(d-h)*o)}if(e>=l){const e=n.length;r=Math.floor(e/o)}if(r>d)if(1===this.defaultValue.length)a.subarray(d*o,r*o).fill(this.defaultValue[0]),d=r;else for(;r>d;)FC(a.slice(d*o),u,o),++d;r<0?(c=e+1,h=d):(c=e,h=d,d=h+1)}else++d}}}function FC(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function DC(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function OC(e,t,n,r,s,a,i,o,l,u){return new _C(e,t,n,r,s,a,i,o,l,u).compute()}const LC={kernelName:rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=OC(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}};function MC(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return M(0,r);const s=M(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const zC={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=MC(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},PC=Ux(on,(e=>1/e)),BC={kernelName:on,backendName:"cpu",kernelFunc:PC},WC={kernelName:dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;zx(s,"resizeBilinear");const l=F(s.shape),[u,c]=o,[h,d,p,f]=s.shape,m=n.data.get(s.dataId).values,b=new Float32Array(g([h,u,c,f])),y=[a&&u>1?d-1:d,a&&c>1?p-1:p],x=[a&&u>1?u-1:u,a&&c>1?c-1:c];let v=0;const w=y[0]/x[0],k=y[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(d-1,Math.ceil(n)),o=e*l[0]+r*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(p-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],d=o+a*l[2],g=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[d+e]-t)*r,i=a+(n+(m[g+e]-n)*r-a)*s;b[v++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",b)}},UC={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;zx([a,s],"resizeBilinearGrad");const o=F(s.shape),[l,u,c,h]=s.shape,[,d,p]=a.shape,f=new Float32Array(l*u*c*h),g=[i&&d>1?u-1:u,i&&p>1?c-1:c],m=[i&&d>1?d-1:d,i&&p>1?p-1:p],b=g[0]/m[0],y=g[1]/m[1],x=n.data.get(a.dataId).values;let v=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=e*b,r=Math.floor(n),s=Math.min(Math.ceil(n),u-1),a=t+r*o[1],i=t+s*o[1],l=n-r,d=1-l;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,u=1-s,p=a+n*o[2],g=a+r*o[2],m=i+n*o[2],b=i+r*o[2],w=d*u,k=d*s,I=l*u,C=l*s;for(let e=0;e<h;e++){const t=x[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},VC={kernelName:cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;zx(s,"resizeNearestNeighbor");const l=F(s.shape),[u,c]=o,[h,d,p,f]=s.shape,g=n.data.get(s.dataId).values,m=new Float32Array(h*u*c*f),b=[a&&u>1?d-1:d,a&&c>1?p-1:p],y=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=b[0]/y[0],v=b[1]/y[1];let w=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let r=Math.min(d-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*l[1];for(let e=0;e<c;e++){const t=i?v*(e+.5):v*e;let n=Math.min(p-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*l[2];for(let e=0;e<f;e++){const t=g[r+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],s.dtype,m)}},GC={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;zx([a,s],"resizeNearestNeighborGrad");const o=F(s.shape),l=F(a.shape),[u,c,h,d]=s.shape,[,p,f]=a.shape,g=new Float32Array(u*c*h*d),m=n.data.get(a.dataId).values,b=[i&&p>1?c-1:c,i&&f>1?h-1:h],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=b[0]/y[0],v=b[1]/y[1],w=1/x,k=1/v,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*w),s=Math.floor(r-I/2);for(let r=0;r<h;r++){const a=n+r*o[2],u=Math.floor(r*k),b=Math.floor(u-C/2);for(let n=0;n<d;n++){let o=0;for(let a=0;a<I;a++){const u=a+s;if(u<0||u>=p)continue;const d=t+u*l[1],g=u*x;if(e===Math.min(c-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],a=t*v;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=m[s+n])}}g[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,g)}},HC={kernelName:gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;zx(s,"reverse");const i=s.shape.length,o=k(a,s.shape);if(0===i)return jx({inputs:{x:s},backend:n});const l=new Xr(s.shape,s.dtype),u=n.bufferSync(s);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},jC={kernelName:ar,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=C(r.dtype,g(r.shape)),[u,c,h,d]=r.shape,[p,f]=Hu(i,c,h),m=Math.sin(s),b=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*d;for(let e=0;e<c;e++){const n=e*(h*d);for(let r=0;r<h;r++){const s=r*d;for(let i=0;i<d;i++){const o=[u,e,r,i],g=o[2],x=o[1];let v=(g-p)*b-(x-f)*m,w=(g-p)*m+(x-f)*b;v=Math.round(v+p),w=Math.round(w+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),v>=0&&v<h&&w>=0&&w<c&&(k=y[t+w*(h*d)+v*d+i]),l[t+n+s+i]=k}}}}return{dataId:o.write(l,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},qC=Ux(mn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),KC={kernelName:mn,backendName:"cpu",kernelFunc:qC},XC=Wx((e=>1/Math.sqrt(e))),YC=Vx(bn,XC),JC={kernelName:bn,backendName:"cpu",kernelFunc:YC};function ZC(e,t,n,r,s,a,i,o,l,u){const c=[r/s,s],h=e.values,d=t.values;if(0===r)return xa(n,t.dtype);const p=l instanceof Xr?l:xa(c,t.dtype);"string"==typeof l||"number"==typeof l?p.values.fill(l):"boolean"==typeof l&&p.values.fill(+l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)u?p.values[l*s+n]+=d[e*s+n]:p.values[l*s+n]=0===t.rank?d[0]:d[e*s+n]}return p}const QC={kernelName:yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ec(0,s,i),d=ZC(n.bufferSync(s),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}};function eS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<t?n=s+1:r=s;return r}function tS(e,t){let n=0,r=e.length,s=0;for(;n<r;)s=Math.floor((n+r)/2),e[s]<=t?n=s+1:r=s;return r}const nS={kernelName:vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=function(e,t,n,r,s,a){const i=S("int32",n*s);for(let o=0;o<n;++o){const n=e.slice(o*r,(o+1)*r),l=o*s;for(let e=0;e<s;++e)i[l+e]="left"===a?eS(n,t[e+l]):tS(n,t[e+l])}return i}(n.data.get(s.dataId).values,n.data.get(a.dataId).values,s.shape[0],s.shape[1],a.shape[1],i);return n.makeTensorInfo(a.shape,"int32",o)}},rS={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;zx([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=ls(s.dtype,a.dtype),h=M(g(s.shape),c);let d=0;const p=0===i||i>1||1===s.shape.length?1:g(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(s.shape,c,h)}},sS=tc,aS=nc,iS=Ux(kn,(e=>e>=0?aS*e:sS*(Math.exp(e)-1))),oS={kernelName:kn,backendName:"cpu",kernelFunc:iS},lS=Ux($n,(e=>e<0?-1:e>0?1:0)),uS={kernelName:$n,backendName:"cpu",kernelFunc:lS},cS=Ux(Cn,(e=>Math.sin(e))),hS={kernelName:Cn,backendName:"cpu",kernelFunc:cS},dS=Ux(Sn,(e=>Math.sinh(e))),pS={kernelName:Sn,backendName:"cpu",kernelFunc:dS},fS=Math.log(1.1920928955078125e-7)+2,gS=Ux(Tn,(e=>{const t=e>-fS,n=e<fS,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),mS={kernelName:Tn,backendName:"cpu",kernelFunc:gS},bS={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;zx([s],"spaceToBatchND");const o=g(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=xC.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),c=ju(u.shape,a,o,!1),h=qu(c.length,a.length,!1),d=Ku(u.shape,a,o,!1),p=kv({inputs:{x:u},backend:n,attrs:{shape:c}}),f=Ov({inputs:{x:p},backend:n,attrs:{perm:h}}),m=kv({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function yS(e,t,n,r,s,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(Tc(o));return[S(n,0),[0,h],S(s,0),u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(Ec(t,n));if(n>=l)throw new Error(Rc(t,n,l));++f[n],d=d&&n>=p,p=n}let g=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,g=g&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(g&&d){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=S(n,t*h),d=S(s,t),p=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=p[n],i=(0===n?0:f[n-1])+s;p[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];d[i]=r[t],c[t]=i}for(let e=0;e<l;++e)if(0===p[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;d[t]=i}return[a,[t,h],d,u,c]}}const xS={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,d,p,f,g]=yS(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};function vS(e,t,n,r,s){const a=g(r),i=t[0],o=s.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(Ac(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(_c(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(Dc(r,l));l[c]=e}if(g(l)!==a)throw new Error(Oc(r,l));const h=r.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*r[e+1]}const p=[];if(o>0){p[o-1]=1;for(let e=o-2;e>=0;--e)p[e]=p[e+1]*l[e+1]}const f=S(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*d[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/p[e]),n%=p[e]}return[f,[i,o],l]}const wS={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=vS(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function kS(e,t,n,r,s,a=!1,i=0){const o=r.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const d=S(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,g=0,m=s[p];for(;;){let t=0;if(f<o){if(t=s[f],m===t){++f;continue}if(m>=t)throw new Error("segment ids are not increasing")}if(m<0||m>=c)throw new Error(zc(m,c));m>g&&d.fill(i,g*u,m*u);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=l[0])throw new Error(Pc(t,r[t],l[0]));for(let t=0;t<u;t++)d[m*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)d[m*u+e]/=f-p;if(p=f,++f,g=m+1,m=t,f>o)break}return g<c&&d.fill(i,g*u,c*u),[d,h]}const IS={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=kS(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},CS={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,[u,c]=kS(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},SS={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ec(0,s,o),p=!1,f=n.bufferSync(s);let g;switch(a.dtype){case"bool":g=ZC(f,n.bufferSync(a),o,d,c,u,l,h,Boolean(n.data.get(i.dataId).values[0]),p);break;case"float32":case"int32":g=ZC(f,n.bufferSync(a),o,d,c,u,l,h,n.data.get(i.dataId).values[0],p);break;case"string":g=ZC(f,n.bufferSync(a),o,d,c,u,l,h,zr(n.data.get(i.dataId).values[0]),p);break;default:throw new Error(`Unsupported type ${a.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}},$S={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=k(i,s.shape)[0],l=Nc(s,a,o),u=new Array(s.shape.length).fill(0),c=s.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const r=ow({inputs:{x:s},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,r}))}},NS=Wx((e=>Math.sqrt(e))),TS=Ux(En,(e=>Math.sqrt(e))),ES={kernelName:En,backendName:"cpu",kernelFunc:TS},RS={kernelName:Bn,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;zx(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},AS=Yx(((e,t)=>{const n=e-t;return n*n})),_S=mv(Pn,AS),FS={kernelName:Pn,backendName:"cpu",kernelFunc:_S},DS=Wx(((e,t)=>{const{pattern:n,replaceGlobal:r,rewrite:s}=t;return e.replace(new RegExp(n,r?"g":""),s)})),OS={kernelName:Wn,backendName:"cpu",kernelFunc:Vx(Wn,DS)},LS=Ux(rr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),MS={kernelName:rr,backendName:"cpu",kernelFunc:LS};function zS(e,t,n,r){const s=xa(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const PS={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;zx(s,"stridedSlice");const{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:y,begin:x,end:v,strides:w}=Si(s.shape,a,i,o,l,u,c,h,p);let k;if(m)k=kv({inputs:{x:s},backend:n,attrs:{shape:g}});else if(b||y){d(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=di(x,v,w),t=ow({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=kv({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{const e=zS(f,n.bufferSync(s),w,x);k=n.makeTensorInfo(g,e.dtype,e.values)}return k}};class BS{constructor(e,t,n,r,s,a){this.separator=Mr(e),this.nGramWidths=t,this.leftPad=Mr(n),this.rightPad=Mr(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(s-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+c-1)*this.separator.length,n[r+i]=new Uint8Array(d);const p=n[r+i];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<l;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[h+t]),g(this.separator);if(c>0){g(e[h+c-1]);for(let e=0;e<u;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<u-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=S("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,l,a),s+=l})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,r,i,s,l,o)}}return[i,a]}}function WS(e,t,n,r,s,a,i,o){return new BS(n,r,s,a,i,o).compute(e,t)}const US={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=WS(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}};function VS(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function GS(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let l=0;l<r;++l){const r=s.length;VS(e[l],t,n,s);const u=s.length-r;o[l]=u,a+=u,i=Math.max(i,u)}const l=S("int32",2*a),u=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=s[h],++h;return[l,u,c]}const HS={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=GS(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function jS(e,t){const n=S("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Fr(e[r]).modulo(t).getLowBitsUnsigned();return n}const qS={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=jS(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},KS=Ux(qn,(e=>Math.tan(e))),XS={kernelName:qn,backendName:"cpu",kernelFunc:KS},YS=Ux(Kn,(e=>Math.tanh(e))),JS={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{tensor:r,indices:s,updates:a}=t,{sliceRank:i,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=ec(0,s,r.shape),h=n.bufferSync(s),d=n.bufferSync(a),p=n.bufferSync(r),f=ZC(h,d,r.shape,c,l,o,i,u,p,!1);return n.makeTensorInfo(r.shape,f.dtype,f.values)}};function ZS(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=xa(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const QS={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;zx(s,"tile");const i=ZS(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},e$=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function t$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);t$(e,t,Math.max(n,Math.floor(t-a*o/s+l)),Math.min(r,Math.floor(t+(s-a)*o/s+l)))}const s=e[t];let a=n,i=r;for(h(e,n,t),e$(e[r],s)>0&&h(e,n,r);a<i;){for(h(e,a,i),a++,i--;e$(e[a],s)<0;)a+=1;for(;e$(e[i],s)>0;)i-=1}0===e$(e[n],s)?h(e,n,i):(i+=1,h(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function n$(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],l=C(n,i*r),u=C("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(t$(i,r),i=i.slice(0,r)),s&&i.sort(e$);const c=t*r,h=l.subarray(c,c+r),d=u.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[xa(c,n,l),xa(c,"int32",u)]}const r$={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;zx(s,"topk");const o=n.data.get(s.dataId).values,[l,u]=n$(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},s$={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=s.shape,[f,m]=null!=u?u:[h,d],b=[c,f,m,p],y=F(s.shape),x=y[0],v=y[1],w=y[2],k=F(b),I=k[0],S=k[1],$=k[2],N=C(s.dtype,g(b));N.fill(l);const T=r.data.get(s.dataId).values,E=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<p;++s){let a;const u=t[6]*r+t[7]*n+1;if(0===u)continue;const c=(t[0]*r+t[1]*n+t[2])/u,p=(t[3]*r+t[4]*n+t[5])/u,f=a$(c,d,o),g=a$(p,h,o);switch(i){case"nearest":a=o$(T,h,d,x,v,w,e,g,f,s,l);break;case"bilinear":a=l$(T,h,d,x,v,w,e,g,f,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}N[e*I+n*S+r*$+s]=a}return r.makeTensorInfo(b,s.dtype,N)}return{dataId:r.write(N,b,s.dtype),shape:s.shape,dtype:s.dtype}}};function a$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return u(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return u(0,n,t-1)}(e,t);case"nearest":return function(e,t){return u(0,e,t-1)}(e,t);default:return e}}function i$(e,t,n,r,s,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*r+o*s+l*a+u]:c}function o$(e,t,n,r,s,a,i,o,l,u,c){return i$(e,t,n,r,s,a,i,Math.round(o),Math.round(l),u,c)}function l$(e,t,n,r,s,a,i,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1;return(p-o)*((f-l)*i$(e,t,n,r,s,a,i,h,d,u,c)+(l-d)*i$(e,t,n,r,s,a,i,h,f,u,c))+(o-h)*((f-l)*i$(e,t,n,r,s,a,i,p,d,u,c)+(l-d)*i$(e,t,n,r,s,a,i,p,f,u,c))}function u$(e,t,n,r){const s=k(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i=new Map,o=new Int32Array(n[s]),l=new Xr(a,r,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(l.get(n,t,r));n=e.join(",")}const r=i.get(n);if(null!=r)o[t]=r;else{const e=i.size;i.set(n,e),o[t]=e,u.push(t)}}const h=a.slice();h[1]=i.size;const d=new Xr(h,r);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)d.set(l.get(n,e,r),n,t,r)}));const p=n.slice();return p[s]=h[1],{outputValues:d.values,outputShape:p,indices:o}}const c$={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;zx(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=u$(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},h$={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const d=new Array(o);for(let e=0;e<d.length;e++){c[a]=e;const t=ow({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});d[e]=kv({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}},d$={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;zx(s,"unsortedSegmentSum");const o=[],l=[],u=s.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=vk({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Dr(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=ok({inputs:{a:r,b:c},backend:n}),i=fv({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=ek({inputs:{a:i,b:s},backend:n}),h=nk({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(r),l.push(a),l.push(i),l.push(u),l.push(h)}const h=bC({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},p$=[$v,Tv,Rv,_v,wv,Fv,Mv,zv,Pv,Bv,Uv,Gv,jv,Xv,Jv,tw,nw,rw,sw,Sv,aw,uw,dw,fw,gw,gv,yw,vw,uv,ww,$w,Tw,Ew,Rw,Aw,_w,Fw,Ow,Mw,zw,Pw,Bw,Ww,Uw,Gw,Hw,jw,qw,Kw,Xw,Yw,Jw,sk,Hx,ak,lk,mk,xk,wk,Ck,Ok,Mk,zk,Wk,Gk,Hk,jk,Kk,Yk,Qk,nI,qx,rI,Cw,aI,oI,uI,Xx,dI,gI,bI,vI,kI,SI,NI,RI,AI,_I,OI,zI,PI,BI,WI,UI,VI,GI,HI,KI,XI,ZI,tC,tk,rC,aC,oC,uC,dC,pC,mC,yC,xC,kC,Qx,CC,NC,RC,LC,zC,dv,Nk,BC,tv,rv,Iv,WC,UC,VC,GC,HC,jC,KC,JC,QC,nS,rS,oS,iv,uS,hS,pS,lw,eC,mS,bS,xS,wS,IS,CS,SS,$S,ES,RS,FS,OS,MS,PS,US,HS,qS,Ak,rk,XS,{kernelName:Kn,backendName:"cpu",kernelFunc:YS},JS,QS,r$,s$,Lv,c$,h$,d$,gC];for(const e of p$)mr(e);const f$={},g$={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function m$(e,t){if(!(e in f$)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if(j().getBool("IS_SAFARI")||"undefined"==typeof OffscreenCanvas||2!==e){if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete f$[e]}),!1),j().getBool("SOFTWARE_WEBGL_ENABLED")&&(g$.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",g$)||n.getContext("experimental-webgl",g$):n.getContext("webgl2",g$)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;f$[e]=n}const n=f$[e];return null==n||n.isContextLost()?(delete f$[e],m$(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),f$[e])}var b$,y$,x$;function v$(e,t){return[t,e]}function w$(e){const t=g(e);return y(Math.ceil(t/4))}function k$(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function I$(e,t){const n=e;let r,s,a,i,o,l,u,c,h,d;return 2===j().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}function C$(e,t){const n=t();return j().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function S$(e){return!!(j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function $$(e,t){return O$(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(b$||(b$={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(y$||(y$={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(x$||(x$={}));const N$=/ERROR: [0-9]+:([0-9]+):/g;function T$(e,t){const n=N$.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>x((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,r-1),u=i.slice(r-1,r),c=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${x(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function E$(e,t){if(C$(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function R$(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(C$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),C$(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),C$(e,(()=>e.enableVertexAttribArray(o))),!0)}function A$(e,t,n,r){C$(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),C$(e,(()=>e.activeTexture(e.TEXTURE0+n))),C$(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),C$(e,(()=>e.uniform1i(n,r)))}function _$(e,t,n){C$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),C$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function F$(e,t){C$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),C$(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function D$(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function O$(e,t,n){const r=C$(e,(()=>t()));if(null==r)throw new Error(n);return r}function L$(e,t=2){return g(e.slice(0,e.length-t))}function M$(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function z$(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[L$(e),...M$(e)]),t}function P$(e){return e%2==0}function B$(e,t){if(m(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],r=t[t.length-1];if(n===r)return!0;if(P$(n)&&P$(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&P$(e[0])&&P$(t[0])}let W$,U$;function V$(e,t){return null!=e.getExtension(t)}function G$(e){try{if(null!=m$(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function H$(e){const t=I$(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function j$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&d("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const q$=j();function K$(){let e,t,n,r,s,a,i,o,l,u;return 2===j().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o=j().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function X$(e,t,n="index"){const r=F(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function Y$(e,t,n="index"){const r=F(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function J$(e){const t=F(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}q$.registerFlag("HAS_WEBGL",(()=>q$.getNumber("WEBGL_VERSION")>0)),q$.registerFlag("WEBGL_VERSION",(()=>G$(2)?2:G$(1)?1:0)),q$.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),q$.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===q$.get("WEBGL_VERSION"))),q$.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),q$.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),q$.registerFlag("WEBGL_PACK",(()=>q$.getBool("HAS_WEBGL"))),q$.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_CLIP",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_REDUCE",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_LAZILY_UNPACK",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_CONV_IM2COL",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",(()=>q$.getBool("WEBGL_PACK"))),q$.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==W$){const t=m$(e);W$=t.getParameter(t.MAX_TEXTURE_SIZE)}return W$}(q$.getNumber("WEBGL_VERSION")))),q$.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==U$){const t=m$(e);U$=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,U$)}(q$.getNumber("WEBGL_VERSION")))),q$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=q$.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=m$(e);return t=V$(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:V$(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),q$.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>q$.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ks())),q$.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=m$(e);if(1===e){if(!V$(t,"OES_texture_float"))return!1}else if(!V$(t,"EXT_color_buffer_float"))return!1;return H$(t)}(q$.getNumber("WEBGL_VERSION")))),q$.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!q$.getBool("WEBGL_FORCE_F16_TEXTURES")&&q$.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),q$.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=m$(e);if(1!==e){if(V$(t,"EXT_color_buffer_float"))return H$(t);const e="EXT_color_buffer_half_float";if(V$(t,e)){const n=t.getExtension(e);return function(e,t){const n=I$(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!V$(t,"OES_texture_float")&&!!V$(t,"WEBGL_color_buffer_float")&&H$(t)}(q$.getNumber("WEBGL_VERSION")))),q$.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=q$.getNumber("WEBGL_VERSION"))&&null!=m$(e).fenceSync;var e})),q$.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>q$.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),q$.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),q$.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ks()?1:-1),(e=>{if("number"!=typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),q$.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),q$.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),q$.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),q$.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),q$.registerFlag("WEBGL_EXP_CONV",(()=>!1)),q$.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>q$.getBool("IS_TEST"))),q$.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),q$.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),q$.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),q$.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const Z$="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Q$}=r;function eN(e,t,n){const r=[];if(e.forEach((e=>{const t=g(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=cN(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?nN(e,r):tN(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Q$(e.shapeInfo.logicalShape,t.logicalShape),l=uN(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=1===g(e.shapeInfo.logicalShape),m=1===g(t.logicalShape);if(1!==a||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${d});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&m(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=uN(l),c=Q$(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=K$(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${rN}\n    ${sN}\n    ${aN}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(m(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return m(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Y$(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=X$(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Y$(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=X$(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=X$(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=X$(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=iN),[h,l,c,s,u,a,n.userCode].join("\n")}function tN(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=oN(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${lN(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=oN(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&m(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=I(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${tN(hN(e,l),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${dN(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${lN(e)}\n      }\n    `;const u=a[0],c=a[1],h=oN(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===u?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=I(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${tN(hN(e,u),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${dN(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${lN(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===i&&null==p)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=oN(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=I(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${tN(hN(e,l),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${dN(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${lN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,m=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=oN(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=I(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${tN(hN(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${dN(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${lN(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${oN(n)};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=I(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${tN(hN(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${dN(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${lN(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${oN(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function nN(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${K$().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=K$();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=K$();if(null!=a&&m(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${nN(hN(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${dN(a,r)});\n        }\n      `}const o=K$();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=K$();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let d=h*Math.ceil(a[i-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,d*=a[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const rN="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sN="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",aN="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iN="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function oN(e){return`offset${e}`}function lN(e){const t=e.name,n=g(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function uN(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function cN(e,t,n){const{newShape:r,keptDims:s}=I(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,l=!e&&a>1&&!m(t,n)&&r.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:s}}function hN(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function dN(e,t){return t.map((t=>e[t])).join(", ")}function pN(e,t,n){const r=[],s=[];let a,i,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===j().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const s of t.variableNames){const a={name:s,uniform:e.getUniformLocation(n,s,c),offset:e.getUniformLocation(n,`offset${s}`,c)};t.enableShapeUniforms&&(a.shape=e.getUniformLocation(n,`${s}Shape`,c),a.texShape=e.getUniformLocation(n,`${s}TexShape`,c)),r.push(a)}if(t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),i=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const r of t.customUniforms)s.push(e.getUniformLocation(n,r.name,c));return{variablesLocations:r,customUniformLocations:s,infLoc:l,nanLoc:u,outShapeLocation:a,outShapeStridesLocation:o,outTexShapeLocation:i}}function fN(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!m(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!m(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function gN(e){return j().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class mN{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=b$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=K$();this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Y$(["r","c","d"],e):X$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class bN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=b$.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=K$();this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Y$(["r","c","d"],e):X$(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class yN{constructor(e){this.variableNames=["A"],this.outTexUsage=y$.DOWNLOAD;const t=K$();this.outputShape=e,this.userCode=`\n      ${Z$}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class xN{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=y$.DOWNLOAD;const t=K$();this.outputShape=e,this.userCode=`\n      ${Z$}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}const vN={R:0,G:1,B:2,A:3};class wN{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=K$();this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)");let a="";for(let e=0;e<n.length;e++){const t=n[e];a+=`\n          if(offset == ${e}) {\n            result = values[${vN[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":J$(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${r.texture2D}(A, uv);\n          ${a}\n        }\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class kN{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=K$();this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":J$(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function IN(e,t,n,r,s,a){!function(e,t){const n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return O$(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return C$(e,(()=>e.bindTexture(o,i))),C$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),C$(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),C$(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),C$(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===j().getNumber("WEBGL_VERSION")?C$(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):C$(e,(()=>e.texStorage2D(o,1,r,t,n))),C$(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function CN(e){return e.internalFormatFloat}function SN(e){return e.internalFormatHalfFloat}function $N(e){return e.downloadTextureFormat}function NN(e){return e.internalFormatPackedFloat}function TN(e){return e.internalFormatPackedHalfFloat}class EN{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=j().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,function(e,t){f$[e]=t}(t,e)):this.gl=m$(t),e=this.gl,2===j().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>C$(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>C$(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>C$(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>C$(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>C$(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>C$(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>C$(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>C$(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===j().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=$$(this.gl,e),V$(this.gl,t))this.textureHalfFloatExtension=$$(this.gl,t);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),V$(this.gl,r))this.colorBufferHalfFloatExtension=$$(this.gl,r);else if(j().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",V$(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!V$(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=O$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return C$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),C$(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=O$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return C$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),C$(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return O$(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=I$(this.gl,this.textureHalfFloatExtension)}get debug(){return j().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;C$(e,(()=>e.finish())),C$(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),C$(e,(()=>e.deleteFramebuffer(this.framebuffer))),C$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),C$(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),C$(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=v$(t,n);return IN(e,s,a,CN(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=v$(t,n);return IN(e,s,a,SN(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=v$(t,n);return IN(e,s,a,$N(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){C$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===j().getNumber("WEBGL_VERSION")?C$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):C$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===j().getNumber("WEBGL_VERSION")?C$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):C$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),C$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;C$(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===j().getNumber("WEBGL_VERSION")?C$(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):C$(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),C$(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=k$(t,n);return IN(e,s,a,TN(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=k$(t,n);return IN(e,s,a,NN(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(F$(this.gl,this.framebuffer),this.outputTexture=null),C$(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=v$(t,n),i=new Uint8Array(t*n*4);return C$(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i){const o=e,l=new Float32Array(function(e,t){const[n,r]=k$(e,t);return n*r*4}(a,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,l),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();C$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const s=16*t*n;return C$(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),C$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),C$(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(j().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return C$(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=K$();return function(e,t){const n=O$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(C$(e,(()=>e.shaderSource(n,t))),C$(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return O$(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);C$(t,(()=>t.attachShader(n,this.vertexShader))),C$(t,(()=>t.attachShader(n,e))),function(e,t){if(C$(e,(()=>e.linkProgram(t))),!j().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n);const r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&E$(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;C$(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),function(e,t,n){C$(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),R$(e,t,"clipSpacePos",n,3,20,0)&&R$(e,t,"uv",n,2,20,12)}(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(C$(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&E$(this.gl,this.program),C$(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return O$(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),C$(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),A$(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=k$(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&E$(this.gl,this.program),D$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}C$(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),C$(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$$(this.gl,2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v((()=>this.disposed||this.isQueryAvailable(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in j().platform&&(n=j().platform.setTimeoutCustom.bind(j().platform)),v((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),_$(this.gl,e,this.framebuffer),this.debug&&D$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(_$(this.gl,this.outputTexture,this.framebuffer),this.debug&&D$(this.gl)):F$(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;_$(r,e,this.framebuffer),this.debug&&D$(r),this.outputTexture=e,C$(r,(()=>r.viewport(0,0,t,n))),C$(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),C$(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:RN,XI:AN,Nk:_N,f6:FN,ct:DN,YG:ON,hH:LN,z3:MN,sG:zN,uM:PN,vS:BN,qB:WN,GG:UN,rq:VN,lg:GN,WR:HN,cu:jN,GE:qN,px:KN,jC:XN,He:YN,hE:JN,BF:ZN,Dk:QN,cl:eT,_B:tT,ub:nT,_f:rT,Ku:sT,qy:aT,Zy:iT,bu:oT,zv:lT,dH:uT,HS:cT,yH:hT,l3:dT,z9:pT,x6:fT,_m:gT,eW:mT,GK:bT,SP:yT,yr:xT,dl:vT,Dw:wT,xT:kT,_X:IT,wz:CT}=s;function ST(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function $T(e,t){return 1===t?[e]:ST(e,t)}class NT{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=gN(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=$T("rc",this.rank),t=uN(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class TT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):X$(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":J$(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class ET{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const r=AT(t,n),s=_T(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=RT(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].pop();return this.usedTextures[s].push(e),e}let i;return r===x$.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===x$.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===x$.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===x$.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===x$.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=AT(n,r),a=_T(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=RT(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=j().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function RT(e,t,n,r,s){const a=function(e,t){switch(e){case x$.PACKED_2X2_FLOAT32:return NN(t);case x$.PACKED_2X2_FLOAT16:return TN(t);case x$.UNPACKED_FLOAT32:return CN(t);case x$.UNPACKED_FLOAT16:return SN(t);case x$.PACKED_4X1_UNSIGNED_BYTE:return $N(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=k$(e[0],e[1]);i=t*n}else{const[t,n]=v$(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function AT(e,t){if(e===y$.UPLOAD)return x$.PACKED_2X2_FLOAT32;if(e===y$.RENDER||null==e)return function(e){return j().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?x$.PACKED_2X2_FLOAT32:x$.UNPACKED_FLOAT32:e?x$.PACKED_2X2_FLOAT16:x$.UNPACKED_FLOAT16}(t);if(e===y$.DOWNLOAD||e===y$.PIXELS)return x$.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _T(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class FT{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const DT="if (isnan(x)) return x;",OT="return abs(x);",LT=DT+"\n  return (x < 0.0) ? 0.0 : x;\n",MT=DT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",zT="return x;";class PT{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class BT{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length);const t=e.length,n=$T("rc",t),r=uN(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const WT=Hc,UT={},VT=j().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class GT extends i{nextDataId(){return GT.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!j().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof EN)t=e;else{const n=m$(j().getNumber("WEBGL_VERSION"),e);t=new EN(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=m$(j().getNumber("WEBGL_VERSION"));t=new EN(e),this.binaryCache=((n=j().getNumber("WEBGL_VERSION"))in UT||(UT[n]={}),UT[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new ET(this.gpgpu),this.numMBBeforeWarning=null==j().global.screen?1024:j().global.screen.height*j().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new a(this,Os())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,s,a){const i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,s]},o.texShape=[r,s];const l=z$(t),u=new wN(l,!1,a),c=this.runWebGLProgram(u,[i],n,[[r,s]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),c.dataId}write(e,t,n){if((j().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||j().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:y$.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(j().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:y$.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new PT(i,zT):new FT(i,zT);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Lr()),c="complex64"===r?uc(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Lr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new PT(r,zT):new FT(r,zT);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(j().getBool("DEBUG")&&!j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===j().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&j().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...w$(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=uc(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=g(r);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;C$(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Os().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new PT(s,zT):new FT(s,zT);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Os().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>zr(e)));return xa(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return xa(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!S$(n)){if(j().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=g(t);if(j().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...w$(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=j().getBool("WEBGL_PACK")&&!0===r,i=a?z$(t):t,o=a?new xN(i):new yN(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=Br(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=Br(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=function(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Lr(),endMs:null}}endTimer(e){return j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Lr(),e)}async getQueryTime(e){if(j().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=VT){return j().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&g(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ur("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return WT(e.shape,t)}packedUnaryOp(e,t,n){const r=new PT(e.shape,t),s=this.compileAndRun(r,[e],n);return Os().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=uT(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(j().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,OT,e.dtype);const t=new FT(e.shape,OT),n=this.compileAndRun(t,[e]);return Os().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&T(n[0])){const s=n.map((e=>Mr(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return Os().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new BT(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new NT(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[L$(e.shape),...M$(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[L$(t),...M$(t)],a=new TT(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&d(g(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=z$(s);let o;o=r?new bN(i):new mN(i);const l=[null!=t?t:w$(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===b$.DENSE){const t=null!=a?a:w$(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===g(i.shape))return o.values=C(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&g(t.shape)<=j().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!B$(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),l.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=cN(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=F(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&m(t.shape,a),f=1===g(t.shape),b=Ga(t.shape,n.shape),y=!e.packedInputs&&d===n.shape.length&&m(a,n.texData.texShape),x=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${d}_${y}_${i?l:""}_${o.length}_${f}_${b}_${p}_${u}_${c}_${h}_${x}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${j().getNumber("WEBGL_VERSION")}`,a}(e,u,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=eN(s,i,t),l=function(e,t){const n=O$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(C$(e,(()=>e.shaderSource(n,t))),C$(e,(()=>e.compileShader(n))),j().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw T$(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);return j().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:a,outShapeInfo:i},pN(e,t,u)))}(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),j().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(fN(t.inShapeInfos,n),fN([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===j().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let r=0;r<n.length;++r){const s=n[r],{uniform:a,offset:i,shape:o,texShape:l}=t.variablesLocations[r];if(o){const{uniformShape:n}=cN(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(o,new Int32Array(n));break;case 2:e.gl.uniform2iv(o,new Int32Array(n));break;case 3:e.gl.uniform3iv(o,new Int32Array(n));break;case 4:e.gl.uniform4iv(o,new Int32Array(n))}}if(l&&e.gl.uniform2i(l,s.texData.texShape[0],s.texData.texShape[1]),null!=a)if(s.isUniform)if(g(s.shape)<2)e.gl.uniform1f(a,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,a,r)}const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=F(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s)for(let n=0;n<t.program.customUniforms.length;++n){const r=t.program.customUniforms[n],a=t.customUniformLocations[n],i=s[n];if("float"===r.type)e.gl.uniform1fv(a,i);else if("vec2"===r.type)e.gl.uniform2fv(a,i);else if("vec3"===r.type)e.gl.uniform3fv(a,i);else if("vec4"===r.type)e.gl.uniform4fv(a,i);else if("int"===r.type)e.gl.uniform1iv(a,i);else if("ivec2"===r.type)e.gl.uniform2iv(a,i);else if("ivec3"===r.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==r.type)throw Error(`uniform type ${r.type} is not supported yet.`);e.gl.uniform4iv(a,i)}}e.executeProgram()}(this.gpgpu,d,u,c,r),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const b=j().getNumber("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=Lr();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!j().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(j().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ms((()=>{if(!j().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=j().getBool("DEBUG");j().set("DEBUG",!1);const t=this.abs(Ra(1e-8)).dataSync()[0];if(j().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Lr());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=j().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=j().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&j().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?c(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=I(e);e=t.newShape}let s=g(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=L$(e);let n=2,r=2;e.length&&([n,r]=M$(e)),s=t*(n/2)*(r/2),a=y(s).map((e=>2*e))}else a=y(s);return a}(n,o),t.texShape=h),null!=s){const e=z$(n);let a,i=h[1],c=h[0];const d=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&d||([i,c]=k$(h[0],h[1])),a=o?new kN(e,d):new wN(e,d);const p=d?[c,i]:h,f=this.makeTensorInfo(p,r),g=this.texData.get(f.dataId);g.usage=d?y$.PIXELS:y$.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,c,s);const m=[[c,i]],b=!0,y=this.runWebGLProgram(a,[f],r,m,b),x=this.texData.get(y.dataId);t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,j().get("ENGINE_COMPILE_ONLY")?this.disposeData(y.dataId):(t.texture=x.texture,t.values=null,this.texData.delete(y.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=Lr()-u)}else{const e=this.acquireTexture(h,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*N(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Ou(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw T$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:s,outShapeLocation:a,outShapeStridesLocation:i,outTexShapeLocation:o}=pN(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=s,e.outShapeLocation=a,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:r,height:s,width:a,channels:i}=e,o=Os().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(r,t,n,s,a,i);return Os().makeTensorFromDataId(l,t,n,o)}}GT.nextDataId=0,Is()&&Bs("webgl",(()=>new GT),2);const HT="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class jT{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=ja(t,n),this.enableShapeUniforms=gN(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const qT="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class KT{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=ja(t,n);const s=this.outputShape.length;this.enableShapeUniforms=gN(s);let a="";if(r)if(0===s||1===g(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${uN(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=$T("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function XT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const YT={kernelName:dt,backendName:"webgl",kernelFunc:XT};function JT(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=XT({inputs:{x:r},backend:n}),l=XT({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const ZT={kernelName:Ie,backendName:"webgl",kernelFunc:JT},QT="return (a < 0.) ? b * a : a;",eE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",tE={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Dr(a,"float32")),o=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KT(eE,s.shape,i.shape):new jT(QT,s.shape,i.shape),l=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},nE="return (a < 0.) ? b * a : a;",rE="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",sE={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KT(rE,r.shape,s.shape):new jT(nE,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}},aE="if (isnan(x)) return x;";function iE({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,l=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new PT(i.shape,t):new FT(i.shape,e),o.runWebGLProgram(u,[i],l)}}function oE({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(r&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:u.shape},i=new jT(e,l.shape,u.shape);return c.runWebGLProgram(i,[s,a],ls(n.dtype,r.dtype))})),a=JT({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||ls(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=s){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Vc(e):e,r="string"===l.dtype?Vc(t):t,[a,i]=s(l.shape,u.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let d;return d=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new KT(t,l.shape,u.shape,n):new jT(e,l.shape,u.shape),c.runWebGLProgram(d,[l,u],h)}}function lE(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":LT;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":MT;if("prelu"===e)return t?rE:nE;if("leakyrelu"===e)return t?eE:QT;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class uE{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=gN(this.outputShape.length);const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${y};\n        int batchB = ${x};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class cE{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=ja(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const hE="return a * b;";function dE(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=ls(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new cE("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new cE("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=JT({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=ZN(r.shape,s.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KT(hE,r.shape,s.shape):new jT(hE,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const pE={kernelName:Ut,backendName:"webgl",kernelFunc:dE};function fE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=g(s.shape),l=w(a,o),u=g(l);d(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||B$(s.shape,l)||null!==c.texture&&B$(c.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[L$(e.shape),...M$(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[L$(t),...M$(t)],i=new TT(a,r),o=[r],l=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(s,l,i)}const gE={kernelName:un,backendName:"webgl",kernelFunc:fE};class mE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${b(e)?e.toPrecision(2):e}, ones);`}let u="";s%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class bE{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function yE(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Gu(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:l,outSize:u}=s[i];let c,h;c="mean"===n?0===i?new mE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new mE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new bE({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class xE{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=uN(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class vE{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=uN(this.rank),s=ST("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function wE(e,t,n){const r=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vE(e.shape,t):new xE(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function kE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=k(s,e.shape);let o=i;const l=Mo(o,a),u=null!=l;let c=e;u&&(c=wE(e,l,r),o=Po(o.length,a)),Lo("sum",o,a);const[h,d]=Do(c.shape,o);let p=h;n&&(p=Oo(h,i));const f=g(d),m=fE({inputs:{x:c},attrs:{shape:[g(e.shape)/f,f]},backend:r}),b=yE(m,us(e.dtype),"sum",r),y=fE({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),u&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const IE={kernelName:Rn,backendName:"webgl",kernelFunc:kE};function CE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=IT(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=wE(s,a,i);return u}const SE={kernelName:Zn,backendName:"webgl",kernelFunc:CE};function $E({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=r?t.shape[c-1]:t.shape[c-2],f=n?e.shape[u-1]:e.shape[u-2],m=r?t.shape[c-2]:t.shape[c-1],b=e.shape.slice(0,-2),y=t.shape.slice(0,-2),x=g(b),v=g(y),w=ja(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,m]);d(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[x,h,f]:[x,f,h],I=r?[v,m,p]:[v,p,m],C=fE({inputs:{x:e},backend:s,attrs:{shape:k}}),S=fE({inputs:{x:t},backend:s,attrs:{shape:I}}),$=[C,S],N=Math.max(x,v),T=n?C.shape[1]:C.shape[2],E=null!=a,R=null!=i,A="leakyrelu"===l,_=null!=l?lE(l,!0):null;let F;if((1===f||1===m)&&T>1e3&&!1===(E||R||A||null!=_)){let e=C,t=S;n&&(e=CE({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=CE({inputs:{x:S},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const a=1===m;let i=e;1!==m&&(i=fE({inputs:{x:e},backend:s,attrs:{shape:[N,T,1]}}),$.push(i));const o=1===m?2:1;let l=t;a&&(l=fE({inputs:{x:t},backend:s,attrs:{shape:[N,1,T]}}),$.push(l));const u=dE({inputs:{a:i,b:l},backend:s});F=kE({inputs:{x:u},backend:s,attrs:{axis:o,keepDims:!0}}),$.push(u)}else{const l=ls(e.dtype,t.dtype),u=new uE(k,I,[N,f,m],n,r,E,_,R,A),c=[C,S];if(null!=a&&c.push(a),R&&c.push(i),A){const e=s.makeTensorInfo([],"float32",Dr(o,"float32"));c.push(e),$.push(e)}F=s.runWebGLProgram(u,c,l)}const D=fE({inputs:{x:F},backend:s,attrs:{shape:w}});$.push(F);for(const e of $)s.disposeIntermediateTensorInfo(e);return D}const NE={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return $E({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},TE="return abs(x);",EE={kernelName:J,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=uT(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new PT(r.shape,TE):new FT(r.shape,TE),n.runWebGLProgram(s,[r],r.dtype)}},RE=iE({opSnippet:DT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),AE={kernelName:Z,backendName:"webgl",kernelFunc:RE},_E=iE({opSnippet:DT+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),FE={kernelName:Q,backendName:"webgl",kernelFunc:_E},DE="return a + b;",OE=oE({opSnippet:DE,packedOpSnippet:DE,supportsComplex:!0,cpuKernelImpl:RN}),LE={kernelName:ee,backendName:"webgl",kernelFunc:OE};class ME{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class zE{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const PE={kernelName:te,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return XT({inputs:{x:s[0]},backend:r});if(s.length>j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>ls(e,t))),i=s.map((e=>e.shape)),o=j().getBool("WEBGL_PACK")?new zE(s[0].shape,i):new ME(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},BE={kernelName:ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=k(a,s.shape);let u=l;const c=Mo(u,o);let h=s;null!=c&&(h=CE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Lo("all",u,o);const[d,p]=Do(h.shape,u),f=fE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=yE(f,f.dtype,"all",n);let b;return b=fE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},WE={kernelName:re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=k(a,s.shape);let u=l;const c=Mo(u,o);let h=s;null!=c&&(h=CE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,o)),Lo("any",u,o);const[d,p]=Do(h.shape,u),f=fE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=yE(f,f.dtype,"any",n);let b;return b=fE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}};class UE{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class VE{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,d(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=uN(o),u=$T("coords",o);let c,h;if(1===a){h=o+1;const e=uN(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],g=p.map((e=>"int "+e)),m=$T("sourceLocR",h-1).concat("inIdx.r"),b=$T("sourceLocG",h-1).concat("inIdx.g"),y=$T("sourceLocB",h-1).concat("inIdx.b"),x=$T("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function GE(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Gu(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new UE(o,n,null==r),u=[t];null!=r&&u.push(r);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=GE(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function HE(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Gu(s[s.length-1]),i=new VE(s,a,n,null==r),o=null==r?[t]:[t,r],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const r=HE(e,t,n,l);return e.disposeIntermediateTensorInfo(l),r}return l}function jE(e,t,n,r){const s=[n];if(Lo("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!j().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=Do(i.shape,s),u=g(l),c=fE({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=GE(e,c,r);n.push(h);const d=fE({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return HE(e,t,r)}const qE={kernelName:se,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=k(a,s.shape);const o=Mo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=CE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Lo("argMax",[i[0]],l.shape.length);const c=jE(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},KE={kernelName:ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=k(a,s.shape);const o=Mo(i,s.shape.length);let l=s;const u=[];null!=o&&(l=CE({inputs:{x:s},backend:n,attrs:{perm:o}}),u.push(l),i=Po(i.length,l.shape.length)),Lo("argMin",[i[0]],l.shape.length);const c=jE(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},XE=iE({opSnippet:DT+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),YE={kernelName:ie,backendName:"webgl",kernelFunc:XE},JE=iE({opSnippet:DT+"return log(x + sqrt(x * x + 1.0));"}),ZE={kernelName:oe,backendName:"webgl",kernelFunc:JE},QE=iE({opSnippet:DT+"\n  return atan(x);\n"}),eR={kernelName:le,backendName:"webgl",kernelFunc:QE},tR=oE({opSnippet:HT+"\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qT+"\n  return result;\n"}),nR={kernelName:ce,backendName:"webgl",kernelFunc:tR},rR=iE({opSnippet:DT+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),sR={kernelName:ue,backendName:"webgl",kernelFunc:rR};class aR{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const x=4*Math.floor(a/4),v=a%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class iR{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / max(count, 1.0)");const w=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n        }\n        setOutput(${v});\n      }\n    `}}const oR={kernelName:he,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;j$(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;d(Wi(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ai(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&m(u.inShape,u.outShape))return XT({inputs:{x:s},backend:n});const c=new aR(u,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},lR={kernelName:pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=r,c=_i(s.shape,a,i,[1,1,1],o,l,u),h=new iR(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class uR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cR{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const hR={kernelName:fe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=_i(i.shape,o,l,[1,1,1],u,c),d=new cR(h);return n.runWebGLProgram(d,[s],i.dtype)}},dR={kernelName:de,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;j$([s,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=r,c=Ai(i.shape,o,l,1,u),h=new uR(c);return n.runWebGLProgram(h,[s],i.dtype)}},pR={kernelName:ge,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return $E({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class fR{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="0.0";null!=r&&(ja(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(ja(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class gR{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],ja(e,t),ja(e,n);let i="vec4(0.0)";null!=r&&(ja(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(ja(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const mR={kernelName:ot,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;d(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),d(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),d(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[r,s,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=j().getBool("WEBGL_PACK_NORMALIZATION")?new gR(r.shape,s.shape,a.shape,c,h,l):new fR(r.shape,s.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class bR{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=uN(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return yR.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${yR[t]} = start[${t}] + coords.${yR[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const yR=["x","y","z","w","u","v"];class xR{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=uN(this.rank),n=$T("coords",this.rank),r=$T("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function vR(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,l]=Ci(s,a,i);if(ci(s,o,l),0===g(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=cT(e.values,o,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:u}=n.texData.get(s.dataId),c=ki(s.shape,o,l);if(u||!c){const e=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xR(l):new bR(l),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Ii(t,F(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,o,l,n)}const wR={kernelName:In,backendName:"webgl",kernelFunc:vR},kR={kernelName:me,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;d(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=ju(s.shape,a,o),u=qu(l.length,a.length),c=Ku(s.shape,a,o),h=Xu(i,a.length),p=Yu(c,i,a.length),f=[],g=fE({inputs:{x:s},backend:n,attrs:{shape:l}}),m=CE({inputs:{x:g},backend:n,attrs:{perm:u}}),b=fE({inputs:{x:m},backend:n,attrs:{shape:c}}),y=vR({inputs:{x:b},backend:n,attrs:{begin:h,size:p}});return f.push(g),f.push(m),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},IR={kernelName:be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=AN(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},CR={kernelName:ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=j().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,s])||1===i){const e=n.texData.get(r.dataId).values,t=n.texData.get(s.dataId).values,[a,i]=FN(r.shape,s.shape,e,t,r.dtype),o=n.makeTensorInfo(i,r.dtype);return n.texData.get(o.dataId).values=a,o}let o;return o=a?new KT("\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",r.shape,s.shape,!1):new jT("\n  return float(int(a.r) & int(b.r));\n",r.shape,s.shape),n.runWebGLProgram(o,[r,s],r.dtype)}},SR={kernelName:xe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=ja(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},$R=oE({opSnippet:"return float(a != b);",cpuKernelImpl:eT,dtype:"bool"}),NR={kernelName:Gt,backendName:"webgl",kernelFunc:$R};function TR(e){const{inputs:t,backend:n}=e,{input:r}=t;return XT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const ER={kernelName:an,backendName:"webgl",kernelFunc:TR},RR={kernelName:ve,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return XT({inputs:{x:a},backend:r});const t=Zo(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=JT({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=TR({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!$(a.dtype,i)){const e=XT({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,s]=DN(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,s)}if("int32"===i)return function(e,t){const n=new FT(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",C("bool",1)),t=$R({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},AR="return ceil(x);",_R=iE({opSnippet:AR,packedOpSnippet:AR,cpuKernelImpl:ON}),FR={kernelName:we,backendName:"webgl",kernelFunc:_R};class DR{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class OR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const LR={kernelName:ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=j().getBool("WEBGL_PACK_CLIP")?new OR(s.shape):new DR(s.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,l)}};class MR{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function zR(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const PR={kernelName:Ce,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new MR(r.shape),i=[zR(r,s.complexTensorInfos.real),zR(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class BR{constructor(e){this.outputShape=[],this.outputShape=Mu(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class WR{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Mu(e,t);const n=this.outputShape,r=n.length,s=uN(r),a=$T("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${UR(i,l,t)}),\n            vec2(${UR(u,l,t)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${UR(i,l,p)}),\n          vec2(${UR(u,l,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function UR(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function VR(e){const{inputs:t,backend:n}=e,{input:r}=t;return XT({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const GR={kernelName:ft,backendName:"webgl",kernelFunc:VR};function HR(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>TR({inputs:{input:e},backend:n}))),s=e.map((e=>VR({inputs:{input:e},backend:n}))),a=HR(r,t,n),i=HR(s,t,n),o=JT({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=g(e.shape.slice(t));return fE({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Mu(s.map((e=>e.shape)),1),o=1===s[0].shape[0],l=LN(a,i,r,o),u=Mu(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const a=e.filter((e=>g(e.shape)>0)),i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&a[0].shape.length>1;if(1===a.length){const t=i?new FT(e[0].shape,zT):new PT(e[0].shape,zT);return n.runWebGLProgram(t,e,r)}const o=j().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(a.length>o){const e=[];for(let r=0;r<a.length;r+=o){const s=a.slice(r,r+o);e.push(HR(s,t,n))}const r=HR(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return r}if(i){const e=new WR(a.map((e=>e.shape)),t);return n.runWebGLProgram(e,a,r)}const{tensors2D:l,outShape:u}=function(e,t,n){const r=Mu(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>fE({inputs:{x:e},attrs:{shape:[-1,g(e.shape.slice(t))]},backend:n}))),outShape:r}}(a,t,n),c=new BR(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,r);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=fE({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function jR(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=k(s,t[0].shape)[0];Lu(t.map((e=>e.shape)),a);const i=Mu(t.map((e=>e.shape)),a);if(0===g(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>g(e.shape)>0));return 1===o.length?XT({inputs:{x:o[0]},backend:n}):HR(o,a,n)}const qR={kernelName:Se,backendName:"webgl",kernelFunc:jR};class KR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class XR{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YR{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gN(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,h=u;let d="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)d+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;d+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)d+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;d+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(h+1)/2;t++){const n=2*t;if(d+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,d+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):d+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){const e=a%2==0?c(o):o;o%2==0&&a%2==1||o%2!=0&&a%2!=1?(d+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,d+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):d+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(a%2==1?(d+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(d+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(d+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(d+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(d+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(d+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}d+="\n     }\n   ",d+="\n     }\n   ",d+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${d}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class JR{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=gN(this.outputShape.length);const{dataFormat:n}=t,r=K$(),s="channelsLast"===n,a=s?1:2,i=s?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${r.output} = result;\n      }\n    `}}function ZR(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function QR({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=r.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat,g=!1;let b;const y=[];if(null!=a){const e=ZR(a.shape,f);null!=e&&(a=fE({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if(null!=s){const e=ZR(s.shape,f);null!=e&&(s=fE({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&f&&null!=u.texture&&l[2]%2!=0&&m(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,d(B$(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const f=fE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(f);const m=$E({a:h,b:f,backend:r,transposeA:!1,transposeB:g,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),x=r.texData.get(m.dataId);d(x.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,x.shape=n.outShape,b=XT({inputs:{x:m},backend:r}),b.shape=n.outShape,y.push(m)}else{const l=n.outHeight*n.outWidth,u=fE({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=fE({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=$E({a:f?u:c,b:f?c:u,transposeA:!f,transposeB:g,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});b=fE({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),y.push(u),y.push(c),y.push(h)}for(const e of y)r.disposeIntermediateTensorInfo(e);return b}function eA({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,m=l*u*c,b=d*h,y=[n.batchSize,m,b],x=[];if(null!=a){const e=ZR(a.shape,f);null!=e&&(a=fE({inputs:{x:a},backend:r,attrs:{shape:e}}),x.push(a))}if(null!=s){const e=ZR(s.shape,f);null!=e&&(s=fE({inputs:{x:s},backend:r,attrs:{shape:e}}),x.push(s))}const v=fE({inputs:{x:t},backend:r,attrs:{shape:[1,m,g(t.shape)/m]}});x.push(v);const w=new JR(y,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(w,[e],"float32",k),C=fE({inputs:{x:I},backend:r,attrs:{shape:y}});x.push(I),x.push(C);const S=null!=s,$=null!=a,N="leakyrelu"===o,T=o?lE(o,!0):null,E=new uE(f?C.shape:v.shape,f?v.shape:C.shape,f?[n.batchSize,b,n.outChannels]:[n.batchSize,n.outChannels,b],!0,!1,S,T,$,N),R=f?[C,v]:[v,C];if(s&&R.push(s),$&&R.push(a),N){const e=r.makeTensorInfo([],"float32",Dr(i,"float32"));R.push(e),x.push(e)}const A=r.runWebGLProgram(E,R,"float32"),_=fE({inputs:{x:A},backend:r,attrs:{shape:n.outShape}});x.push(A);for(const e of x)r.disposeIntermediateTensorInfo(e);return _}const tA={kernelName:$e,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=r,h=Vi(l),d=Fi(s.shape,a.shape,i,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&j().getBool("WEBGL_EXP_CONV")){const e=new YR(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[s,a],"float32",t)}else if(j().getBool("WEBGL_CONV_IM2COL"))p=eA({x:s,filter:a,convInfo:d,backend:n});else{const e=new KR(d);p=n.runWebGLProgram(e,[s,a],"float32")}else p=QR({x:s,filter:a,convInfo:d,backend:n});const f=fE({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class nA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${a?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class sA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class aA{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const iA={kernelName:Ne,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=r,h=Vi(l),d=Fi(s.shape,c,i,1,o,u,!1,h),p=new nA(d);return n.runWebGLProgram(p,[s,a],"float32")}};class oA{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=gN(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,s=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${r}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}const lA={kernelName:Te,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=Vi(u),d=Fi(i,a.shape,o,1,l,c,!1,h);if(j().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new oA(d);return n.runWebGLProgram(t,[s,a],"float32",e)}{const e=new rA(d);return n.runWebGLProgram(e,[s,a],"float32")}}},uA={kernelName:Ee,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Di(s.shape,a.shape,i,l,o),c=new XR(u);return n.runWebGLProgram(c,[s,a],"float32")}},cA={kernelName:Re,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:l}=r,u=Di(s.shape,l,i,1,o),c=new sA(u);return n.runWebGLProgram(c,[s,a],"float32")}},hA={kernelName:Ae,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:l}=r,u=Di(l,a.shape,o,1,i),c=new aA(u);return n.runWebGLProgram(c,[s,a],"float32")}},dA=iE({opSnippet:aE+"\n  return cos(x);\n",packedOpSnippet:`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${qT}\n  return result;\n`}),pA={kernelName:_e,backendName:"webgl",kernelFunc:dA},fA=iE({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),gA={kernelName:Fe,backendName:"webgl",kernelFunc:fA};class mA{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const bA={kernelName:Le,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new mA(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};var yA;!function(e){e.Prod="*",e.Sum="+"}(yA||(yA={}));class xA{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const s=this.outputShape.length,a=this.op===yA.Prod?"1.0":"0.0",i=n?a:`getX(${vA(s,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=r?"end != "+(o-1):"end != 0",u=r?"end + 1":"end - 1"):(l=r?`end + pow2 < ${o}`:"end >= pow2",u=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${uN(s)} coords = getOutputCoords();\n        int end = ${wA(s,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${wA(s,"coords",this.op)} = idx;\n          val ${this.op}= getX(${vA(s,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function vA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function wA(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function kA(e,t,n,r,s,a){const i=t.shape.length,o=Mo([r],i);let l=t;null!=o&&(l=CE({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Po(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const c=l.shape[u];let h=XT({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(c))-1;t++){const r=new xA(e,l.shape,!1,a),s=[[t]],i=h;h=n.runWebGLProgram(r,[h],h.dtype,s),n.disposeIntermediateTensorInfo(i)}if(s){const t=new xA(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=o){const e=CE({inputs:{x:h},backend:n,attrs:{perm:zo(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const IA={kernelName:De,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kA(yA.Prod,s,n,a,i,o)}},CA={kernelName:Oe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;return kA(yA.Sum,s,n,a,i,o)}},SA={kernelName:Me,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=AN(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=_N(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class $A{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const NA={kernelName:ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],l=("NHWC"===i?s.shape[1]:s.shape[2])*a,u=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new $A("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class TA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gN(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class EA{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=gN(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,h=e.filterWidth,d=h;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<h;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<h;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<h)){const e=i%2==0?c(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<h&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<h&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<h&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<h&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<h&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const RA={kernelName:Pe,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=r;let c=l;null==c&&(c=[1,1]),d(Wi(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Fi(s.shape,a.shape,i,c,o,u,!0);let p;p=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new EA(h):new TA(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",f)}};class AA{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class _A{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const FA={kernelName:Be,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=r,h=Fi(s.shape,c,i,o,l,u,!0),d=new AA(h);return n.runWebGLProgram(d,[s,a],"float32")}},DA={kernelName:We,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=r,h=Fi(c,a.shape,i,o,l,u,!0),d=new _A(h);return n.runWebGLProgram(d,[s,a],"float32")}};class OA{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const LA={kernelName:Ue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=g(r.shape),i=fE({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new OA(a),l=n.runWebGLProgram(o,[i],i.dtype),u=fE({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class MA{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const zA={kernelName:Ve,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:l}=r,u=Ri(s.shape,a.shape,i,o,"NHWC",l);let c;const h=new MA(u);c=n.runWebGLProgram(h,[s,a],"float32");const d=fE({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}},PA={kernelName:Ke,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:l}=wc(s,a.length);Ic(i.length,l,a);const{path:u,steps:c}=Cc(o,l),h=c.length;let d=null,p=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=kc(p,l[t]);let s;Sc(e)?s=a[t]:(s=CE({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);m(s.shape,i)||(s=fE({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===d?d=s:(d=dE({inputs:{a:s,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=kE({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-p),keepDims:!1}}),f.push(d)),p--)}for(const e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},BA=iE({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),WA={kernelName:Xe,backendName:"webgl",kernelFunc:BA},UA={kernelName:Ye,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=j().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new KT("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new jT("return (b >= 0.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},VA=oE({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:MN}),GA={kernelName:Ze,backendName:"webgl",kernelFunc:VA},HA=iE({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${rc};\n  float a1 = ${sc};\n  float a2 = ${ac};\n  float a3 = ${ic};\n  float a4 = ${oc};\n  float a5 = ${lc};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),jA={kernelName:Je,backendName:"webgl",kernelFunc:HA},qA=iE({opSnippet:aE+"\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:zN,dtype:"float32"}),KA={kernelName:Qe,backendName:"webgl",kernelFunc:qA};function XA(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=s;return s<0&&(d(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),fE({inputs:{x:a},backend:r,attrs:{shape:o}})}const YA={kernelName:et,backendName:"webgl",kernelFunc:XA},JA="return exp(x) - 1.0;",ZA=iE({opSnippet:JA,packedOpSnippet:JA,cpuKernelImpl:PN}),QA={kernelName:tt,backendName:"webgl",kernelFunc:ZA};class e_{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function t_(e,t,n){const r=n.texData.get(e.dataId),s=g(e.shape),a=e.shape[e.shape.length-1],i=fE({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,l=new e_("real",o,t),u=new e_("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),d=n.runWebGLProgram(u,c,"float32"),p=JT({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const f=fE({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const n_={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return t_(r,!1,n)}};class r_{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function s_(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||R(s),"string"===a){const e=S(a,g(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new r_(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const a_={kernelName:rt,backendName:"webgl",kernelFunc:s_};class i_{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const o_={kernelName:st,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new i_(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},l_="return floor(x);",u_=iE({opSnippet:l_,packedOpSnippet:l_,cpuKernelImpl:BN}),c_={kernelName:at,backendName:"webgl",kernelFunc:u_},h_=oE({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),d_={kernelName:it,backendName:"webgl",kernelFunc:h_};class p_{constructor(e){this.variableNames=["A"];const t=K$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class f_{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=K$(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const g_={kernelName:sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[l,u]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[u,l],h=[u,l,a];if(o||i){const e=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=m_&&e===b_||(b_=e,m_=document.createElement("canvas").getContext("2d",{willReadFrequently:b_})),m_.canvas.width=l,m_.canvas.height=u,m_.drawImage(s,0,0,l,u),s=m_.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=y$.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),s);const p=j().getBool("WEBGL_PACK")?new f_(h):new p_(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}};let m_,b_=j().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const y_={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=Vi(c),m=Fi(s.shape,a.shape,l,h,u,d,!1,g);let b;const y=[],x=null!=i,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=fE({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(x&&e.push(t(i,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",Dr(f,"float32"));e.push(t),y.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&j().getBool("WEBGL_EXP_CONV")){const e=p?lE(p,!0):null,t=new YR(m,x,e,v,w),r=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],s=k();b=n.runWebGLProgram(t,s,"float32",r)}else if(j().getBool("WEBGL_CONV_IM2COL"))b=eA({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?lE(p,!1):null,t=new KR(m,x,e,v,w),r=k();b=n.runWebGLProgram(t,r,"float32")}else b=QR({x:s,filter:a,convInfo:m,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=fE({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}},x_={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,g=[];let m=c;null==m&&(m=[1,1]),d(Wi(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const b=Fi(s.shape,a.shape,l,m,u,h,!0),y=j().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=p?lE(p,y):null,v=[s,a],w=null!=i,k=null!=o,I="leakyrelu"===p;if(w&&v.push(i),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",Dr(f,"float32"));v.push(e),g.push(e)}let C;C=y?new EA(b,w,x,k,I):new TA(b,w,x,k,I);const S=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],$=n.runWebGLProgram(C,v,"float32",S);return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class v_{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const s=uN(n.length);let a="\n    int index;";for(let e=0;e<this.sliceDim;e++)a+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${a}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const w_={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=g(r.shape),[l,u,c,h]=Ju(r,s),d=fE({inputs:{x:s},backend:n,attrs:{shape:[u,i]}}),p=fE({inputs:{x:r},backend:n,attrs:{shape:[g(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=WN(e,t,r.dtype,u,i,c,h,r.shape,o);return n.makeTensorInfo(l,r.dtype,a.values)}const f=new v_(i,h,[u,c],r.shape),m=n.runWebGLProgram(f,[p,d],p.dtype),b=fE({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),b}};class k_{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=uN(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("index"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function I_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,l=k(i,s.shape)[0];if(j().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];d(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const u=Uc(s,a,l,o),c=g(a.shape),h=[],p=fE({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),f=fE({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(f);const m=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=UN(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,r.dtype,r.values)}const b=new k_(p.shape,m),y=n.runWebGLProgram(b,[p,f],p.dtype);h.push(y);const x=fE({inputs:{x:y},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}const C_={kernelName:lt,backendName:"webgl",kernelFunc:I_},S_=oE({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:VN,dtype:"bool"}),$_={kernelName:ct,backendName:"webgl",kernelFunc:S_},N_=oE({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:GN}),T_={kernelName:ht,backendName:"webgl",kernelFunc:N_},E_={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return t_(r,!0,n)}},R_=iE({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),A_={kernelName:gt,backendName:"webgl",kernelFunc:R_},__=iE({opSnippet:"return float(isinf(x));",dtype:"bool"}),F_={kernelName:mt,backendName:"webgl",kernelFunc:__},D_=iE({opSnippet:"return float(isnan(x));",dtype:"bool"}),O_={kernelName:bt,backendName:"webgl",kernelFunc:D_},L_=oE({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:HN,dtype:"bool"}),M_={kernelName:xt,backendName:"webgl",kernelFunc:L_},z_=oE({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:jN,dtype:"bool"}),P_={kernelName:vt,backendName:"webgl",kernelFunc:z_},B_={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=qN(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},W_=iE({opSnippet:aE+"\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:KN}),U_={kernelName:kt,backendName:"webgl",kernelFunc:W_},V_=iE({opSnippet:aE+"\n  return log(1.0 + x);\n"}),G_={kernelName:It,backendName:"webgl",kernelFunc:V_},H_=oE({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),j_={kernelName:Ct,backendName:"webgl",kernelFunc:H_},q_=iE({opSnippet:"return float(!(x >= 1.0));"}),K_={kernelName:St,backendName:"webgl",kernelFunc:q_},X_=oE({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Y_={kernelName:$t,backendName:"webgl",kernelFunc:X_};class J_{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Z_{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Q_={kernelName:Nt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=r,u=j().getBool("WEBGL_PACK_NORMALIZATION")?new Z_(s.shape,a,i,o,l):new J_(s.shape,a,i,o,l);return n.runWebGLProgram(u,[s],s.dtype)}};class eF{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const tF={kernelName:Tt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new eF(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function nF(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,l=k(a,s.shape);let u=l;const c=Mo(u,o),h=null!=c,d=n.shouldExecuteOnCPU([s]);let p=s;if(h){if(d){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=IT(e,s.shape,s.dtype,c,t);p=n.makeTensorInfo(t,s.dtype),n.texData.get(p.dataId).values=r}else p=wE(s,c,n);u=Po(u.length,o)}Lo("max",u,o);const[f,m]=Do(p.shape,u);let b,y=f;if(i&&(y=Oo(f,l)),d){const e=n.texData.get(p.dataId).values,t=XN(e,g(m),y,s.dtype);b=n.makeTensorInfo(y,s.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const s=g(t),a=fE({inputs:{x:e},attrs:{shape:[g(e.shape)/s,s]},backend:r}),i=yE(a,e.dtype,"max",r),o=fE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return h&&n.disposeIntermediateTensorInfo(p),b}const rF={kernelName:Et,backendName:"webgl",kernelFunc:nF},sF=oE({opSnippet:HT+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qT+"\n  return result;\n",cpuKernelImpl:YN}),aF={kernelName:Rt,backendName:"webgl",kernelFunc:sF},iF={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;j$(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=r;d(Wi(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Ai(s.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&m(u.inShape,u.outShape))return XT({inputs:{x:s},backend:n});const c=new aR(u,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},oF={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=r,c=_i(s.shape,a,i,[1,1,1],o,u,l),h=new iR(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class lF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class uF{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const cF={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=r,h=_i(i.shape,o,l,[1,1,1],u,c),d=new iR(h,"max",!0),p=n.runWebGLProgram(d,[i],i.dtype),f=new uF(h),g=n.runWebGLProgram(f,[s,p],i.dtype);return n.disposeIntermediateTensorInfo(p),g}},hF={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;j$([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=Ai(o.shape,l,u,1,c,h),p=new aR(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new lF(d),m=n.runWebGLProgram(g,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},dF={kernelName:Ot,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;d(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const u=[1,1];d(Wi(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Ai(r.shape,s,a,u,i),[h,p]=function(e,t,n,r){let s=new aR(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new aR(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,l);return[h,p]}},pF={kernelName:Lt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,l=k(a,r.shape);let u=l;const c=Mo(u,o),h=null!=c,d=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(h){if(d){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=IT(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=wE(r,c,i);p.push(f),u=Po(u.length,o)}Lo("sum",u,o);const[m,b]=Do(f.shape,u);let y=m;s&&(y=Oo(m,l));const x=function(e,t,n,r){const s=g(t),a=fE({inputs:{x:e},attrs:{shape:[g(e.shape)/s,s]},backend:r}),i=yE(a,"float32","mean",r),o=fE({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,b,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return x}},fF={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=k(a,s.shape);let u=l;const c=Mo(u,o);let h=s;null!=c&&(h=CE({inputs:{x:s},backend:n,attrs:{perm:c}}),u=Po(u.length,s.shape.length)),Lo("min",u,o);const[d,p]=Do(h.shape,u),f=fE({inputs:{x:h},backend:n,attrs:{shape:[-1,g(p)]}}),m=yE(f,f.dtype,"min",n);let b;return b=fE(i?{inputs:{x:m},backend:n,attrs:{shape:Oo(d,l)}}:{inputs:{x:m},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}},gF=oE({opSnippet:HT+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+qT+"\n  return result;\n",cpuKernelImpl:JN}),mF={kernelName:zt,backendName:"webgl",kernelFunc:gF};class bF{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=uN(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class yF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=uN(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=$T("rc",r),l=$T("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const xF={kernelName:Pt,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yF(r.shape,s,a):new bF(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},vF=oE({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+qT+"\n  return result;\n"}),wF={kernelName:Bt,backendName:"webgl",kernelFunc:vF};class kF{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const IF=oE({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),CF={kernelName:qe,backendName:"webgl",kernelFunc:IF},SF="return a - b;",$F=oE({opSnippet:SF,packedOpSnippet:SF,supportsComplex:!0,cpuKernelImpl:vT}),NF={kernelName:jn,backendName:"webgl",kernelFunc:$F};function TF(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=k([a],s.shape),o=nF({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Oo(o.shape,i),u=fE({inputs:{x:o},backend:n,attrs:{shape:l}}),c=$F({inputs:{a:s,b:u},backend:n}),h=qA({inputs:{x:c},backend:n}),d=kE({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),p=fE({inputs:{x:d},backend:n,attrs:{shape:l}}),f=IF({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const EF={kernelName:Fn,backendName:"webgl",kernelFunc:TF},RF={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:TF({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new kF(u,c,a),d=[[i]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},AF=DT+"\n  return -x;\n",_F={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=QN(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=j().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new PT(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new FT(r.shape,AF),n.runWebGLProgram(s,[r],r.dtype)}},FF=iu,DF={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){ur("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=FF(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},OF=ou,LF={kernelName:jt,backendName:"webgl",kernelFunc:function(e){ur("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:d,validOutputs:p}=OF(c,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},MF=lu,zF={kernelName:qt,backendName:"webgl",kernelFunc:function(e){ur("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),d=i,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=MF(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class PF{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const BF={kernelName:Xt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:o,offValue:l}=r,u=g(s.shape),c=new PF(u,i,o,l),h=fE({inputs:{x:s},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a);n.disposeIntermediateTensorInfo(h);const p=fE({inputs:{x:d},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function WF(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=TR({inputs:{input:r},backend:n}),t=WF({inputs:{x:e},backend:n}),s=VR({inputs:{input:r},backend:n}),a=WF({inputs:{x:s},backend:n}),i=JT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return s_({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const UF={kernelName:nr,backendName:"webgl",kernelFunc:WF},VF={kernelName:Kt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=TR({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=VR({inputs:{input:s},backend:r}),i=WF({inputs:{x:a},backend:r}),o=JT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return s_({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},GF={kernelName:Yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return XA({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{p(a,e.shape,"All tensors passed to stack must have matching shapes"),d(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=jR({inputs:t.map((e=>{const t=XA({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class HF{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=uN(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class jF{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=uN(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=$T("rc",r),l=$T("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const qF=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===g(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return s_({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new jF(s.shape,a,i):new HF(s.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[s],s.dtype,l)},KF={kernelName:Jt,backendName:"webgl",kernelFunc:qF},XF=oE({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+qT+"\n  return result;\n"}),YF={kernelName:Zt,backendName:"webgl",kernelFunc:XF},JF={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,l=[],u=k(a,s.shape);let c=u;const h=Mo(c,o);let d,p=s;if(null!=h&&(p=CE({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Po(c.length,o),l.push(p)),Lo("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:s}=tT(p.shape,p.dtype,e,c);d=n.makeTensorInfo(r,s,t)}else{const[e,t]=Do(p.shape,c),r=g(t),a=fE({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=yE(a,us(s.dtype),"prod",n);d=fE({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(d);const e=Oo(d.shape,u);d=fE({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ZF={kernelName:tn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:s,paramsDenseValues:a,indices:i}=t,{outputRaggedRank:o}=r,l=s.map((e=>n.readSync(e.dataId))),u=s.map((e=>e.shape)),c=n.readSync(a.dataId),h=n.readSync(i.dataId),[d,p,f]=nT(l,u,c,a.shape,a.dtype,h,i.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,a.dtype,p);return g.concat([m])}},QF={kernelName:nn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{starts:r,limits:s,deltas:a}=t,i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=rT(i,r.shape,r.dtype,o,s.shape,l,a.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([c.length],r.dtype,c)]}},eD={kernelName:rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:s,values:a,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=r,u=n.readSync(s.dataId),c=n.readSync(a.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=sT(u,s.shape,c,a.shape,a.dtype,h,i.shape,d,p,l);return n.makeTensorInfo(f,a.dtype,g)}},tD=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=aT(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},nD={kernelName:sn,backendName:"webgl",kernelFunc:tD},rD=iE({opSnippet:"return 1.0 / x;"}),sD={kernelName:on,backendName:"webgl",kernelFunc:rD},aD=iE({opSnippet:DT+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),iD={kernelName:ln,backendName:"webgl",kernelFunc:aD},oD=iE({opSnippet:DT+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),lD={kernelName:fn,backendName:"webgl",kernelFunc:oD};class uD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class cD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const hD={kernelName:dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new cD(s.shape,l,u,a,i):new uD(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],"float32")}};class dD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pD={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new dD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class fD{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class gD{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const mD={kernelName:cn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[l,u]=o,c=j().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new gD(s.shape,l,u,a,i):new fD(s.shape,l,u,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class bD{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const yD={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new bD(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class xD{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=uN(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class vD{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=$T("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=uN(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const wD={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=k(a,s.shape);if(0===i)return XT({inputs:{x:s},backend:n});const l=j().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vD(s.shape,o):new xD(s.shape,o);return n.runWebGLProgram(l,[s],s.dtype)}};class kD{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ID={kernelName:ar,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,l=new kD(r.shape,a),[u,c]=Hu(i,r.shape[1],r.shape[2]),h=[[u,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(l,[r],r.dtype,h)}},CD=iE({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),SD={kernelName:mn,backendName:"webgl",kernelFunc:CD},$D=iE({opSnippet:"return inversesqrt(x);",cpuKernelImpl:iT}),ND={kernelName:bn,backendName:"webgl",kernelFunc:$D};class TD{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const l=uN(s.length),u=uN(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}class ED{constructor(e,t,n,r,s,a,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=a;const l=uN(s.length),u=uN(a.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}const RD={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ec(0,s,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,s.dtype);const p=fE({inputs:{x:s},backend:n,attrs:{shape:[l,o]}}),f=fE({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=j().getBool("WEBGL_PACK")?new ED(l,o,p.shape.length,f.shape.length,c,d):new TD(l,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),y=fE({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),y}};class AD{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===j().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const _D={kernelName:vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:s,values:a}=t,{side:i}=r,o=new AD(s.shape[0],s.shape[1],a.shape[1],i),l=[[s.shape[1]]];return n.runWebGLProgram(o,[s,a],"int32",l)}};class FD{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=uN(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const DD={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new FD(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],ls(s.dtype,a.dtype))}},OD=iE({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${tc};\n  float scale = ${nc};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),LD={kernelName:kn,backendName:"webgl",kernelFunc:OD},MD=iE({opSnippet:aE+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:lT}),zD={kernelName:Nn,backendName:"webgl",kernelFunc:MD},PD=iE({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),BD={kernelName:$n,backendName:"webgl",kernelFunc:PD},WD=iE({opSnippet:aE+"\n  return sin(x);\n",packedOpSnippet:`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${qT}\n  return result;\n`}),UD={kernelName:Cn,backendName:"webgl",kernelFunc:WD},VD=iE({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),GD={kernelName:Sn,backendName:"webgl",kernelFunc:VD},HD=iE({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),jD={kernelName:Tn,backendName:"webgl",kernelFunc:HD},qD={kernelName:An,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;d(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<s.shape.length;++e)l.push([0,0]);const u=[],c=qF({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=ju(c.shape,a,o,!1),p=qu(h.length,a.length,!1),f=Ku(c.shape,a,o,!1),g=fE({inputs:{x:c},backend:n,attrs:{shape:h}}),m=CE({inputs:{x:g},backend:n,attrs:{perm:p}}),b=fE({inputs:{x:m},backend:n,attrs:{shape:f}});return u.push(c),u.push(g),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},KD={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=hT(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},XD={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=dT(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},YD={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=pT(i,r.shape,r.dtype,o,l,!0);return n.makeTensorInfo(c,r.dtype,u)}},JD={kernelName:Mn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),l=n.readSync(a.dataId),[u,c]=pT(i,r.shape,r.dtype,o,l);return n.makeTensorInfo(c,r.dtype,u)}},ZD={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=ec(0,s,o),p=!1;if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=zr(n.readSync(i.dataId)[0]),f=oT(e,t,o,d,c,u,l,h,r,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new TD(u,l,s.shape.length,a.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[a,s,i],a.dtype),m=fE({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}},QD={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=k(i,s.shape)[0],l=Nc(s,a,o),u=s.shape.length,c=new Array(u).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const r=vR({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},eO="return sqrt(x);",tO=iE({opSnippet:eO,packedOpSnippet:eO,cpuKernelImpl:fT}),nO={kernelName:En,backendName:"webgl",kernelFunc:tO},rO={kernelName:Bn,backendName:"webgl",kernelFunc:iE({opSnippet:"return x * x;"})},sO="return (a - b) * (a - b);",aO=oE({opSnippet:sO,packedOpSnippet:sO}),iO={kernelName:Pn,backendName:"webgl",kernelFunc:aO},oO={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");const a=Vc(n.readSync(s.dataId)),i=gT(a,"string",r);return n.makeTensorInfo(s.shape,"string",i)}},lO={kernelName:rr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=DT+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new FT(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class uO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=uN(n.length),a=uN(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const cO={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:b,isSimpleSlice:y,begin:x,end:v,strides:w}=Si(s.shape,a,i,o,l,u,c,h,p);let k;if(m)k=fE({inputs:{x:s},backend:n,attrs:{shape:g}});else if(b||y){d(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=di(x,v,w),t=vR({inputs:{x:s},backend:n,attrs:{begin:x,size:e}});k=fE({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=xa(s.shape,s.dtype,e),r=mT(f,t,w,x);k=n.makeTensorInfo(g,s.dtype,r.values)}else{const e=new uO(x,w,f);k=n.runWebGLProgram(e,[s],s.dtype)}const I=fE({inputs:{x:k},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(k),I}},hO={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=r,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=bT(d,p,s,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}},dO={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=yT(o,l,s),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},pO={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=xT(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},fO=iE({opSnippet:"return tan(x);"}),gO={kernelName:qn,backendName:"webgl",kernelFunc:fO},mO=iE({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),bO={kernelName:Kn,backendName:"webgl",kernelFunc:mO},yO={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{tensor:s,indices:a,updates:i}=t,{}=r,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=ec(0,a,s.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(s.shape,a.dtype);const p=fE({inputs:{x:a},backend:n,attrs:{shape:[l,o]}}),f=fE({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=fE({inputs:{x:s},backend:n,attrs:{shape:d}}),m=new TD(l,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),y=fE({inputs:{x:b},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),y}};class xO{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=uN(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function vO(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>zr(e))):e,r=xa(s.shape,s.dtype,t),i=wT(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new xO(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const wO={kernelName:Xn,backendName:"webgl",kernelFunc:vO};class kO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class IO{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function CO(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function SO(e){let t=1;for(;t<e;)t*=2;return t}const $O={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=j().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=j().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=s.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>l){const e=n.readSync(s.dataId),[t,r]=kT(e,u,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,s.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[s,s_({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(s):s,f=g(u)/c,m=fE({inputs:{x:p},attrs:{shape:[f,c]},backend:n});d&&CO(n,p);const b=SO(a),y=SO(c);let x=null;const v=()=>null===x?[m,m]:[m,x],w=(e,t,r)=>{const s=v(),a=new kO(r),i=[[c],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(a,s,"int32",i),CO(n,o)};for(let e=1;e<b;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>b;e/=2){const t=v(),r=new IO([f,e/2]),s=[[c],[null===x?1:0],[b]],a=x;x=n.runWebGLProgram(r,t,"int32",s),CO(n,a);const i=b/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=vR({inputs:{x},backend:n,attrs:{begin:0,size:[f,a]}}),CO(n,k);let I=I_({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});CO(n,m);const C=u.slice(0,-1);C.push(a),k=x,x=fE({inputs:{x},attrs:{shape:C},backend:n}),CO(n,k);const S=I;return I=fE({inputs:{x:I},attrs:{shape:C},backend:n}),CO(n,S),[I,x]}};class NO{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const TO={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=new NO(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[s,a],"float32")}},EO={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;j$(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=CT(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},RO={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=vR({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=fE({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class AO{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const _O={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,l=[];let u=0;const c=Mo([u],o);let h=s;null!=c&&(h=CE({inputs:{x:s},backend:n,attrs:{perm:c}}),l.push(h),u=Po(1,o)[0]);const d=Wc(h.shape,u,i),p=g([h.shape[u]]),f=fE({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const m=us(s.dtype),b=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],u=Bc(o,a),c=new AO({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const d=tD({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),p=vO({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(p),b(h,t,p,s,a)},y=fE({inputs:{x:b(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:d}});let x=y;if(null!=c){l.push(y);const e=zo(c);x=CE({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},FO=[NE,EE,AE,FE,LE,PE,BE,WE,qE,KE,YE,ZE,eR,nR,sR,oR,lR,hR,dR,pR,mR,kR,IR,CR,SR,RR,FR,LR,ZT,PR,qR,tA,iA,lA,uA,cA,hA,pA,gA,bA,IA,CA,SA,NA,RA,FA,DA,LA,zA,PA,WA,UA,GA,jA,KA,YA,QA,n_,a_,o_,c_,d_,g_,y_,x_,w_,C_,$_,T_,YT,E_,GR,A_,F_,O_,tE,M_,P_,B_,U_,G_,j_,K_,Y_,Q_,tF,rF,aF,iF,oF,cF,hF,dF,pF,fF,mF,xF,wF,RF,pE,_F,DF,LF,zF,NR,BF,VF,GF,KF,YF,sE,JF,ZF,QF,eD,nD,ER,CF,sD,iD,lD,gE,hD,pD,mD,yD,wD,ID,SD,ND,RD,_D,DD,LD,zD,BD,UD,GD,wR,EF,jD,qD,KD,XD,YD,JD,ZD,QD,nO,rO,iO,oO,lO,cO,hO,dO,pO,NF,IE,gO,bO,yO,wO,$O,TO,SE,EO,RO,_O,UF];for(const e of FO)mr(e);function DO(e){return DO="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},DO(e)}function OO(){OO=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof b?t:b,i=Object.create(a.prototype),o=new R(r||[]);return s(i,"_invoke",{value:$(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",g="completed",m={};function b(){}function y(){}function x(){}var v={};u(v,i,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(A([])));k&&k!==n&&r.call(k,i)&&(v=k);var I=x.prototype=b.prototype=Object.create(v);function C(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==DO(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function $(t,n,r){var s=d;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===g){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=N(o,r);if(l){if(l===m)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===d)throw s=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?g:p,u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=g,r.method="throw",r.arg=u.arg)}}}function N(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,N(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(DO(t)+" is not iterable")}return y.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:y,configurable:!0}),y.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},C(S.prototype),u(S.prototype,o,(function(){return this})),t.AsyncIterator=S,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new S(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},C(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=A,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(E),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;E(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}function LO(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function MO(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){LO(a,r,s,i,o,"next",e)}function o(e){LO(a,r,s,i,o,"throw",e)}i(void 0)}))}}function zO(e){return zO="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},zO(e)}function PO(){PO=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof b?t:b,i=Object.create(a.prototype),o=new R(r||[]);return s(i,"_invoke",{value:$(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",g="completed",m={};function b(){}function y(){}function x(){}var v={};u(v,i,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(A([])));k&&k!==n&&r.call(k,i)&&(v=k);var I=x.prototype=b.prototype=Object.create(v);function C(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==zO(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function $(t,n,r){var s=d;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===g){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=N(o,r);if(l){if(l===m)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===d)throw s=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?g:p,u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=g,r.method="throw",r.arg=u.arg)}}}function N(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,N(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(zO(t)+" is not iterable")}return y.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:y,configurable:!0}),y.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},C(S.prototype),u(S.prototype,o,(function(){return this})),t.AsyncIterator=S,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new S(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},C(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=A,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(E),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;E(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}function BO(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function WO(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){BO(a,r,s,i,o,"next",e)}function o(e){BO(a,r,s,i,o,"throw",e)}i(void 0)}))}}function UO(e){return UO="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},UO(e)}function VO(){VO=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof b?t:b,i=Object.create(a.prototype),o=new R(r||[]);return s(i,"_invoke",{value:$(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",g="completed",m={};function b(){}function y(){}function x(){}var v={};u(v,i,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(A([])));k&&k!==n&&r.call(k,i)&&(v=k);var I=x.prototype=b.prototype=Object.create(v);function C(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==UO(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function $(t,n,r){var s=d;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===g){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=N(o,r);if(l){if(l===m)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===d)throw s=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?g:p,u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=g,r.method="throw",r.arg=u.arg)}}}function N(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,N(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(UO(t)+" is not iterable")}return y.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:y,configurable:!0}),y.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},C(S.prototype),u(S.prototype,o,(function(){return this})),t.AsyncIterator=S,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new S(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},C(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=A,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(E),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;E(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}function GO(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function HO(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){GO(a,r,s,i,o,"next",e)}function o(e){GO(a,r,s,i,o,"throw",e)}i(void 0)}))}}function jO(){}function qO(e){return null==e?jO:function(){return this.querySelector(e)}}function KO(){return[]}function XO(e){return null==e?KO:function(){return this.querySelectorAll(e)}}function YO(e){return function(){return this.matches(e)}}function JO(e){return function(t){return t.matches(e)}}var ZO=Array.prototype.find;function QO(){return this.firstElementChild}var eL=Array.prototype.filter;function tL(){return Array.from(this.children)}function nL(e){return new Array(e.length)}function rL(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}function sL(e,t,n,r,s,a){for(var i,o=0,l=t.length,u=a.length;o<u;++o)(i=t[o])?(i.__data__=a[o],r[o]=i):n[o]=new rL(e,a[o]);for(;o<l;++o)(i=t[o])&&(s[o]=i)}function aL(e,t,n,r,s,a,i){var o,l,u,c=new Map,h=t.length,d=a.length,p=new Array(h);for(o=0;o<h;++o)(l=t[o])&&(p[o]=u=i.call(l,l.__data__,o,t)+"",c.has(u)?s[o]=l:c.set(u,l));for(o=0;o<d;++o)u=i.call(e,a[o],o,a)+"",(l=c.get(u))?(r[o]=l,l.__data__=a[o],c.delete(u)):n[o]=new rL(e,a[o]);for(o=0;o<h;++o)(l=t[o])&&c.get(p[o])===l&&(s[o]=l)}function iL(e){return e.__data__}function oL(e){return"object"==typeof e&&"length"in e?e:Array.from(e)}function lL(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}rL.prototype={constructor:rL,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var uL="http://www.w3.org/1999/xhtml";const cL={svg:"http://www.w3.org/2000/svg",xhtml:uL,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};function hL(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),cL.hasOwnProperty(t)?{space:cL[t],local:e}:e}function dL(e){return function(){this.removeAttribute(e)}}function pL(e){return function(){this.removeAttributeNS(e.space,e.local)}}function fL(e,t){return function(){this.setAttribute(e,t)}}function gL(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}function mL(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}function bL(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}function yL(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView}function xL(e){return function(){this.style.removeProperty(e)}}function vL(e,t,n){return function(){this.style.setProperty(e,t,n)}}function wL(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}function kL(e,t){return e.style.getPropertyValue(t)||yL(e).getComputedStyle(e,null).getPropertyValue(t)}function IL(e){return function(){delete this[e]}}function CL(e,t){return function(){this[e]=t}}function SL(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}function $L(e){return e.trim().split(/^|\s+/)}function NL(e){return e.classList||new TL(e)}function TL(e){this._node=e,this._names=$L(e.getAttribute("class")||"")}function EL(e,t){for(var n=NL(e),r=-1,s=t.length;++r<s;)n.add(t[r])}function RL(e,t){for(var n=NL(e),r=-1,s=t.length;++r<s;)n.remove(t[r])}function AL(e){return function(){EL(this,e)}}function _L(e){return function(){RL(this,e)}}function FL(e,t){return function(){(t.apply(this,arguments)?EL:RL)(this,e)}}function DL(){this.textContent=""}function OL(e){return function(){this.textContent=e}}function LL(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}function ML(){this.innerHTML=""}function zL(e){return function(){this.innerHTML=e}}function PL(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}function BL(){this.nextSibling&&this.parentNode.appendChild(this)}function WL(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function UL(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===uL&&t.documentElement.namespaceURI===uL?t.createElement(e):t.createElementNS(n,e)}}function VL(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}function GL(e){var t=hL(e);return(t.local?VL:UL)(t)}function HL(){return null}function jL(){var e=this.parentNode;e&&e.removeChild(this)}function qL(){var e=this.cloneNode(!1),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function KL(){var e=this.cloneNode(!0),t=this.parentNode;return t?t.insertBefore(e,this.nextSibling):e}function XL(e){return function(){var t=this.__on;if(t){for(var n,r=0,s=-1,a=t.length;r<a;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++s]=n:this.removeEventListener(n.type,n.listener,n.options);++s?t.length=s:delete this.__on}}}function YL(e,t,n){return function(){var r,s=this.__on,a=function(e){return function(t){e.call(this,t,this.__data__)}}(t);if(s)for(var i=0,o=s.length;i<o;++i)if((r=s[i]).type===e.type&&r.name===e.name)return this.removeEventListener(r.type,r.listener,r.options),this.addEventListener(r.type,r.listener=a,r.options=n),void(r.value=t);this.addEventListener(e.type,a,n),r={type:e.type,name:e.name,value:t,listener:a,options:n},s?s.push(r):this.__on=[r]}}function JL(e,t,n){var r=yL(e),s=r.CustomEvent;"function"==typeof s?s=new s(t,n):(s=r.document.createEvent("Event"),n?(s.initEvent(t,n.bubbles,n.cancelable),s.detail=n.detail):s.initEvent(t,!1,!1)),e.dispatchEvent(s)}function ZL(e,t){return function(){return JL(this,e,t)}}function QL(e,t){return function(){return JL(this,e,t.apply(this,arguments))}}TL.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};var eM=[null];function tM(e,t){this._groups=e,this._parents=t}function nM(){return new tM([[document.documentElement]],eM)}tM.prototype=nM.prototype={constructor:tM,select:function(e){"function"!=typeof e&&(e=qO(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i,o=t[s],l=o.length,u=r[s]=new Array(l),c=0;c<l;++c)(a=o[c])&&(i=e.call(a,a.__data__,c,o))&&("__data__"in a&&(i.__data__=a.__data__),u[c]=i);return new tM(r,this._parents)},selectAll:function(e){e="function"==typeof e?function(e){return function(){return null==(t=e.apply(this,arguments))?[]:Array.isArray(t)?t:Array.from(t);var t}}(e):XO(e);for(var t=this._groups,n=t.length,r=[],s=[],a=0;a<n;++a)for(var i,o=t[a],l=o.length,u=0;u<l;++u)(i=o[u])&&(r.push(e.call(i,i.__data__,u,o)),s.push(i));return new tM(r,s)},selectChild:function(e){return this.select(null==e?QO:function(e){return function(){return ZO.call(this.children,e)}}("function"==typeof e?e:JO(e)))},selectChildren:function(e){return this.selectAll(null==e?tL:function(e){return function(){return eL.call(this.children,e)}}("function"==typeof e?e:JO(e)))},filter:function(e){"function"!=typeof e&&(e=YO(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new tM(r,this._parents)},data:function(e,t){if(!arguments.length)return Array.from(this,iL);var n,r=t?aL:sL,s=this._parents,a=this._groups;"function"!=typeof e&&(n=e,e=function(){return n});for(var i=a.length,o=new Array(i),l=new Array(i),u=new Array(i),c=0;c<i;++c){var h=s[c],d=a[c],p=d.length,f=oL(e.call(h,h&&h.__data__,c,s)),g=f.length,m=l[c]=new Array(g),b=o[c]=new Array(g);r(h,d,m,b,u[c]=new Array(p),f,t);for(var y,x,v=0,w=0;v<g;++v)if(y=m[v]){for(v>=w&&(w=v+1);!(x=b[w])&&++w<g;);y._next=x||null}}return(o=new tM(o,s))._enter=l,o._exit=u,o},enter:function(){return new tM(this._enter||this._groups.map(nL),this._parents)},exit:function(){return new tM(this._exit||this._groups.map(nL),this._parents)},join:function(e,t,n){var r=this.enter(),s=this,a=this.exit();return"function"==typeof e?(r=e(r))&&(r=r.selection()):r=r.append(e+""),null!=t&&(s=t(s))&&(s=s.selection()),null==n?a.remove():n(a),r&&s?r.merge(s).order():s},merge:function(e){for(var t=e.selection?e.selection():e,n=this._groups,r=t._groups,s=n.length,a=r.length,i=Math.min(s,a),o=new Array(s),l=0;l<i;++l)for(var u,c=n[l],h=r[l],d=c.length,p=o[l]=new Array(d),f=0;f<d;++f)(u=c[f]||h[f])&&(p[f]=u);for(;l<s;++l)o[l]=n[l];return new tM(o,this._parents)},selection:function(){return this},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,s=e[t],a=s.length-1,i=s[a];--a>=0;)(r=s[a])&&(i&&4^r.compareDocumentPosition(i)&&i.parentNode.insertBefore(r,i),i=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=lL);for(var n=this._groups,r=n.length,s=new Array(r),a=0;a<r;++a){for(var i,o=n[a],l=o.length,u=s[a]=new Array(l),c=0;c<l;++c)(i=o[c])&&(u[c]=i);u.sort(t)}return new tM(s,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){return Array.from(this)},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],s=0,a=r.length;s<a;++s){var i=r[s];if(i)return i}return null},size:function(){let e=0;for(const t of this)++e;return e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var s,a=t[n],i=0,o=a.length;i<o;++i)(s=a[i])&&e.call(s,s.__data__,i,a);return this},attr:function(e,t){var n=hL(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?pL:dL:"function"==typeof t?n.local?bL:mL:n.local?gL:fL)(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?xL:"function"==typeof t?wL:vL)(e,t,null==n?"":n)):kL(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?IL:"function"==typeof t?SL:CL)(e,t)):this.node()[e]},classed:function(e,t){var n=$L(e+"");if(arguments.length<2){for(var r=NL(this.node()),s=-1,a=n.length;++s<a;)if(!r.contains(n[s]))return!1;return!0}return this.each(("function"==typeof t?FL:t?AL:_L)(n,t))},text:function(e){return arguments.length?this.each(null==e?DL:("function"==typeof e?LL:OL)(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?ML:("function"==typeof e?PL:zL)(e)):this.node().innerHTML},raise:function(){return this.each(BL)},lower:function(){return this.each(WL)},append:function(e){var t="function"==typeof e?e:GL(e);return this.select((function(){return this.appendChild(t.apply(this,arguments))}))},insert:function(e,t){var n="function"==typeof e?e:GL(e),r=null==t?HL:"function"==typeof t?t:qO(t);return this.select((function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)}))},remove:function(){return this.each(jL)},clone:function(e){return this.select(e?KL:qL)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,s,a=function(e){return e.trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}}))}(e+""),i=a.length;if(!(arguments.length<2)){for(o=t?YL:XL,r=0;r<i;++r)this.each(o(a[r],t,n));return this}var o=this.node().__on;if(o)for(var l,u=0,c=o.length;u<c;++u)for(r=0,l=o[u];r<i;++r)if((s=a[r]).type===l.type&&s.name===l.name)return l.value},dispatch:function(e,t){return this.each(("function"==typeof t?QL:ZL)(e,t))},[Symbol.iterator]:function*(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r,s=e[t],a=0,i=s.length;a<i;++a)(r=s[a])&&(yield r)}};const rM=nM;var sM={value:()=>{}};function aM(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r||/[\s.]/.test(e))throw new Error("illegal type: "+e);r[e]=[]}return new iM(r)}function iM(e){this._=e}function oM(e,t){for(var n,r=0,s=e.length;r<s;++r)if((n=e[r]).name===t)return n.value}function lM(e,t,n){for(var r=0,s=e.length;r<s;++r)if(e[r].name===t){e[r]=sM,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}iM.prototype=aM.prototype={constructor:iM,on:function(e,t){var n,r,s=this._,a=(r=s,(e+"").trim().split(/^|\s+/).map((function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}}))),i=-1,o=a.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++i<o;)if(n=(e=a[i]).type)s[n]=lM(s[n],e.name,t);else if(null==t)for(n in s)s[n]=lM(s[n],e.name,null);return this}for(;++i<o;)if((n=(e=a[i]).type)&&(n=oM(s[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new iM(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,s=new Array(n),a=0;a<n;++a)s[a]=arguments[a+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(a=0,n=(r=this._[e]).length;a<n;++a)r[a].value.apply(t,s)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],s=0,a=r.length;s<a;++s)r[s].value.apply(t,n)}};const uM=aM;var cM,hM,dM=0,pM=0,fM=0,gM=0,mM=0,bM=0,yM="object"==typeof performance&&performance.now?performance:Date,xM="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function vM(){return mM||(xM(wM),mM=yM.now()+bM)}function wM(){mM=0}function kM(){this._call=this._time=this._next=null}function IM(e,t,n){var r=new kM;return r.restart(e,t,n),r}function CM(){mM=(gM=yM.now())+bM,dM=pM=0;try{!function(){vM(),++dM;for(var e,t=cM;t;)(e=mM-t._time)>=0&&t._call.call(void 0,e),t=t._next;--dM}()}finally{dM=0,function(){for(var e,t,n=cM,r=1/0;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:cM=t);hM=e,$M(r)}(),mM=0}}function SM(){var e=yM.now(),t=e-gM;t>1e3&&(bM-=t,gM=e)}function $M(e){dM||(pM&&(pM=clearTimeout(pM)),e-mM>24?(e<1/0&&(pM=setTimeout(CM,e-yM.now()-bM)),fM&&(fM=clearInterval(fM))):(fM||(gM=yM.now(),fM=setInterval(SM,1e3)),dM=1,xM(CM)))}function NM(e,t,n){var r=new kM;return t=null==t?0:+t,r.restart((n=>{r.stop(),e(n+t)}),t,n),r}kM.prototype=IM.prototype={constructor:kM,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?vM():+n)+(null==t?0:+t),this._next||hM===this||(hM?hM._next=this:cM=this,hM=this),this._call=e,this._time=n,$M()},stop:function(){this._call&&(this._call=null,this._time=1/0,$M())}};var TM=uM("start","end","cancel","interrupt"),EM=[];function RM(e,t,n,r,s,a){var i=e.__transition;if(i){if(n in i)return}else e.__transition={};!function(e,t,n){var r,s=e.__transition;function a(l){var u,c,h,d;if(1!==n.state)return o();for(u in s)if((d=s[u]).name===n.name){if(3===d.state)return NM(a);4===d.state?(d.state=6,d.timer.stop(),d.on.call("interrupt",e,e.__data__,d.index,d.group),delete s[u]):+u<t&&(d.state=6,d.timer.stop(),d.on.call("cancel",e,e.__data__,d.index,d.group),delete s[u])}if(NM((function(){3===n.state&&(n.state=4,n.timer.restart(i,n.delay,n.time),i(l))})),n.state=2,n.on.call("start",e,e.__data__,n.index,n.group),2===n.state){for(n.state=3,r=new Array(h=n.tween.length),u=0,c=-1;u<h;++u)(d=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++c]=d);r.length=c+1}}function i(t){for(var s=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(o),n.state=5,1),a=-1,i=r.length;++a<i;)r[a].call(e,s);5===n.state&&(n.on.call("end",e,e.__data__,n.index,n.group),o())}function o(){for(var r in n.state=6,n.timer.stop(),delete s[t],s)return;delete e.__transition}s[t]=n,n.timer=IM((function(e){n.state=1,n.timer.restart(a,n.delay,n.time),n.delay<=e&&a(e-n.delay)}),0,n.time)}(e,n,{name:t,index:r,group:s,on:TM,tween:EM,time:a.time,delay:a.delay,duration:a.duration,ease:a.ease,timer:null,state:0})}function AM(e,t){var n=FM(e,t);if(n.state>0)throw new Error("too late; already scheduled");return n}function _M(e,t){var n=FM(e,t);if(n.state>3)throw new Error("too late; already running");return n}function FM(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function DM(e,t){return e=+e,t=+t,function(n){return e*(1-n)+t*n}}var OM,LM=180/Math.PI,MM={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1};function zM(e,t,n,r,s,a){var i,o,l;return(i=Math.sqrt(e*e+t*t))&&(e/=i,t/=i),(l=e*n+t*r)&&(n-=e*l,r-=t*l),(o=Math.sqrt(n*n+r*r))&&(n/=o,r/=o,l/=o),e*r<t*n&&(e=-e,t=-t,l=-l,i=-i),{translateX:s,translateY:a,rotate:Math.atan2(t,e)*LM,skewX:Math.atan(l)*LM,scaleX:i,scaleY:o}}function PM(e,t,n,r){function s(e){return e.length?e.pop()+" ":""}return function(a,i){var o=[],l=[];return a=e(a),i=e(i),function(e,r,s,a,i,o){if(e!==s||r!==a){var l=i.push("translate(",null,t,null,n);o.push({i:l-4,x:DM(e,s)},{i:l-2,x:DM(r,a)})}else(s||a)&&i.push("translate("+s+t+a+n)}(a.translateX,a.translateY,i.translateX,i.translateY,o,l),function(e,t,n,a){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),a.push({i:n.push(s(n)+"rotate(",null,r)-2,x:DM(e,t)})):t&&n.push(s(n)+"rotate("+t+r)}(a.rotate,i.rotate,o,l),function(e,t,n,a){e!==t?a.push({i:n.push(s(n)+"skewX(",null,r)-2,x:DM(e,t)}):t&&n.push(s(n)+"skewX("+t+r)}(a.skewX,i.skewX,o,l),function(e,t,n,r,a,i){if(e!==n||t!==r){var o=a.push(s(a)+"scale(",null,",",null,")");i.push({i:o-4,x:DM(e,n)},{i:o-2,x:DM(t,r)})}else 1===n&&1===r||a.push(s(a)+"scale("+n+","+r+")")}(a.scaleX,a.scaleY,i.scaleX,i.scaleY,o,l),a=i=null,function(e){for(var t,n=-1,r=l.length;++n<r;)o[(t=l[n]).i]=t.x(e);return o.join("")}}}var BM=PM((function(e){const t=new("function"==typeof DOMMatrix?DOMMatrix:WebKitCSSMatrix)(e+"");return t.isIdentity?MM:zM(t.a,t.b,t.c,t.d,t.e,t.f)}),"px, ","px)","deg)"),WM=PM((function(e){return null==e?MM:(OM||(OM=document.createElementNS("http://www.w3.org/2000/svg","g")),OM.setAttribute("transform",e),(e=OM.transform.baseVal.consolidate())?zM((e=e.matrix).a,e.b,e.c,e.d,e.e,e.f):MM)}),", ",")",")");function UM(e,t){var n,r;return function(){var s=_M(this,e),a=s.tween;if(a!==n)for(var i=0,o=(r=n=a).length;i<o;++i)if(r[i].name===t){(r=r.slice()).splice(i,1);break}s.tween=r}}function VM(e,t,n){var r,s;if("function"!=typeof n)throw new Error;return function(){var a=_M(this,e),i=a.tween;if(i!==r){s=(r=i).slice();for(var o={name:t,value:n},l=0,u=s.length;l<u;++l)if(s[l].name===t){s[l]=o;break}l===u&&s.push(o)}a.tween=s}}function GM(e,t,n){var r=e._id;return e.each((function(){var e=_M(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)})),function(e){return FM(e,r).value[t]}}function HM(e,t,n){e.prototype=t.prototype=n,n.constructor=e}function jM(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function qM(){}var KM=.7,XM=1/KM,YM="\\s*([+-]?\\d+)\\s*",JM="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",ZM="\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",QM=/^#([0-9a-f]{3,8})$/,ez=new RegExp(`^rgb\\(${YM},${YM},${YM}\\)$`),tz=new RegExp(`^rgb\\(${ZM},${ZM},${ZM}\\)$`),nz=new RegExp(`^rgba\\(${YM},${YM},${YM},${JM}\\)$`),rz=new RegExp(`^rgba\\(${ZM},${ZM},${ZM},${JM}\\)$`),sz=new RegExp(`^hsl\\(${JM},${ZM},${ZM}\\)$`),az=new RegExp(`^hsla\\(${JM},${ZM},${ZM},${JM}\\)$`),iz={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function oz(){return this.rgb().formatHex()}function lz(){return this.rgb().formatRgb()}function uz(e){var t,n;return e=(e+"").trim().toLowerCase(),(t=QM.exec(e))?(n=t[1].length,t=parseInt(t[1],16),6===n?cz(t):3===n?new pz(t>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):8===n?hz(t>>24&255,t>>16&255,t>>8&255,(255&t)/255):4===n?hz(t>>12&15|t>>8&240,t>>8&15|t>>4&240,t>>4&15|240&t,((15&t)<<4|15&t)/255):null):(t=ez.exec(e))?new pz(t[1],t[2],t[3],1):(t=tz.exec(e))?new pz(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=nz.exec(e))?hz(t[1],t[2],t[3],t[4]):(t=rz.exec(e))?hz(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=sz.exec(e))?xz(t[1],t[2]/100,t[3]/100,1):(t=az.exec(e))?xz(t[1],t[2]/100,t[3]/100,t[4]):iz.hasOwnProperty(e)?cz(iz[e]):"transparent"===e?new pz(NaN,NaN,NaN,0):null}function cz(e){return new pz(e>>16&255,e>>8&255,255&e,1)}function hz(e,t,n,r){return r<=0&&(e=t=n=NaN),new pz(e,t,n,r)}function dz(e,t,n,r){return 1===arguments.length?((s=e)instanceof qM||(s=uz(s)),s?new pz((s=s.rgb()).r,s.g,s.b,s.opacity):new pz):new pz(e,t,n,null==r?1:r);var s}function pz(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function fz(){return`#${yz(this.r)}${yz(this.g)}${yz(this.b)}`}function gz(){const e=mz(this.opacity);return`${1===e?"rgb(":"rgba("}${bz(this.r)}, ${bz(this.g)}, ${bz(this.b)}${1===e?")":`, ${e})`}`}function mz(e){return isNaN(e)?1:Math.max(0,Math.min(1,e))}function bz(e){return Math.max(0,Math.min(255,Math.round(e)||0))}function yz(e){return((e=bz(e))<16?"0":"")+e.toString(16)}function xz(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new wz(e,t,n,r)}function vz(e){if(e instanceof wz)return new wz(e.h,e.s,e.l,e.opacity);if(e instanceof qM||(e=uz(e)),!e)return new wz;if(e instanceof wz)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,s=Math.min(t,n,r),a=Math.max(t,n,r),i=NaN,o=a-s,l=(a+s)/2;return o?(i=t===a?(n-r)/o+6*(n<r):n===a?(r-t)/o+2:(t-n)/o+4,o/=l<.5?a+s:2-a-s,i*=60):o=l>0&&l<1?0:i,new wz(i,o,l,e.opacity)}function wz(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function kz(e){return(e=(e||0)%360)<0?e+360:e}function Iz(e){return Math.max(0,Math.min(1,e||0))}function Cz(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}function Sz(e,t,n,r,s){var a=e*e,i=a*e;return((1-3*e+3*a-i)*t+(4-6*a+3*i)*n+(1+3*e+3*a-3*i)*r+i*s)/6}HM(qM,uz,{copy(e){return Object.assign(new this.constructor,this,e)},displayable(){return this.rgb().displayable()},hex:oz,formatHex:oz,formatHex8:function(){return this.rgb().formatHex8()},formatHsl:function(){return vz(this).formatHsl()},formatRgb:lz,toString:lz}),HM(pz,dz,jM(qM,{brighter(e){return e=null==e?XM:Math.pow(XM,e),new pz(this.r*e,this.g*e,this.b*e,this.opacity)},darker(e){return e=null==e?KM:Math.pow(KM,e),new pz(this.r*e,this.g*e,this.b*e,this.opacity)},rgb(){return this},clamp(){return new pz(bz(this.r),bz(this.g),bz(this.b),mz(this.opacity))},displayable(){return-.5<=this.r&&this.r<255.5&&-.5<=this.g&&this.g<255.5&&-.5<=this.b&&this.b<255.5&&0<=this.opacity&&this.opacity<=1},hex:fz,formatHex:fz,formatHex8:function(){return`#${yz(this.r)}${yz(this.g)}${yz(this.b)}${yz(255*(isNaN(this.opacity)?1:this.opacity))}`},formatRgb:gz,toString:gz})),HM(wz,(function(e,t,n,r){return 1===arguments.length?vz(e):new wz(e,t,n,null==r?1:r)}),jM(qM,{brighter(e){return e=null==e?XM:Math.pow(XM,e),new wz(this.h,this.s,this.l*e,this.opacity)},darker(e){return e=null==e?KM:Math.pow(KM,e),new wz(this.h,this.s,this.l*e,this.opacity)},rgb(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,s=2*n-r;return new pz(Cz(e>=240?e-240:e+120,s,r),Cz(e,s,r),Cz(e<120?e+240:e-120,s,r),this.opacity)},clamp(){return new wz(kz(this.h),Iz(this.s),Iz(this.l),mz(this.opacity))},displayable(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1},formatHsl(){const e=mz(this.opacity);return`${1===e?"hsl(":"hsla("}${kz(this.h)}, ${100*Iz(this.s)}%, ${100*Iz(this.l)}%${1===e?")":`, ${e})`}`}}));const $z=e=>()=>e;function Nz(e,t){var n=t-e;return n?function(e,t){return function(n){return e+n*t}}(e,n):$z(isNaN(e)?t:e)}const Tz=function e(t){var n=function(e){return 1==(e=+e)?Nz:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):$z(isNaN(t)?n:t)}}(t);function r(e,t){var r=n((e=dz(e)).r,(t=dz(t)).r),s=n(e.g,t.g),a=n(e.b,t.b),i=Nz(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=s(t),e.b=a(t),e.opacity=i(t),e+""}}return r.gamma=e,r}(1);function Ez(e){return function(t){var n,r,s=t.length,a=new Array(s),i=new Array(s),o=new Array(s);for(n=0;n<s;++n)r=dz(t[n]),a[n]=r.r||0,i[n]=r.g||0,o[n]=r.b||0;return a=e(a),i=e(i),o=e(o),r.opacity=1,function(e){return r.r=a(e),r.g=i(e),r.b=o(e),r+""}}}Ez((function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),s=e[r],a=e[r+1],i=r>0?e[r-1]:2*s-a,o=r<t-1?e[r+2]:2*a-s;return Sz((n-r/t)*t,i,s,a,o)}})),Ez((function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),s=e[(r+t-1)%t],a=e[r%t],i=e[(r+1)%t],o=e[(r+2)%t];return Sz((n-r/t)*t,s,a,i,o)}}));var Rz=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Az=new RegExp(Rz.source,"g");function _z(e,t){var n,r,s,a=Rz.lastIndex=Az.lastIndex=0,i=-1,o=[],l=[];for(e+="",t+="";(n=Rz.exec(e))&&(r=Az.exec(t));)(s=r.index)>a&&(s=t.slice(a,s),o[i]?o[i]+=s:o[++i]=s),(n=n[0])===(r=r[0])?o[i]?o[i]+=r:o[++i]=r:(o[++i]=null,l.push({i,x:DM(n,r)})),a=Az.lastIndex;return a<t.length&&(s=t.slice(a),o[i]?o[i]+=s:o[++i]=s),o.length<2?l[0]?function(e){return function(t){return e(t)+""}}(l[0].x):function(e){return function(){return e}}(t):(t=l.length,function(e){for(var n,r=0;r<t;++r)o[(n=l[r]).i]=n.x(e);return o.join("")})}function Fz(e,t){var n;return("number"==typeof t?DM:t instanceof uz?Tz:(n=uz(t))?(t=n,Tz):_z)(e,t)}function Dz(e){return function(){this.removeAttribute(e)}}function Oz(e){return function(){this.removeAttributeNS(e.space,e.local)}}function Lz(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttribute(e);return i===a?null:i===r?s:s=t(r=i,n)}}function Mz(e,t,n){var r,s,a=n+"";return function(){var i=this.getAttributeNS(e.space,e.local);return i===a?null:i===r?s:s=t(r=i,n)}}function zz(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttribute(e))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttribute(e)}}function Pz(e,t,n){var r,s,a;return function(){var i,o,l=n(this);if(null!=l)return(i=this.getAttributeNS(e.space,e.local))===(o=l+"")?null:i===r&&o===s?a:(s=o,a=t(r=i,l));this.removeAttributeNS(e.space,e.local)}}function Bz(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&function(e,t){return function(n){this.setAttributeNS(e.space,e.local,t.call(this,n))}}(e,s)),n}return s._value=t,s}function Wz(e,t){var n,r;function s(){var s=t.apply(this,arguments);return s!==r&&(n=(r=s)&&function(e,t){return function(n){this.setAttribute(e,t.call(this,n))}}(e,s)),n}return s._value=t,s}function Uz(e,t){return function(){AM(this,e).delay=+t.apply(this,arguments)}}function Vz(e,t){return t=+t,function(){AM(this,e).delay=t}}function Gz(e,t){return function(){_M(this,e).duration=+t.apply(this,arguments)}}function Hz(e,t){return t=+t,function(){_M(this,e).duration=t}}var jz=rM.prototype.constructor;function qz(e){return function(){this.style.removeProperty(e)}}var Kz=0;function Xz(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function Yz(){return++Kz}var Jz=rM.prototype;Xz.prototype=function(e){return rM().transition(e)}.prototype={constructor:Xz,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=qO(e));for(var r=this._groups,s=r.length,a=new Array(s),i=0;i<s;++i)for(var o,l,u=r[i],c=u.length,h=a[i]=new Array(c),d=0;d<c;++d)(o=u[d])&&(l=e.call(o,o.__data__,d,u))&&("__data__"in o&&(l.__data__=o.__data__),h[d]=l,RM(h[d],t,n,d,h,FM(o,n)));return new Xz(a,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=XO(e));for(var r=this._groups,s=r.length,a=[],i=[],o=0;o<s;++o)for(var l,u=r[o],c=u.length,h=0;h<c;++h)if(l=u[h]){for(var d,p=e.call(l,l.__data__,h,u),f=FM(l,n),g=0,m=p.length;g<m;++g)(d=p[g])&&RM(d,t,n,g,p,f);a.push(p),i.push(l)}return new Xz(a,i,t,n)},selectChild:Jz.selectChild,selectChildren:Jz.selectChildren,filter:function(e){"function"!=typeof e&&(e=YO(e));for(var t=this._groups,n=t.length,r=new Array(n),s=0;s<n;++s)for(var a,i=t[s],o=i.length,l=r[s]=[],u=0;u<o;++u)(a=i[u])&&e.call(a,a.__data__,u,i)&&l.push(a);return new Xz(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,s=n.length,a=Math.min(r,s),i=new Array(r),o=0;o<a;++o)for(var l,u=t[o],c=n[o],h=u.length,d=i[o]=new Array(h),p=0;p<h;++p)(l=u[p]||c[p])&&(d[p]=l);for(;o<r;++o)i[o]=t[o];return new Xz(i,this._parents,this._name,this._id)},selection:function(){return new jz(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=Yz(),r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)if(i=o[u]){var c=FM(i,t);RM(i,e,n,u,o,{time:c.time+c.delay+c.duration,delay:0,duration:c.duration,ease:c.ease})}return new Xz(r,this._parents,e,n)},call:Jz.call,nodes:Jz.nodes,node:Jz.node,size:Jz.size,empty:Jz.empty,each:Jz.each,on:function(e,t){var n=this._id;return arguments.length<2?FM(this.node(),n).on.on(e):this.each(function(e,t,n){var r,s,a=function(e){return(e+"").trim().split(/^|\s+/).every((function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e}))}(t)?AM:_M;return function(){var i=a(this,e),o=i.on;o!==r&&(s=(r=o).copy()).on(t,n),i.on=s}}(n,e,t))},attr:function(e,t){var n=hL(e),r="transform"===n?WM:Fz;return this.attrTween(e,"function"==typeof t?(n.local?Pz:zz)(n,r,GM(this,"attr."+e,t)):null==t?(n.local?Oz:Dz)(n):(n.local?Mz:Lz)(n,r,t))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=hL(e);return this.tween(n,(r.local?Bz:Wz)(r,t))},style:function(e,t,n){var r="transform"==(e+="")?BM:Fz;return null==t?this.styleTween(e,function(e,t){var n,r,s;return function(){var a=kL(this,e),i=(this.style.removeProperty(e),kL(this,e));return a===i?null:a===n&&i===r?s:s=t(n=a,r=i)}}(e,r)).on("end.style."+e,qz(e)):"function"==typeof t?this.styleTween(e,function(e,t,n){var r,s,a;return function(){var i=kL(this,e),o=n(this),l=o+"";return null==o&&(this.style.removeProperty(e),l=o=kL(this,e)),i===l?null:i===r&&l===s?a:(s=l,a=t(r=i,o))}}(e,r,GM(this,"style."+e,t))).each(function(e,t){var n,r,s,a,i="style."+t,o="end."+i;return function(){var l=_M(this,e),u=l.on,c=null==l.value[i]?a||(a=qz(t)):void 0;u===n&&s===c||(r=(n=u).copy()).on(o,s=c),l.on=r}}(this._id,e)):this.styleTween(e,function(e,t,n){var r,s,a=n+"";return function(){var i=kL(this,e);return i===a?null:i===r?s:s=t(r=i,n)}}(e,r,t),n).on("end.style."+e,null)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,function(e,t,n){var r,s;function a(){var a=t.apply(this,arguments);return a!==s&&(r=(s=a)&&function(e,t,n){return function(r){this.style.setProperty(e,t.call(this,r),n)}}(e,a,n)),r}return a._value=t,a}(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(GM(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},textTween:function(e){var t="text";if(arguments.length<1)return(t=this.tween(t))&&t._value;if(null==e)return this.tween(t,null);if("function"!=typeof e)throw new Error;return this.tween(t,function(e){var t,n;function r(){var r=e.apply(this,arguments);return r!==n&&(t=(n=r)&&function(e){return function(t){this.textContent=e.call(this,t)}}(r)),t}return r._value=e,r}(e))},remove:function(){return this.on("end.remove",function(e){return function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}}(this._id))},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,s=FM(this.node(),n).tween,a=0,i=s.length;a<i;++a)if((r=s[a]).name===e)return r.value;return null}return this.each((null==t?UM:VM)(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Uz:Vz)(t,e)):FM(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?Gz:Hz)(t,e)):FM(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(function(e,t){if("function"!=typeof t)throw new Error;return function(){_M(this,e).ease=t}}(t,e)):FM(this.node(),t).ease},easeVarying:function(e){if("function"!=typeof e)throw new Error;return this.each(function(e,t){return function(){var n=t.apply(this,arguments);if("function"!=typeof n)throw new Error;_M(this,e).ease=n}}(this._id,e))},end:function(){var e,t,n=this,r=n._id,s=n.size();return new Promise((function(a,i){var o={value:i},l={value:function(){0==--s&&a()}};n.each((function(){var n=_M(this,r),s=n.on;s!==e&&((t=(e=s).copy())._.cancel.push(o),t._.interrupt.push(o),t._.end.push(l)),n.on=t})),0===s&&a()}))},[Symbol.iterator]:Jz[Symbol.iterator]};var Zz={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function Qz(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))throw new Error(`transition ${t} not found`);return n}rM.prototype.interrupt=function(e){return this.each((function(){!function(e,t){var n,r,s,a=e.__transition,i=!0;if(a){for(s in t=null==t?null:t+"",a)(n=a[s]).name===t?(r=n.state>2&&n.state<5,n.state=6,n.timer.stop(),n.on.call(r?"interrupt":"cancel",e,e.__data__,n.index,n.group),delete a[s]):i=!1;i&&delete e.__transition}}(this,e)}))},rM.prototype.transition=function(e){var t,n;e instanceof Xz?(t=e._id,e=e._name):(t=Yz(),(n=Zz).time=vM(),e=null==e?null:e+"");for(var r=this._groups,s=r.length,a=0;a<s;++a)for(var i,o=r[a],l=o.length,u=0;u<l;++u)(i=o[u])&&RM(i,e,t,u,o,n||Qz(i,t));return new Xz(r,this._parents,e,t)};const{abs:eP,max:tP,min:nP}=Math;function rP(e){return{type:e}}function sP(e){return"string"==typeof e?new tM([[document.querySelector(e)]],[document.documentElement]):new tM([[e]],eM)}["w","e"].map(rP),["n","s"].map(rP),["n","w","e","s","nw","ne","sw","se"].map(rP);var aP=Array.prototype.slice;function iP(e){return function(){return e}}class oP{constructor(e,t){this._context=e,this._x=t}areaStart(){this._line=0}areaEnd(){this._line=NaN}lineStart(){this._point=0}lineEnd(){(this._line||0!==this._line&&1===this._point)&&this._context.closePath(),this._line=1-this._line}point(e,t){switch(e=+e,t=+t,this._point){case 0:this._point=1,this._line?this._context.lineTo(e,t):this._context.moveTo(e,t);break;case 1:this._point=2;default:this._x?this._context.bezierCurveTo(this._x0=(this._x0+e)/2,this._y0,this._x0,t,e,t):this._context.bezierCurveTo(this._x0,this._y0=(this._y0+t)/2,e,this._y0,e,t)}this._x0=e,this._y0=t}}function lP(e){return new oP(e,!0)}const uP=Math.PI,cP=2*uP,hP=1e-6,dP=cP-hP;function pP(e){this._+=e[0];for(let t=1,n=e.length;t<n;++t)this._+=arguments[t]+e[t]}class fP{constructor(e){this._x0=this._y0=this._x1=this._y1=null,this._="",this._append=null==e?pP:function(e){let t=Math.floor(e);if(!(t>=0))throw new Error(`invalid digits: ${e}`);if(t>15)return pP;const n=10**t;return function(e){this._+=e[0];for(let t=1,r=e.length;t<r;++t)this._+=Math.round(arguments[t]*n)/n+e[t]}}(e)}moveTo(e,t){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}`}closePath(){null!==this._x1&&(this._x1=this._x0,this._y1=this._y0,this._append`Z`)}lineTo(e,t){this._append`L${this._x1=+e},${this._y1=+t}`}quadraticCurveTo(e,t,n,r){this._append`Q${+e},${+t},${this._x1=+n},${this._y1=+r}`}bezierCurveTo(e,t,n,r,s,a){this._append`C${+e},${+t},${+n},${+r},${this._x1=+s},${this._y1=+a}`}arcTo(e,t,n,r,s){if(e=+e,t=+t,n=+n,r=+r,(s=+s)<0)throw new Error(`negative radius: ${s}`);let a=this._x1,i=this._y1,o=n-e,l=r-t,u=a-e,c=i-t,h=u*u+c*c;if(null===this._x1)this._append`M${this._x1=e},${this._y1=t}`;else if(h>hP)if(Math.abs(c*o-l*u)>hP&&s){let d=n-a,p=r-i,f=o*o+l*l,g=d*d+p*p,m=Math.sqrt(f),b=Math.sqrt(h),y=s*Math.tan((uP-Math.acos((f+h-g)/(2*m*b)))/2),x=y/b,v=y/m;Math.abs(x-1)>hP&&this._append`L${e+x*u},${t+x*c}`,this._append`A${s},${s},0,0,${+(c*d>u*p)},${this._x1=e+v*o},${this._y1=t+v*l}`}else this._append`L${this._x1=e},${this._y1=t}`}arc(e,t,n,r,s,a){if(e=+e,t=+t,a=!!a,(n=+n)<0)throw new Error(`negative radius: ${n}`);let i=n*Math.cos(r),o=n*Math.sin(r),l=e+i,u=t+o,c=1^a,h=a?r-s:s-r;null===this._x1?this._append`M${l},${u}`:(Math.abs(this._x1-l)>hP||Math.abs(this._y1-u)>hP)&&this._append`L${l},${u}`,n&&(h<0&&(h=h%cP+cP),h>dP?this._append`A${n},${n},0,1,${c},${e-i},${t-o}A${n},${n},0,1,${c},${this._x1=l},${this._y1=u}`:h>hP&&this._append`A${n},${n},0,${+(h>=uP)},${c},${this._x1=e+n*Math.cos(s)},${this._y1=t+n*Math.sin(s)}`)}rect(e,t,n,r){this._append`M${this._x0=this._x1=+e},${this._y0=this._y1=+t}h${n=+n}v${+r}h${-n}Z`}toString(){return this._}}function gP(e){return e[0]}function mP(e){return e[1]}function bP(e){return e.source}function yP(e){return e.target}function xP(e,t,n){this.k=e,this.x=t,this.y=n}function vP(e){return vP="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},vP(e)}function wP(){wP=function(){return t};var e,t={},n=Object.prototype,r=n.hasOwnProperty,s=Object.defineProperty||function(e,t,n){e[t]=n.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",o=a.asyncIterator||"@@asyncIterator",l=a.toStringTag||"@@toStringTag";function u(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{u({},"")}catch(e){u=function(e,t,n){return e[t]=n}}function c(e,t,n,r){var a=t&&t.prototype instanceof b?t:b,i=Object.create(a.prototype),o=new R(r||[]);return s(i,"_invoke",{value:$(e,n,o)}),i}function h(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}t.wrap=c;var d="suspendedStart",p="suspendedYield",f="executing",g="completed",m={};function b(){}function y(){}function x(){}var v={};u(v,i,(function(){return this}));var w=Object.getPrototypeOf,k=w&&w(w(A([])));k&&k!==n&&r.call(k,i)&&(v=k);var I=x.prototype=b.prototype=Object.create(v);function C(e){["next","throw","return"].forEach((function(t){u(e,t,(function(e){return this._invoke(t,e)}))}))}function S(e,t){function n(s,a,i,o){var l=h(e[s],e,a);if("throw"!==l.type){var u=l.arg,c=u.value;return c&&"object"==vP(c)&&r.call(c,"__await")?t.resolve(c.__await).then((function(e){n("next",e,i,o)}),(function(e){n("throw",e,i,o)})):t.resolve(c).then((function(e){u.value=e,i(u)}),(function(e){return n("throw",e,i,o)}))}o(l.arg)}var a;s(this,"_invoke",{value:function(e,r){function s(){return new t((function(t,s){n(e,r,t,s)}))}return a=a?a.then(s,s):s()}})}function $(t,n,r){var s=d;return function(a,i){if(s===f)throw Error("Generator is already running");if(s===g){if("throw"===a)throw i;return{value:e,done:!0}}for(r.method=a,r.arg=i;;){var o=r.delegate;if(o){var l=N(o,r);if(l){if(l===m)continue;return l}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(s===d)throw s=g,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);s=f;var u=h(t,n,r);if("normal"===u.type){if(s=r.done?g:p,u.arg===m)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(s=g,r.method="throw",r.arg=u.arg)}}}function N(t,n){var r=n.method,s=t.iterator[r];if(s===e)return n.delegate=null,"throw"===r&&t.iterator.return&&(n.method="return",n.arg=e,N(t,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var a=h(s,t.iterator,n.arg);if("throw"===a.type)return n.method="throw",n.arg=a.arg,n.delegate=null,m;var i=a.arg;return i?i.done?(n[t.resultName]=i.value,n.next=t.nextLoc,"return"!==n.method&&(n.method="next",n.arg=e),n.delegate=null,m):i:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function E(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(T,this),this.reset(!0)}function A(t){if(t||""===t){var n=t[i];if(n)return n.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var s=-1,a=function n(){for(;++s<t.length;)if(r.call(t,s))return n.value=t[s],n.done=!1,n;return n.value=e,n.done=!0,n};return a.next=a}}throw new TypeError(vP(t)+" is not iterable")}return y.prototype=x,s(I,"constructor",{value:x,configurable:!0}),s(x,"constructor",{value:y,configurable:!0}),y.displayName=u(x,l,"GeneratorFunction"),t.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},t.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):(e.__proto__=x,u(e,l,"GeneratorFunction")),e.prototype=Object.create(I),e},t.awrap=function(e){return{__await:e}},C(S.prototype),u(S.prototype,o,(function(){return this})),t.AsyncIterator=S,t.async=function(e,n,r,s,a){void 0===a&&(a=Promise);var i=new S(c(e,n,r,s),a);return t.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},C(I),u(I,l,"Generator"),u(I,i,(function(){return this})),u(I,"toString",(function(){return"[object Generator]"})),t.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},t.values=A,R.prototype={constructor:R,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=e,this.done=!1,this.delegate=null,this.method="next",this.arg=e,this.tryEntries.forEach(E),!t)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=e)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var n=this;function s(r,s){return o.type="throw",o.arg=t,n.next=r,s&&(n.method="next",n.arg=e),!!s}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],o=i.completion;if("root"===i.tryLoc)return s("end");if(i.tryLoc<=this.prev){var l=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(l&&u){if(this.prev<i.catchLoc)return s(i.catchLoc,!0);if(this.prev<i.finallyLoc)return s(i.finallyLoc)}else if(l){if(this.prev<i.catchLoc)return s(i.catchLoc,!0)}else{if(!u)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return s(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var s=this.tryEntries[n];if(s.tryLoc<=this.prev&&r.call(s,"finallyLoc")&&this.prev<s.finallyLoc){var a=s;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,m):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),m},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),E(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var s=r.arg;E(n)}return s}}throw Error("illegal catch attempt")},delegateYield:function(t,n,r){return this.delegate={iterator:A(t),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=e),m}},t}function kP(e,t){if(e){if("string"==typeof e)return IP(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?IP(e,t):void 0}}function IP(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function CP(e,t,n,r,s,a,i){try{var o=e[a](i),l=o.value}catch(e){return void n(e)}o.done?t(l):Promise.resolve(l).then(r,s)}function SP(e){return function(){var t=this,n=arguments;return new Promise((function(r,s){var a=e.apply(t,n);function i(e){CP(a,r,s,i,o,"next",e)}function o(e){CP(a,r,s,i,o,"throw",e)}i(void 0)}))}}xP.prototype={constructor:xP,scale:function(e){return 1===e?this:new xP(this.k*e,this.x,this.y)},translate:function(e,t){return 0===e&0===t?this:new xP(this.k,this.x+this.k*e,this.y+this.k*t)},apply:function(e){return[e[0]*this.k+this.x,e[1]*this.k+this.y]},applyX:function(e){return e*this.k+this.x},applyY:function(e){return e*this.k+this.y},invert:function(e){return[(e[0]-this.x)/this.k,(e[1]-this.y)/this.k]},invertX:function(e){return(e-this.x)/this.k},invertY:function(e){return(e-this.y)/this.k},rescaleX:function(e){return e.copy().domain(e.range().map(this.invertX,this).map(e.invert,e))},rescaleY:function(e){return e.copy().domain(e.range().map(this.invertY,this).map(e.invert,e))},toString:function(){return"translate("+this.x+","+this.y+") scale("+this.k+")"}},new xP(1,0,0),xP.prototype;var $P=[[-1,-2,-1,0,0,0,1,2,1],[-1,0,1,-2,0,2,-1,0,1],[.11,.11,.11,.11,.11,.11,.11,.11,.11],[0,-1,0,-1,5,-1,0,-1,0],[.3,-.21,.07,-.19,.1,-.01,-.04,-.02,-.08],[0,-2,-2,2,0,-2,2,2,2],[.07,-.19,.1,-.02,-.08,.3,-.21,.1,-.01],[-1,2,-1,0,0,0,1,-2,1],[-.5,0,.5,-1.5,0,1.5,-.5,0,.5],[.2,.1,.2,.1,-.8,.1,.2,.1,.2],[.5,-.3,-.2,-.4,1,-.4,-.2,-.3,.5],[-.1,-.2,-.1,0,.5,0,-.1,-.2,-.1],[.4,.2,0,.2,-.5,-.2,0,-.2,-.4],[-.3,.1,-.3,.1,.8,.1,-.3,.1,-.3],[-1,.5,1,.5,-2,.5,1,.5,-1],[.6,.1,.6,.1,-.9,.1,.6,.1,.6],[-.7,-.3,-.7,-.3,1,-.3,-.7,-.3,-.7],[.1,-.2,.1,-.2,.6,-.2,.1,-.2,.1],[-.5,-.2,-.5,-.2,.9,-.2,-.5,-.2,-.5]];function NP(){return(NP=SP(wP().mark((function e(t){var n,r,s,a,i,o,l;return wP().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.container,r=t.imageSrc){e.next=4;break}return console.error("El parámetro imageSrc es undefined."),e.abrupt("return");case 4:if(s=document.getElementById(n)){e.next=8;break}return console.error("No se encontró un elemento con id '".concat(n,"'.")),e.abrupt("return");case 8:return a=1900,i=800,o=sP(s).append("svg").attr("width",a).attr("height",i),e.prev=11,e.next=14,TP(r);case 14:l=e.sent,e.next=21;break;case 17:return e.prev=17,e.t0=e.catch(11),console.error("Error al cargar la imagen:",e.t0),e.abrupt("return");case 21:RP(o,[{type:"input",label:"Entrada",subtitle:"[64x64]",nodes:3},{type:"conv",label:"Convolución 1",subtitle:"[62x62]",nodes:10},{type:"relu",label:"ReLU 1",subtitle:"[62x62]",nodes:10},{type:"conv",label:"Convolución 2",subtitle:"[60x60]",nodes:10},{type:"relu",label:"ReLU 2",subtitle:"[60x60]",nodes:10},{type:"pool",label:"MaxPooling 1",subtitle:"[30x30]",nodes:10},{type:"conv",label:"Convolución 3",subtitle:"[28x28]",nodes:10},{type:"relu",label:"ReLU 3",subtitle:"[28x28]",nodes:10},{type:"conv",label:"Convolución 4",subtitle:"[26x26]",nodes:10},{type:"relu",label:"ReLU 4",subtitle:"[26x26]",nodes:10},{type:"pool",label:"MaxPooling 2",subtitle:"[13x13]",nodes:10},{type:"output",label:"Salida",subtitle:"",nodes:1}],[[0],[1,2],[3,4,5],[6,7],[8,9,10],[11]],a,i,l,r);case 24:case"end":return e.stop()}}),e,null,[[11,17]])})))).apply(this,arguments)}function TP(e){return EP.apply(this,arguments)}function EP(){return(EP=SP(wP().mark((function e(t){var n,r;return wP().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(n=new Image).crossOrigin="Anonymous",n.src=t,e.next=5,new Promise((function(e,t){n.onload=function(){return e()},n.onerror=function(e){return t(e)}}));case 5:return r=oi(n),r=(r=Au.resizeBilinear(r,[64,64])).toFloat().div(Ra(255)),e.abrupt("return",r);case 9:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function RP(e,t,n,r,s,a,i){var o=0,l=[],u=function(e){var t,n,r=(t=e.shape,n=3,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,s,a,i,o=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(o.push(r.value),o.length!==t);l=!0);}catch(e){u=!0,s=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw s}}return o}}(t,n)||kP(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),s=r[0],a=r[1];return{rChannel:(r[2],e.slice([0,0,0],[s,a,1])),gChannel:e.slice([0,0,1],[s,a,1]),bChannel:e.slice([0,0,2],[s,a,1])}}(a),c=u.rChannel,h=u.gChannel,d=u.bChannel,p=a.mean(2).expandDims(2),f={};f[0]=p;for(var g=0;g<n.length;g++){for(var m=n[g],b=0;b<m.length;b++){var y=m[b];l[y]=o,b<m.length-1&&(o+=1)}g<n.length-1&&(o+=3)}var x=(r-160)/o,v=t.map((function(e,t){return{x:80+l[t]*x,layer:e,layerIndex:t}})),w=[],k=[],I={};v.forEach((function(e){for(var n=e.x,r=e.layer,a=e.layerIndex,i=r.nodes,o=s/(i+1),l=o,u=[],p=0;p<i;p++){var g={id:"layer".concat(a,"_node").concat(p),layerIndex:a,indexInLayer:p,x:n,y:l+p*o,label:r.label,type:r.type,imageTensor:null};w.push(g),u.push(g)}if("input"===r.type)for(var m=[c,h,d],b=0;b<u.length;b++)b<m.length&&(u[b].imageTensor=m[b]);else if("conv"===r.type&&1===a){for(var y=f[a-1],x=($P.slice(0,i),[]),v=0;v<i;v++){var C=AP(y,$P[v%$P.length]);x.push(C),u[v].imageTensor=C}f[a]=Il(x,-1),f[a-1]&&a-1!=-1&&(f[a-1].dispose(),f[a-1]=null)}else if("relu"===r.type){for(var S=f[a-1].relu(),$=S.unstack(-1),N=0;N<u.length;N++)N<$.length&&(u[N].imageTensor=$[N]);f[a]=S,f[a-1]&&(f[a-1].dispose(),f[a-1]=null)}else if("conv"!==r.type||3!==a&&6!==a&&8!==a){if("pool"===r.type){var T=f[a-1],E=T;3===T.rank&&(E=T.expandDims(0));for(var R=E.maxPool([2,2],[2,2],"same").squeeze(),A=R.unstack(-1),_=0;_<u.length;_++)_<A.length&&(u[_].imageTensor=A[_]);f[a]=R,E!==T&&E.dispose(),f[a-1]&&(f[a-1].dispose(),f[a-1]=null)}}else{for(var F=f[a-1],D=F.shape[2],O=i,L=[],M=0;M<O;M++){for(var z=$P[(M+3)%$P.length],P=[],B=0;B<D;B++)P.push.apply(P,function(e){if(Array.isArray(e))return IP(e)}(H=z)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(H)||kP(H)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}());var W=Nl(P,[3,3,10,1]),U=F.expandDims(0),V=U.conv2d(W,[1,1],"same").squeeze();u[M].imageTensor=V,L.push(V),W.dispose(),U.dispose()}var G=Il(L,-1);f[a]=G,f[a-1]&&(f[a-1].dispose(),f[a-1]=null)}var H,j,q;if(I[a]=u,a>0){var K=I[a-1],X=(j=t[a-1].type,q=r.type,"conv"===j&&"relu"===q||"relu"===j&&"pool"===q?"one-to-one":"all-to-all");if("one-to-one"===X)for(var Y=Math.min(K.length,u.length),J=0;J<Y;J++)k.push({source:K[J],target:u[J],connectionType:X});else"all-to-all"===X&&u.forEach((function(e){K.forEach((function(t){k.push({source:t,target:e,connectionType:X})}))}))}}));var C=e.selectAll(".layer-label").data(v).enter().append("g").attr("class","layer-label").attr("transform",(function(e){return"translate(".concat(e.x,", 20)")}));C.append("text").attr("text-anchor","middle").text((function(e){return e.layer.label})).style("font-size","12px").style("font-weight","bold"),C.append("text").attr("text-anchor","middle").attr("dy","1.2em").text((function(e){return e.layer.subtitle})).style("font-size","10px").style("font-weight","normal");var S=function(e){let t=bP,n=yP,r=gP,s=mP,a=null,i=null,o=function(e){let t=3;return e.digits=function(n){if(!arguments.length)return t;if(null==n)t=null;else{const e=Math.floor(n);if(!(e>=0))throw new RangeError(`invalid digits: ${n}`);t=e}return e},()=>new fP(t)}(l);function l(){let l;const u=aP.call(arguments),c=t.apply(this,u),h=n.apply(this,u);if(null==a&&(i=e(l=o())),i.lineStart(),u[0]=c,i.point(+r.apply(this,u),+s.apply(this,u)),u[0]=h,i.point(+r.apply(this,u),+s.apply(this,u)),i.lineEnd(),l)return i=null,l+""||null}return l.source=function(e){return arguments.length?(t=e,l):t},l.target=function(e){return arguments.length?(n=e,l):n},l.x=function(e){return arguments.length?(r="function"==typeof e?e:iP(+e),l):r},l.y=function(e){return arguments.length?(s="function"==typeof e?e:iP(+e),l):s},l.context=function(t){return arguments.length?(null==t?a=i=null:i=e(a=t),l):a},l}(lP).x((function(e){return e.x})).y((function(e){return e.y})),$=e.select("defs");$.empty()&&($=e.append("defs"));function N(e){var t=e.imageTensor;if(t){var n=t.sub(t.min()).div(t.max().sub(t.min())).clipByValue(0,1);(async function(e){let t=Ts(e,"img","toPixels");if(!(e instanceof Qr)){const e=t;t=va(e,"int32"),e.dispose()}!function(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}(t);const[n,r]=t.shape.slice(0,2),s=2===t.rank?1:t.shape[2],a=await t.data(),i="float32"===t.dtype?255:1,o=new Uint8ClampedArray(r*n*4);for(let e=0;e<n*r;++e){const n=[0,0,0,255];for(let r=0;r<s;r++){const o=a[e*s+r];if("float32"===t.dtype){if(o<0||o>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${o}.`)}else if("int32"===t.dtype&&(o<0||o>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${o}.`);1===s?(n[0]=o*i,n[1]=o*i,n[2]=o*i):n[r]=o*i}const r=4*e;o[r+0]=Math.round(n[0]),o[r+1]=Math.round(n[1]),o[r+2]=Math.round(n[2]),o[r+3]=Math.round(n[3])}return t!==e&&t.dispose(),o})(n.squeeze()).then((function(t){var r=document.createElement("canvas");r.width=n.shape[1],r.height=n.shape[0];var s=r.getContext("2d");s.imageSmoothingEnabled=!1;var a=s.createImageData(r.width,r.height);a.data.set(t),s.putImageData(a,0,0);var i=r.toDataURL();$.append("pattern").attr("id","pattern-".concat(e.id)).attr("patternUnits","objectBoundingBox").attr("width",1).attr("height",1).append("image").attr("xlink:href",i).attr("width",40).attr("height",40).attr("preserveAspectRatio","none")}))}}w.forEach((function(e){e.imageTensor&&N(e)})),[c,h,d].forEach((function(e){return e.dispose()})),p.dispose(),e.selectAll("path").data(k).enter().append("path").attr("d",(function(e){return S({source:{x:e.source.x+20,y:e.source.y},target:{x:e.target.x-20,y:e.target.y}})})).attr("stroke","#e0e0e0").attr("stroke-width",1).attr("fill","none");var T=w.filter((function(e){return"output"!==e.type})),E=w.find((function(e){return"output"===e.type}));e.selectAll("rect").data(T).enter().append("rect").attr("x",(function(e){return e.x-20})).attr("y",(function(e){return e.y-20})).attr("width",40).attr("height",40).attr("fill",(function(e){return e.imageTensor?"url(#pattern-".concat(e.id,")"):"#69b3a2"})).on("mouseover",(function(t,n){e.selectAll("path").filter((function(e){return e.target===n})).transition().duration(200).attr("stroke","#aaa").attr("stroke-width",2);var r=k.filter((function(e){return e.target===n})).map((function(e){return e.source.id}));e.selectAll("rect").filter((function(e){return e.id===n.id||r.includes(e.id)})).transition().duration(200).attr("stroke","#aaa").attr("stroke-width",2)})).on("mouseout",(function(t,n){e.selectAll("path").filter((function(e){return e.target===n})).transition().duration(200).attr("stroke","#e0e0e0").attr("stroke-width",1);var r=k.filter((function(e){return e.target===n})).map((function(e){return e.source.id}));e.selectAll("rect").filter((function(e){return e.id===n.id||r.includes(e.id)})).transition().duration(200).attr("stroke","none").attr("stroke-width",0)})).on("click",(function(e,t){"conv"!==t.type&&"relu"!==t.type&&"pool"!==t.type||function(e,t){var n,r,s,a;n=t,r=document.getElementById("modal"),s=document.getElementById("modal-body"),a=document.getElementById("close-modal"),"conv"===n.type?(s.innerHTML="\n        <h2>Capa: ".concat(n.label,'</h2>\n        <div id="convolution-container"></div>\n      '),r.style.display="block",a.onclick=function(){r.style.display="none",s.innerHTML=""},r.querySelector(".modal-overlay").onclick=function(){r.style.display="none",s.innerHTML=""},CNNBlackBox.startConvolution({container:"convolution-container",imageSrc:i,filter:[.3,-.21,.07,-.19,.1,-.01,-.04,-.02,-.08]})):"relu"===n.type?(s.innerHTML="\n        <h2>Capa: ".concat(n.label,'</h2>\n        <div id="relu-container"></div>\n      '),r.style.display="block",a.onclick=function(){r.style.display="none",s.innerHTML=""},r.querySelector(".modal-overlay").onclick=function(){r.style.display="none",s.innerHTML=""},CNNBlackBox.startReLU({container:"relu-container",imageSrc:i,filter:[.3,-.21,.07,-.19,.1,-.01,-.04,-.02,-.08]})):"pool"===n.type&&(s.innerHTML="\n        <h2>Capa: ".concat(n.label,'</h2>\n        <div id="max-pooling-container"></div>\n      '),r.style.display="block",a.onclick=function(){r.style.display="none",s.innerHTML=""},r.querySelector(".modal-overlay").onclick=function(){r.style.display="none",s.innerHTML=""},CNNBlackBox.startMaxPooling({container:"max-pooling-container",imageSrc:i,filter:[.3,-.21,.07,-.19,.1,-.01,-.04,-.02,-.08]}))}(0,t)})),E&&e.append("text").attr("class","output-label").attr("id","output-text").attr("x",E.x+15).attr("y",E.y).attr("dy",".35em").attr("text-anchor","middle").text("Predicción").style("font-size","14px").style("font-weight","normal").style("fill","#444444").on("mouseover",(function(){return function(t){e.selectAll("path").filter((function(e){return e.target===t})).transition().duration(200).attr("stroke","#aaa").attr("stroke-width",2);var n=k.filter((function(e){return e.target===t})).map((function(e){return e.source.id}));e.selectAll("rect").filter((function(e){return e.id===t.id||n.includes(e.id)})).transition().duration(200).attr("stroke","#aaa").attr("stroke-width",2),e.select("#output-text").transition().duration(200).style("font-weight","bold")}(E)})).on("mouseout",(function(){return function(t){e.selectAll("path").filter((function(e){return e.target===t})).transition().duration(200).attr("stroke","#e0e0e0").attr("stroke-width",1);var n=k.filter((function(e){return e.target===t})).map((function(e){return e.source.id}));e.selectAll("rect").filter((function(e){return e.id===t.id||n.includes(e.id)})).transition().duration(200).attr("stroke","none").attr("stroke-width",0),e.select("#output-text").transition().duration(200).style("font-weight","normal")}(E)})),e.selectAll(".layer-label").data(v).enter().append("text").attr("class","layer-label").attr("x",(function(e){return e.x})).attr("y",20).attr("text-anchor","middle").text((function(e){return e.layer.label})).style("font-size","12px").style("font-weight","bold")}function AP(e,t){var n=e;2===e.rankType&&(n=e.expandDims(-1)),3===e.rankType&&(n=n.expandDims(0));var r=Nl(t,[3,3,1,1]),s=n.conv2d(r,[1,1],"same").squeeze();return r.dispose(),s}var _P={startConvolution:function(e){var t,n,r,s=e.container,a=e.imageSrc,i=e.filter,o=e.channel,l=void 0===o?"grayscale":o,u=[],c=[],h=64,d=64,p=256,f=256,g=0,m=document.getElementById(s),b=document.createElement("div");b.style.display="flex",b.style.alignItems="end",b.style.justifyContent="center",b.style.gap="20px",m.appendChild(b);var y=document.createElement("div");y.style.display="flex",y.style.flexDirection="column",y.style.alignItems="center";var x=document.createElement("div");x.style.position="relative",x.style.display="inline-block";var v=document.createElement("div");v.textContent="Entrada (64, 64)",v.style.textAlign="center",v.style.marginBottom="5px";var w=document.createElement("div");w.style.display="flex",w.style.flexDirection="column",w.style.alignItems="center";var k=document.createElement("div");k.style.position="relative",k.style.display="inline-block";var I=document.createElement("div");I.textContent="Salida (62, 62)",I.style.textAlign="center",I.style.marginBottom="5px";var C=document.createElement("canvas");C.width=p,C.height=f,C.style.border="1px solid black",y.appendChild(v),x.appendChild(C),y.appendChild(x);var S=document.createElement("canvas");S.width=p,S.height=f,S.style.border="1px solid black",w.appendChild(I),k.appendChild(S),w.appendChild(k);var $=C.getContext("2d");$.imageSmoothingEnabled=!1;var N=S.getContext("2d");N.imageSmoothingEnabled=!1;var T=document.createElement("canvas");T.width=p,T.height=f,T.style.position="absolute",T.style.left="0",T.style.top="0",T.style.pointerEvents="none",x.appendChild(T);var E=document.createElement("canvas");E.width=p,E.height=f,E.style.position="absolute",E.style.left="0",E.style.top="0",E.style.pointerEvents="none",k.appendChild(E);var R=document.createElement("div");R.style.display="flex",R.style.alignItems="center",R.style.justifyContent="center",b.appendChild(y),b.appendChild(R),b.appendChild(w),function(){var e=40/3,s=255.00000000000003;(t=document.createElementNS("http://www.w3.org/2000/svg","svg")).setAttribute("width",240),t.setAttribute("height",s),R.appendChild(t);for(var a=0;a<9;a++){var i=a%3*80+15,o=73.33333333333334*Math.floor(a/3),l=document.createElementNS("http://www.w3.org/2000/svg","g");l.setAttribute("transform","translate(".concat(i,", ").concat(o,")")),t.appendChild(l);var h=document.createElementNS("http://www.w3.org/2000/svg","rect");h.setAttribute("width",40),h.setAttribute("height",40),h.setAttribute("fill","rgba(0, 0, 0, 0.75)"),h.setAttribute("stroke","black"),h.setAttribute("rx","2"),h.setAttribute("ry","2"),h.setAttribute("stroke-width","1"),l.appendChild(h);var d=document.createElementNS("http://www.w3.org/2000/svg","text");d.setAttribute("x",20),d.setAttribute("y",22),d.setAttribute("font-size","14px"),d.setAttribute("fill","black"),d.setAttribute("text-anchor","middle"),d.setAttribute("dominant-baseline","middle"),d.textContent="0.00",l.appendChild(d),u.push(d);var p=document.createElementNS("http://www.w3.org/2000/svg","text");p.setAttribute("x",-5),p.setAttribute("y",42+e/2),p.setAttribute("font-size","12px"),p.setAttribute("fill","black"),p.setAttribute("text-anchor","middle"),p.setAttribute("dominant-baseline","middle"),p.textContent="×",l.appendChild(p);var f=document.createElementNS("http://www.w3.org/2000/svg","rect");f.setAttribute("x",0),f.setAttribute("y",40),f.setAttribute("width",40),f.setAttribute("height",e),f.setAttribute("fill","rgba(255, 255, 255, 1)"),f.setAttribute("stroke-width","0"),l.appendChild(f);var g=document.createElementNS("http://www.w3.org/2000/svg","text");g.setAttribute("x",20),g.setAttribute("y",42+e/2),g.setAttribute("font-size","14px"),g.setAttribute("fill","black"),g.setAttribute("text-anchor","middle"),g.setAttribute("dominant-baseline","middle"),g.textContent="0",l.appendChild(g),c.push(g);var m=document.createElementNS("http://www.w3.org/2000/svg","text");m.setAttribute("x",58),m.setAttribute("y",22),m.setAttribute("font-size","18px"),m.setAttribute("fill","black"),m.setAttribute("text-anchor","middle"),m.setAttribute("dominant-baseline","middle"),m.textContent=a<8?"+":"=",l.appendChild(m)}var b=document.createElementNS("http://www.w3.org/2000/svg","g");b.setAttribute("transform","translate(".concat(95,", ").concat(s-40,")")),t.appendChild(b),(r=document.createElementNS("http://www.w3.org/2000/svg","rect")).setAttribute("width",40),r.setAttribute("height",40),r.setAttribute("fill","rgba(0, 0, 0, 0.75)"),r.setAttribute("stroke","black"),r.setAttribute("rx","2"),r.setAttribute("ry","2"),b.appendChild(r),(n=document.createElementNS("http://www.w3.org/2000/svg","text")).setAttribute("x",20),n.setAttribute("y",20),n.setAttribute("font-size","14px"),n.setAttribute("text-anchor","middle"),n.setAttribute("dominant-baseline","middle"),n.textContent="0.00",b.appendChild(n)}(),w.appendChild(k);var A=new Image;function _(e,t,n,r,s,a,i,o,l,u,c){var h=t.getBoundingClientRect(),d=e.clientX-h.left,p=e.clientY-h.top,f=Math.floor(d/4),g=Math.floor(p/4);if(f>=0&&f<s-2&&g>=0&&g<a-2){for(var m=f+1,b=g+1,y=[],x=0,v=0,w=-1;w<=1;w++)for(var k=-1;k<=1;k++){var I=m+k,C=b+w,S=r[4*(C*s+I)],$=i[3*(w+1)+(k+1)];y.push({grayValue:S,filterValue:$}),x+=(S/127.5-1)*$,c[v].x=I,c[v].y=C,v++}F(y,x,o),"input"===u?(D(n,c),L(E),O(E,f,g)):"output"===u&&(O(n,f,g),L(T),D(T,c))}}function F(e,t,s){for(var a=0;a<9;a++){var i=e[a],o=i.grayValue,l=i.filterValue,h=o/127.5-1;u[a].textContent="".concat(h.toFixed(2));var d="rgba(".concat(o,", ").concat(o,", ").concat(o,", 0.75)");u[a].previousSibling.setAttribute("fill",d),c[a].textContent=l;var p=void 0;if(l<0){var f=Math.floor(255*(1+l/2));p="rgb(255, 255, ".concat(f,")")}else{var g=Math.floor(255*(1-l/2));p="rgb(".concat(g,", 255, ").concat(g,")")}c[a].previousSibling.setAttribute("fill",p)}var m,b=t/s;if(n.textContent="".concat(b.toFixed(2)),b<0){var y=b+1,x=255*y,v=255*y;m="rgb(".concat(Math.round(255),", ").concat(Math.round(x),", ").concat(Math.round(v),")")}else{var w=1-b,k=255*w,I=255*w;m="rgb(".concat(Math.round(k),", ").concat(Math.round(I),", ").concat(Math.round(255),")")}r.setAttribute("fill",m)}function D(e,t){var n=e.getContext("2d");n.clearRect(0,0,e.width,e.height),n.save(),n.scale(4,4),n.fillStyle="rgba(64, 64, 64, 0.7)",n.lineWidth=1/4,t.forEach((function(e){var t=e.x,r=e.y;n.strokeRect(t,r,1,1)})),n.restore()}function O(e,t,n){var r=e.getContext("2d");r.clearRect(0,0,e.width,e.height),r.save(),r.scale(4,4),r.fillStyle="rgba(64, 64, 64, 0.7)",r.lineWidth=1/4,r.strokeRect(t+.25,n+.25,1,1),r.restore()}function L(e){e.getContext("2d").clearRect(0,0,e.width,e.height)}A.src=a,A.crossOrigin="anonymous",A.onload=MO(OO().mark((function e(){var t,n,r,s,a,o,u,c,p,f,m,b,y,x,v,w,k,I,R,L,M,z,P,B,W,U,V,G,H,j,q,K,X,Y,J,Z,Q,ee,te,ne,re,se,ae,ie,oe,le,ue,ce,he,de,pe,fe;return OO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(v=function(e,t){for(var n=new Float32Array(e.length/4),r=0;r<e.length;r+=4)n[r/4]=e[r+t];return n},(t=document.createElement("canvas")).width=h,t.height=d,(n=t.getContext("2d",{willReadFrequently:!0})).drawImage(A,0,0,h,d),r=n.getImageData(0,0,h,d),s=r.data,"grayscale"===l)for(a=new ImageData(h,d),o=0;o<s.length;o+=4)u=s[o],c=s[o+1],p=s[o+2],f=Math.round(.299*u+.587*c+.114*p),a.data[o]=f,a.data[o+1]=f,a.data[o+2]=f,a.data[o+3]=255;else if("R"===l||"G"===l||"B"===l)for(m={R:0,G:1,B:2}[l],a=new ImageData(h,d),b=0;b<s.length;b+=4)y=s[b+m],a.data[b]="R"===l?y:0,a.data[b+1]="G"===l?y:0,a.data[b+2]="B"===l?y:0,a.data[b+3]=255;else a=r;return $.putImageData(a,0,0),$.save(),$.scale(4,4),$.drawImage(C,0,0),$.restore(),x=Math.sqrt(i.length),"grayscale"===l?w=(w=oi(t,1).toFloat().div(127.5).sub(1)).expandDims(0):"R"!==l&&"G"!==l&&"B"!==l||(k={R:0,G:1,B:2}[l],I=v(r.data,k),w=$l(I,[d,h],"float32").div(127.5).sub(1).expandDims(0).expandDims(-1)),R=Nl(i,[x,x,1,1]),L=ao(w,R,[1,1],"same"),e.next=20,Eo(Va(L)).data();case 20:return g=e.sent[0],L=(L=L.div(g)).squeeze(),e.next=25,L.data();case 25:for(M=e.sent,z=new ImageData(h,d),P=0;P<M.length;P++)B=M[P],W=void 0,U=void 0,V=void 0,B<0?(W=255,U=0+255*(G=B+1),V=0+255*G):(W=255*(H=1-B),U=255*H,V=255),j=4*P,z.data[j]=Math.round(W),z.data[j+1]=Math.round(U),z.data[j+2]=Math.round(V),z.data[j+3]=255;for(q=new ImageData(62,62),K=1;K<63;K++)for(X=1;X<63;X++)Y=4*(K*h+X),J=4*(62*(K-1)+(X-1)),q.data[J]=z.data[Y],q.data[J+1]=z.data[Y+1],q.data[J+2]=z.data[Y+2],q.data[J+3]=z.data[Y+3];for(S.width=62,S.height=62,E.width=248,E.height=248,S.style.width="".concat(248,"px"),S.style.height="".concat(248,"px"),E.style.width="".concat(248,"px"),E.style.height="".concat(248,"px"),N.imageSmoothingEnabled=!1,S.style.imageRendering="pixelated",E.style.imageRendering="pixelated",N.putImageData(q,0,0),Z=[],Q=0;Q<9;Q++)ee={x:0,y:0},Z.push(ee);for(te=Math.floor(32),ne=Math.floor(32),re=te+1,se=ne+1,ae=[],ie=0,oe=0,le=-1;le<=1;le++)for(ue=-1;ue<=1;ue++)de=s[4*((he=se+le)*h+(ce=re+ue))],pe=de,fe=i[3*(le+1)+(ue+1)],ae.push({grayValue:pe,filterValue:fe}),ie+=(pe/127.5-1)*fe,Z[oe].x=ce,Z[oe].y=he,oe++;F(ae,ie,g),D(T,Z),O(E,te,ne),C.addEventListener("mousemove",(function(e){_(e,C,T,s,h,d,i,g,0,"input",Z)})),S.addEventListener("mousemove",(function(e){_(e,S,E,s,h,d,i,g,0,"output",Z)}));case 61:case"end":return e.stop()}}),e)}))),A.onerror=function(){console.error("Failed to load image. Check the image URL or CORS settings.")}},startReLU:function(e){var t=e.container,n=e.imageSrc,r=e.filter,s=e.channel,a=void 0===s?"grayscale":s,i=0,o=document.getElementById(t),l=document.createElement("div");l.style.display="flex",l.style.alignItems="center",l.style.justifyContent="center",l.style.gap="20px",o.appendChild(l);var u=document.createElement("div");u.style.display="flex",u.style.flexDirection="column",u.style.alignItems="center";var c=document.createElement("div");c.style.position="relative",c.style.display="inline-block";var h=document.createElement("div");h.textContent="Entrada (62, 62)",h.style.textAlign="center",h.style.marginBottom="5px";var d=document.createElement("div");d.style.display="flex",d.style.flexDirection="column",d.style.alignItems="center";var p=document.createElement("div");p.style.position="relative",p.style.display="inline-block";var f=document.createElement("div");f.textContent="Salida ReLU (62, 62)",f.style.textAlign="center",f.style.marginBottom="5px";var g=document.createElement("canvas");g.width=62,g.height=62,g.style.width="".concat(248,"px"),g.style.height="".concat(248,"px"),g.style.border="1px solid black",g.style.imageRendering="pixelated",u.appendChild(h),c.appendChild(g),u.appendChild(c);var m=document.createElement("canvas");m.width=62,m.height=62,m.style.width="".concat(248,"px"),m.style.height="".concat(248,"px"),m.style.border="1px solid black",m.style.imageRendering="pixelated",d.appendChild(f),p.appendChild(m),d.appendChild(p);var b=g.getContext("2d");b.imageSmoothingEnabled=!1;var y=m.getContext("2d");y.imageSmoothingEnabled=!1;var x=document.createElement("canvas");x.width=g.width,x.height=g.height,x.style.width=g.style.width,x.style.height=g.style.height,x.style.position="absolute",x.style.left="0",x.style.top="0",x.style.pointerEvents="none",c.appendChild(x);var v=document.createElement("canvas");v.width=m.width,v.height=m.height,v.style.width=m.style.width,v.style.height=m.style.height,v.style.position="absolute",v.style.left="0",v.style.top="0",v.style.pointerEvents="none",p.appendChild(v);var w=document.createElement("div");w.style.display="flex",w.style.alignItems="center",w.style.justifyContent="center",l.appendChild(u),l.appendChild(w),l.appendChild(d);var k,I,C,S,$,N,T,E=document.createElement("div");E.style.marginTop="10px",E.style.textAlign="center",function(){(k=document.createElementNS("http://www.w3.org/2000/svg","svg")).setAttribute("width",240),k.setAttribute("height",60),w.appendChild(k);var e=document.createElementNS("http://www.w3.org/2000/svg","text");e.setAttribute("x",5),e.setAttribute("y",30),e.setAttribute("font-size","18px"),e.setAttribute("text-anchor","start"),e.setAttribute("dominant-baseline","middle"),e.textContent="max(",k.appendChild(e);var t=document.createElementNS("http://www.w3.org/2000/svg","g");t.setAttribute("transform","translate(".concat(50,", ").concat(10,")")),k.appendChild(t);var n=document.createElementNS("http://www.w3.org/2000/svg","rect");n.setAttribute("width",40),n.setAttribute("height",40),n.setAttribute("fill","white"),n.setAttribute("stroke","black"),n.setAttribute("rx","2"),n.setAttribute("ry","2"),t.appendChild(n);var r=document.createElementNS("http://www.w3.org/2000/svg","text");r.setAttribute("x",20),r.setAttribute("y",20),r.setAttribute("font-size","14px"),r.setAttribute("text-anchor","middle"),r.setAttribute("dominant-baseline","middle"),r.textContent="0.00",t.appendChild(r);var s=document.createElementNS("http://www.w3.org/2000/svg","text");s.setAttribute("x",95),s.setAttribute("y",30),s.setAttribute("font-size","18px"),s.setAttribute("text-anchor","start"),s.setAttribute("dominant-baseline","middle"),s.textContent=",",k.appendChild(s);var a=document.createElementNS("http://www.w3.org/2000/svg","g");a.setAttribute("transform","translate(".concat(105,", ").concat(10,")")),k.appendChild(a),(S=document.createElementNS("http://www.w3.org/2000/svg","rect")).setAttribute("width",40),S.setAttribute("height",40),S.setAttribute("fill","white"),S.setAttribute("stroke","black"),S.setAttribute("rx","2"),S.setAttribute("ry","2"),a.appendChild(S),(I=document.createElementNS("http://www.w3.org/2000/svg","text")).setAttribute("x",20),I.setAttribute("y",20),I.setAttribute("font-size","14px"),I.setAttribute("text-anchor","middle"),I.setAttribute("dominant-baseline","middle"),I.textContent="0.00",a.appendChild(I);var i=document.createElementNS("http://www.w3.org/2000/svg","text");i.setAttribute("x",150),i.setAttribute("y",30),i.setAttribute("font-size","18px"),i.setAttribute("text-anchor","start"),i.setAttribute("dominant-baseline","middle"),i.textContent=") =",k.appendChild(i);var o=document.createElementNS("http://www.w3.org/2000/svg","g");o.setAttribute("transform","translate(".concat(185,", ").concat(10,")")),k.appendChild(o),($=document.createElementNS("http://www.w3.org/2000/svg","rect")).setAttribute("width",40),$.setAttribute("height",40),$.setAttribute("fill","white"),$.setAttribute("stroke","black"),$.setAttribute("rx","2"),$.setAttribute("ry","2"),o.appendChild($),(C=document.createElementNS("http://www.w3.org/2000/svg","text")).setAttribute("x",20),C.setAttribute("y",20),C.setAttribute("font-size","14px"),C.setAttribute("text-anchor","middle"),C.setAttribute("dominant-baseline","middle"),C.textContent="0.00",o.appendChild(C)}();var R=new Image;function A(e,t,n,r,s,a,i){var o=t.getBoundingClientRect(),l=e.clientX-o.left,u=e.clientY-o.top,c=Math.floor(l/4),h=Math.floor(u/4),d=t.width,p=t.height;if(c>=0&&c<d&&h>=0&&h<p){_(n,c,h),_(r,c,h);var f=h*d+c;!function(e,t){if(null===e||null===t)I.textContent="",C.textContent="",S.setAttribute("fill","lightgray"),$.setAttribute("fill","lightgray");else{var n,r;if(I.textContent=e.toFixed(2),C.textContent=t.toFixed(2),e<0){var s=e/-1,a=255*(1-s),i=255*(1-s);n="rgb(".concat(Math.round(255),", ").concat(Math.round(a),", ").concat(Math.round(i),")")}else{var o=1-e,l=255*o,u=255*o;n="rgb(".concat(Math.round(l),", ").concat(Math.round(u),", ").concat(Math.round(255),")")}if(S.setAttribute("fill",n),0===t)r="rgb(255, 255, 255)";else{var c=1-t,h=255*c,d=255*c;r="rgb(".concat(Math.round(h),", ").concat(Math.round(d),", ").concat(Math.round(255),")")}$.setAttribute("fill",r)}}(a[f],i[f])}}function _(e,t,n){var r=e.getContext("2d");r.clearRect(0,0,e.width,e.height),r.save(),r.scale(4,4),r.fillStyle="rgba(64, 64, 64, 0.7)",r.lineWidth=1/4,r.strokeRect(t+.25,n+.25,1,1),r.restore()}function F(e,t){for(var n=new Float32Array(e.length/4),r=0;r<e.length;r+=4)n[r/4]=e[r+t];return n}R.src=n,R.crossOrigin="anonymous",R.onload=WO(PO().mark((function e(){var t,n,s,o,l,u,c,h,d,p,f,w,k,I,C,S,$,E,_,D,O,L,M,z,P,B;return PO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(t=document.createElement("canvas")).width=64,t.height=64,(n=t.getContext("2d",{willReadFrequently:!0})).drawImage(R,0,0,64,64),s=n.getImageData(0,0,64,64),o=Math.sqrt(r.length),"grayscale"===a?l=(l=oi(t,1).toFloat().div(127.5).sub(1)).expandDims(0):"R"!==a&&"G"!==a&&"B"!==a||(u={R:0,G:1,B:2}[a],c=F(s.data,u),l=$l(c,[64,64],"float32").div(127.5).sub(1).expandDims(0).expandDims(-1)),h=Nl(r,[o,o,1,1]),d=ao(l,h,[1,1],"valid"),e.next=12,Eo(Va(d)).data();case 12:return i=e.sent[0],d=d.div(i),p=ul(d),e.next=17,d.squeeze().data();case 17:return N=e.sent,e.next=20,p.squeeze().data();case 20:for(T=e.sent,f=new ImageData(62,62),w=0;w<N.length;w++)k=N[w],I=void 0,C=void 0,S=void 0,k<0?(I=255,C=0+255*($=k+1),S=0+255*$):(I=255*(E=1-k),C=255*E,S=255),_=4*w,f.data[_]=Math.round(I),f.data[_+1]=Math.round(C),f.data[_+2]=Math.round(S),f.data[_+3]=255;for(D=new ImageData(62,62),O=0;O<T.length;O++)L=T[O],z=255*(M=1-L),P=255*M,B=4*O,D.data[B]=Math.round(z),D.data[B+1]=Math.round(P),D.data[B+2]=Math.round(255),D.data[B+3]=255;b.putImageData(f,0,0),y.putImageData(D,0,0),v.width=248,v.height=248,v.style.width="".concat(248,"px"),v.style.height="".concat(248,"px"),x.width=248,x.height=248,g.addEventListener("mousemove",(function(e){A(e,g,x,v,0,N,T)})),m.addEventListener("mousemove",(function(e){A(e,m,v,x,0,N,T)}));case 37:case"end":return e.stop()}}),e)}))),R.onerror=function(){console.error("Failed to load image. Check the image URL or CORS settings.")}},startMaxPooling:function(e){var t=e.container,n=e.imageSrc,r=e.filter,s=e.channel,a=void 0===s?"grayscale":s,i=Math.floor(31),o=Math.floor(31),l=4*i*2,u=4*o*2,c=0,h=document.getElementById(t),d=document.createElement("div");d.style.display="flex",d.style.alignItems="center",d.style.justifyContent="center",d.style.gap="20px",h.appendChild(d);var p=document.createElement("div");p.style.display="flex",p.style.flexDirection="column",p.style.alignItems="center";var f=document.createElement("div");f.style.position="relative",f.style.display="inline-block";var g=document.createElement("div");g.textContent="Entrada (".concat(62,", ").concat(62,")"),g.style.textAlign="center",g.style.marginBottom="5px";var m=document.createElement("div");m.style.display="flex",m.style.flexDirection="column",m.style.alignItems="center";var b=document.createElement("div");b.style.position="relative",b.style.display="inline-block";var y=document.createElement("div");y.textContent="Salida (".concat(i,", ").concat(o,")"),y.style.textAlign="center",y.style.marginBottom="5px";var x=document.createElement("canvas");x.width=62,x.height=62,x.style.width="".concat(248,"px"),x.style.height="".concat(248,"px"),x.style.border="1px solid black",x.style.imageRendering="pixelated",p.appendChild(g),f.appendChild(x),p.appendChild(f);var v=document.createElement("canvas");v.width=i,v.height=o,v.style.width="".concat(l,"px"),v.style.height="".concat(u,"px"),v.style.border="1px solid black",v.style.imageRendering="pixelated",m.appendChild(y),b.appendChild(v),m.appendChild(b);var w=x.getContext("2d");w.imageSmoothingEnabled=!1;var k=v.getContext("2d");k.imageSmoothingEnabled=!1;var I=document.createElement("canvas");I.width=x.width,I.height=x.height,I.style.width=x.style.width,I.style.height=x.style.height,I.style.position="absolute",I.style.left="0",I.style.top="0",I.style.pointerEvents="none",f.appendChild(I);var C=document.createElement("canvas");C.width=v.width,C.height=v.height,C.style.width=v.style.width,C.style.height=v.style.height,C.style.position="absolute",C.style.left="0",C.style.top="0",C.style.pointerEvents="none",b.appendChild(C),d.appendChild(p);var S,$,N,T,E,R,A,_=document.createElement("div");_.style.display="flex",_.style.alignItems="center",_.style.justifyContent="center",d.appendChild(_),d.appendChild(m),function(){(S=document.createElementNS("http://www.w3.org/2000/svg","svg")).setAttribute("width",240),S.setAttribute("height",100),_.appendChild(S),$=[],N=[];var e=2,t=document.createElementNS("http://www.w3.org/2000/svg","text");t.setAttribute("x",e),t.setAttribute("y",50),t.setAttribute("font-size","18px"),t.setAttribute("text-anchor","start"),t.setAttribute("dominant-baseline","middle"),t.textContent="max(",S.appendChild(t),e+=30;for(var n=0;n<2;n++)for(var r=0;r<2;r++){var s=e+50*r+15,a=5+50*n,i=document.createElementNS("http://www.w3.org/2000/svg","rect");i.setAttribute("x",s),i.setAttribute("y",a),i.setAttribute("width",40),i.setAttribute("height",40),i.setAttribute("fill","white"),i.setAttribute("stroke","black"),i.setAttribute("rx","2"),i.setAttribute("ry","2"),S.appendChild(i),$.push(i);var o=document.createElementNS("http://www.w3.org/2000/svg","text");o.setAttribute("x",s+20),o.setAttribute("y",a+20),o.setAttribute("font-size","14px"),o.setAttribute("text-anchor","middle"),o.setAttribute("dominant-baseline","middle"),o.textContent="0.00",S.appendChild(o),N.push(o)}e+=90;var l=document.createElementNS("http://www.w3.org/2000/svg","text");l.setAttribute("x",e+23),l.setAttribute("y",50),l.setAttribute("font-size","18px"),l.setAttribute("text-anchor","start"),l.setAttribute("dominant-baseline","middle"),l.textContent=")",S.appendChild(l),e+=10;var u=document.createElementNS("http://www.w3.org/2000/svg","text");u.setAttribute("x",e+23),u.setAttribute("y",50),u.setAttribute("font-size","18px"),u.setAttribute("text-anchor","start"),u.setAttribute("dominant-baseline","middle"),u.textContent="=",S.appendChild(u);var c=(e+=15)+32;(T=document.createElementNS("http://www.w3.org/2000/svg","rect")).setAttribute("x",c),T.setAttribute("y",30),T.setAttribute("width",40),T.setAttribute("height",40),T.setAttribute("fill","white"),T.setAttribute("stroke","black"),T.setAttribute("rx","2"),T.setAttribute("ry","2"),S.appendChild(T),(E=document.createElementNS("http://www.w3.org/2000/svg","text")).setAttribute("x",c+20),E.setAttribute("y",50),E.setAttribute("font-size","14px"),E.setAttribute("text-anchor","middle"),E.setAttribute("dominant-baseline","middle"),E.textContent="0.00",S.appendChild(E)}();var F=new Image;function D(e,t,n,r){var s=t.getBoundingClientRect(),a=e.clientX-s.left,i=e.clientY-s.top,o=Math.floor(a/4),l=Math.floor(i/4),u=t.width,c=t.height;if(o>=0&&o<u&&l>=0&&l<c){var h=Math.floor(o/2),d=Math.floor(l/2);L(n,o,l,2),M(r,h,d);for(var p=[],f=0;f<2;f++)for(var g=0;g<2;g++){var m=o-o%2+g,b=l-l%2+f;m<u&&b<c&&p.push(R[b][m])}P(p,Math.max.apply(Math,p))}}function O(e,t,n,r){var s=t.getBoundingClientRect(),a=e.clientX-s.left,i=e.clientY-s.top,o=Math.floor(a/4/2),l=Math.floor(i/4/2),u=t.width,c=t.height;if(o>=0&&o<u&&l>=0&&l<c){M(n,o,l);var h=2*o,d=2*l;L(r,h,d,2);for(var p=[],f=0;f<2;f++)for(var g=0;g<2;g++){var m=h+g,b=d+f;m<R[0].length&&b<R.length&&p.push(R[b][m])}P(p,A[l][o])}}function L(e,t,n,r){var s=e.getContext("2d");s.clearRect(0,0,e.width,e.height),s.save(),s.scale(4,4),s.fillStyle="rgba(64, 64, 64, 0.7)",s.fillRect(t-t%2+.125,n-n%2+.125,r,r),s.restore()}function M(e,t,n){var r=e.getContext("2d");r.clearRect(0,0,e.width,e.height),r.save(),r.scale(4,4),r.fillStyle="rgba(64, 64, 64, 0.7)",r.fillRect(t+.125,n+.125,1,1),r.restore()}function z(e,t){for(var n=new Float32Array(e.length/4),r=0;r<e.length;r+=4)n[r/4]=e[r+t];return n}function P(e,t){if(null===e)N.forEach((function(e){return e.textContent=""})),E.textContent="",$.forEach((function(e){return e.setAttribute("fill","lightgray")})),T.setAttribute("fill","lightgray");else{for(var n=0;n<e.length;n++){N[n].textContent=e[n].toFixed(2);var r=1-e[n],s=255*r,a=255*r;$[n].setAttribute("fill","rgb(".concat(Math.round(s),", ").concat(Math.round(a),", ").concat(Math.round(255),")"))}E.textContent=t.toFixed(2);var i=1-t,o=255*i,l=255*i;T.setAttribute("fill","rgb(".concat(Math.round(o),", ").concat(Math.round(l),", ").concat(Math.round(255),")"))}}F.src=n,F.crossOrigin="anonymous",F.onload=HO(VO().mark((function e(){var t,n,s,l,u,h,d,p,f,g,m,b,y,S,$,N,T,E,_,L,M,P,B,W,U,V,G;return VO().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return(t=document.createElement("canvas")).width=64,t.height=64,(n=t.getContext("2d",{willReadFrequently:!0})).drawImage(F,0,0,64,64),s=n.getImageData(0,0,64,64),l=Math.sqrt(r.length),"grayscale"===a?u=(u=oi(t,1).toFloat().div(127.5).sub(1)).expandDims(0):"R"!==a&&"G"!==a&&"B"!==a||(h={R:0,G:1,B:2}[a],d=z(s.data,h),u=$l(d,[64,64],"float32").div(127.5).sub(1).expandDims(0).expandDims(-1)),p=Nl(r,[l,l,1,1]),f=ao(u,p,[1,1],"valid"),e.next=12,Eo(Va(f)).data();case 12:return c=e.sent[0],f=f.div(c),g=ul(f),m=Vo(g,[2,2],[2,2],"valid"),e.next=18,g.squeeze().array();case 18:return R=e.sent,e.next=21,m.squeeze().array();case 21:for(A=e.sent,b=new ImageData(62,62),y=0;y<R.length;y++)for(S=0;S<R[0].length;S++)$=R[y][S],T=255*(N=1-$),E=255*N,_=4*(62*y+S),b.data[_]=Math.round(T),b.data[_+1]=Math.round(E),b.data[_+2]=Math.round(255),b.data[_+3]=255;for(L=new ImageData(i,o),M=0;M<A.length;M++)for(P=0;P<A[0].length;P++)B=A[M][P],U=255*(W=1-B),V=255*W,G=4*(M*i+P),L.data[G]=Math.round(U),L.data[G+1]=Math.round(V),L.data[G+2]=Math.round(255),L.data[G+3]=255;w.putImageData(b,0,0),k.putImageData(L,0,0),C.width=248,C.height=248,C.style.width="".concat(496,"px"),C.style.height="".concat(496,"px"),I.width=248,I.height=248,C.style.imageRendering="pixelated",C.imageSmoothingEnabled=!1,x.addEventListener("mousemove",(function(e){D(e,x,I,C)})),v.addEventListener("mousemove",(function(e){O(e,v,C,I)}));case 40:case"end":return e.stop()}}),e)}))),F.onerror=function(){console.error("Failed to load image. Check the image URL or CORS settings.")}},createCNNVisualizer:function(e){return NP.apply(this,arguments)}};window.CNNBlackBox=_P})()})();